Index: .idea/shelf/Uncommitted_changes_before_Update_at_7_14_21_1_55_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_7_14_21_1_55_PM_[Default_Changelist]/shelved.patch	(revision 771bcd4371bc13faa9050bfa2203e656e47b5184)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_7_14_21_1_55_PM_[Default_Changelist]/shelved.patch	(revision 771bcd4371bc13faa9050bfa2203e656e47b5184)
@@ -1,784 +0,0 @@
-Index: app/src/main/java/com/rifeng/p2p/activity/PressureTestActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.rifeng.p2p.activity;\n\nimport android.Manifest;\nimport android.annotation.SuppressLint;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.content.pm.PackageManager;\nimport android.graphics.Color;\nimport android.graphics.drawable.Drawable;\nimport android.os.Handler;\nimport android.text.TextUtils;\nimport android.util.DisplayMetrics;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.WindowManager;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.Spinner;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.core.content.ContextCompat;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.luck.picture.lib.PictureSelector;\nimport com.luck.picture.lib.animators.AnimationType;\nimport com.luck.picture.lib.app.PictureAppMaster;\nimport com.luck.picture.lib.config.PictureConfig;\nimport com.luck.picture.lib.config.PictureMimeType;\nimport com.luck.picture.lib.decoration.GridSpacingItemDecoration;\nimport com.luck.picture.lib.entity.LocalMedia;\nimport com.luck.picture.lib.entity.MediaExtraInfo;\nimport com.luck.picture.lib.language.LanguageConfig;\nimport com.luck.picture.lib.listener.OnResultCallbackListener;\nimport com.luck.picture.lib.style.PictureParameterStyle;\nimport com.luck.picture.lib.style.PictureSelectorUIStyle;\nimport com.luck.picture.lib.style.PictureWindowAnimationStyle;\nimport com.luck.picture.lib.tools.MediaUtils;\nimport com.luck.picture.lib.tools.SdkVersionUtils;\nimport com.rifeng.p2p.BuildConfig;\nimport com.rifeng.p2p.R;\nimport com.rifeng.p2p.adapter.GridImageAdapter;\nimport com.rifeng.p2p.adapter.PipCodeAdpater;\nimport com.rifeng.p2p.adapter.PressureTestAdaper;\nimport com.rifeng.p2p.adapter.RoundAdapter;\nimport com.rifeng.p2p.app.BaseApp;\nimport com.rifeng.p2p.db.DBManager;\nimport com.rifeng.p2p.entity.Agreement;\nimport com.rifeng.p2p.entity.LastDeviceTestId;\nimport com.rifeng.p2p.entity.LookupCode;\nimport com.rifeng.p2p.entity.Option;\nimport com.rifeng.p2p.entity.PipeCodeModel;\nimport com.rifeng.p2p.entity.PipeDiagramModel;\nimport com.rifeng.p2p.entity.PressureResultBean;\nimport com.rifeng.p2p.entity.PressureTestModel;\nimport com.rifeng.p2p.entity.UpdataUIEven;\nimport com.rifeng.p2p.entity.User;\nimport com.rifeng.p2p.http.RFException;\nimport com.rifeng.p2p.http.RFService;\nimport com.rifeng.p2p.http.RXHelper;\nimport com.rifeng.p2p.http.RetrofitFactory;\nimport com.rifeng.p2p.manager.DataManager;\nimport com.rifeng.p2p.manager.DeviceDataManager;\nimport com.rifeng.p2p.manager.PressureTestManager;\nimport com.rifeng.p2p.util.DisplayUtil;\nimport com.rifeng.p2p.util.LogToFileUtils;\nimport com.rifeng.p2p.util.ScreenAdaptUtil;\nimport com.rifeng.p2p.util.StringUtils;\nimport com.rifeng.p2p.util.ToastUtils;\nimport com.rifeng.p2p.util.VoiceUtils;\nimport com.rifeng.p2p.view.BluetoothListDialog;\nimport com.rifeng.p2p.view.RFNoticeDialog;\nimport com.rifeng.p2p.view.RFProgressHud;\nimport com.rifeng.p2p.viewmodel.BaseViewModel;\nimport com.rifeng.p2p.viewmodel.PressureTestViewModel;\nimport com.rifeng.p2p.widget.FullyGridLayoutManager;\nimport com.rifeng.p2p.widget.GlideCacheEngine;\nimport com.rifeng.p2p.widget.GlideEngine;\n\n\nimport java.io.IOException;\nimport java.lang.ref.WeakReference;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\nimport cn.fly2think.blelib.BroadcastEvent;\nimport cn.fly2think.blelib.RFStarBLEService;\nimport cn.fly2think.blelib.TransUtils;\nimport io.reactivex.functions.Action;\nimport io.reactivex.functions.Consumer;\n\npublic class PressureTestActivity extends BleActivity {\n\n    private RFNoticeDialog noticeDialog = null;\n\n    @BindView(R.id.text_toolbar_title)\n    TextView titleView;\n\n    @BindView(R.id.basic_data_open)\n    ImageView basicOpenImageView;\n\n    @BindView(R.id.pressure_test_open)\n    ImageView pressureTestImageView;\n    //basic data\n    @BindView(R.id.ll_basic_data)\n    LinearLayout basicDataContentLayout;\n\n    @BindView(R.id.pressure_test_content_bg_layout)\n    LinearLayout pressureTestContentBgLayout;\n\n    private final static String TAG = \"PictureSelectorTag\";\n    @BindView(R.id.basic_project_name)\n    EditText projectNameEditText;\n    @BindView(R.id.basic_address)\n    EditText addressEditText;\n    @BindView(R.id.basic_post_code)\n    EditText postCodeEditText;\n    @BindView(R.id.basic_test_date)\n    EditText testTimeEditText;\n    @BindView(R.id.basic_company)\n    EditText companyEditText;\n    @BindView(R.id.basic_pipe_brand_and_type)\n    EditText pipeBrandAndTypeEditText;\n\n    @BindView(R.id.basic_ccemail)\n    TextView ccEmailEditText;\n\n    @BindView(R.id.ccemail_bg_click_layout)\n    LinearLayout ccEmailBgLayout;\n\n    @BindView(R.id.spinner_testmethod)\n    Spinner testMethodSpinner;\n\n    //蓝牙\n    @BindView(R.id.blue_tooth_bg)\n    LinearLayout bluetoothBgLayout;\n\n\n    @BindView(R.id.bluetooth_connect_dot_view)\n    View bluetoothDotView;\n\n    @BindView(R.id.bluetooth_name_textView)\n    TextView bluetoothNameView;\n\n    @BindView(R.id.blue_tooth_connect_textView)\n    TextView bluetoothConnectView;\n\n\n    //电池\n    @BindView(R.id.battery_status_bg)\n    LinearLayout batteryStatusLayout;\n\n    @BindView(R.id.battery_dot_view)\n    View batteryDotView;\n\n    @BindView(R.id.battery_power_textview)\n    TextView batteryPowerTextview;\n\n    @BindView(R.id.battery_info_imageview)\n    ImageView batteryInfoImageView;\n\n    @BindView(R.id.battery_power_low_tip_textview)\n    TextView batteryPowerLowTipView;\n\n\n\n    @BindView(R.id.iv_base_back)\n    ImageView backImageView;\n\n    private GridImageAdapter mAdapter;\n\n\n\n    //管路图\n    @BindView(R.id.pipe_diagram_bg)\n    LinearLayout pipeDiagramBgLayout;\n\n//    @BindView(R.id.pipe_diagram_gridView)\n//    MyGridView pipeDiagramGridView;\n\n    //选择测压参数\n    @BindView(R.id.select_test_group_bg)\n    LinearLayout selectTestGroupLayout;\n\n    @BindView(R.id.tv_pressure_test)\n    TextView selectGroupCurrentPressureTextview;\n\n    @BindView(R.id.select_group_recyclerView)\n    RecyclerView selectGroupRecycleView;\n\n    //测压中layout\n    @BindView(R.id.testing_linear_layout)\n    LinearLayout testingLayout;\n    @BindView(R.id.round_recyclerView)\n    RecyclerView roundRecyclerView;\n    @BindView(R.id.current_pressure_num)\n    TextView currentPressureNumTextView;\n    @BindView(R.id.start_pressure_num)\n    TextView startPressureNumTextView;\n    @BindView(R.id.count_down_time_textview)\n    TextView countdownTextView;\n\n    @BindView(R.id.testing_reset_btn)\n    Button testingResetBtn;\n\n\n    @BindView(R.id.result_reset_btn)\n    Button resultResetBtn;\n\n    @BindView(R.id.pressure_button_save)\n    Button saveBtn;\n\n    @BindView(R.id.pressure_button_submit)\n    Button submitBtn;\n\n\n\n    //测试结果layout\n    @BindView(R.id.test_result_layout)\n    LinearLayout testResultLayout;\n\n    @BindView(R.id.tv_test_group)\n    TextView resultTestGroupTextView;\n\n    @BindView(R.id.tv_pre_at_start)\n    TextView resultStartPressureTextView;\n\n    @BindView(R.id.tv_pressure_at_end)\n    TextView resultEndtPressureTextView;\n\n    @BindView(R.id.tv_statu)\n    TextView resultTextView;\n\n    BluetoothListDialog bluetoothListDialog = null;\n\n    private boolean didGetParameter = false;\n\n\n    //管码\n    @BindView(R.id.pipe_code_layout)\n    LinearLayout pipeCodeBgLayout;\n    private PipCodeAdpater pipCodeAdpater;\n\n    //轮数adapter\n    private RoundAdapter roundAdapter;\n\n    private final int maxSelectNum = 12;\n\n\n\n//    private ArrayList<LookupCode> testMethodList = new ArrayList<LookupCode>();\n\n    private LookupCode currentSelectTestMethod;\n\n    private  boolean isShowBasicData = true;\n\n    private  boolean isShowPressureContent = true;\n\n    private final PressureTestModel pressureTestMdoel = new PressureTestModel();\n\n\n    private PressureTestAdaper selectGroupAdapter;\n\n\n    private static final int ACTION_REQUEST_PERMISSIONS = 0x001;\n    /**\n     //     * 没有权限时，点击GridView时点击的位置和路径，这2个默认值是0和\n     */\n    /**\n     * 需要的权限\n     * 本来读写权限获取其中一只另外一个就也获取了（一个权限组的），随着安卓系统更新，只获取读不行了。\n     */\n    private static final String[] NEEDED_PERMISSIONS = new String[]{\n            Manifest.permission.WRITE_EXTERNAL_STORAGE,\n            Manifest.permission.CAMERA,\n            Manifest.permission.READ_EXTERNAL_STORAGE};\n    private int gridViewItemClickPosition;\n    private String gridViewItemClickPath;\n    /**\n     * 允许上传照片最大数量\n     */\n    private static final int INT_MAXSIZE_IMG = 12;\n\n\n\n    //pipe code\n    @BindView(R.id.pipecode_recyclerView)\n    RecyclerView pipeCodeRecyclerView;\n\n    @BindView(R.id.add_pipecode)\n    ImageView addPipeCodeImageView;\n\n    @BindView(R.id.add_pipecode_editText)\n    EditText addPipeCodeEditText;\n    @BindView(R.id.pipediagram_recycler)\n    RecyclerView mRecyclerView;\n\n\n    private VoiceUtils voiceUtils;\n\n\n\n    @Override\n    protected int initLayout() {\n        return R.layout.pressure_test_layout;\n    }\n\n    @Override\n    protected void initView() {\n\n\n        testTimeEditText.setEnabled(false);\n        companyEditText.setEnabled(false);\n        submitBtn.setEnabled(false);\n        submitBtn.setBackgroundDrawable(getResources().getDrawable(R.drawable.submit_btn_disable_bg));\n        basicOpenImageView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                isShowBasicData = !isShowBasicData;\n                if (isShowBasicData){\n                    basicDataContentLayout.setVisibility(View.VISIBLE);\n                    basicOpenImageView.setImageResource(R.mipmap.shrink);\n                }else{\n                    basicDataContentLayout.setVisibility(View.GONE);\n                    basicOpenImageView.setImageResource(R.mipmap.unfold);\n                }\n            }\n        });\n\n        pressureTestImageView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                isShowPressureContent = !isShowPressureContent;\n                if (isShowPressureContent){\n                    pressureTestContentBgLayout.setVisibility(View.VISIBLE);\n                    pressureTestImageView.setImageResource(R.mipmap.shrink);\n                }else{\n                    pressureTestContentBgLayout.setVisibility(View.GONE);\n                    pressureTestImageView.setImageResource(R.mipmap.unfold);\n                }\n\n            }\n        });\n\n        testMethodSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n            @Override\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\n                String methodCode = PressureTestManager.getInstance().testMethodList.get(position).getItem_code();\n                String testMethod = PressureTestManager.getInstance().testMethodList.get(position).getItem_name();\n                currentSelectTestMethod = PressureTestManager.getInstance().testMethodList.get(position);\n\n                TextView view = (TextView) selectedItemView;\n                if (testMethod.equals(PressureTestViewModel.DEFAULT_TEST_MTTHOD)){\n                    view.setTextColor(ContextCompat.getColor(PressureTestActivity.this, R.color.Color_Word25));\n                }else{\n                    view.setTextColor(ContextCompat.getColor(PressureTestActivity.this, R.color.Color_Word85));\n                }\n\n                PressureTestManager.getInstance().currentPressureTestModel.setTestMethod(testMethod);\n                PressureTestManager.getInstance().currentPressureTestModel.setTestMethodCode(methodCode);\n                // mAgent.setTestMethod(methodCode);\n            }\n\n\n            @Override\n            public void onNothingSelected(AdapterView<?> parentView) {\n\n            }\n\n        });\n\n        bluetoothBgLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n//                startActivityForResult(new Intent(PressureTestActivity.this, BluetoothActivity.class), 111);\n\n                if (PressureTestManager.getInstance().isBluetoothConnected()){\n                    //已经连接就断开连接\n                    PressureTestManager.getInstance().disconnectBlueTooth();\n                    updateCurrentState();\n                }else{\n\n                    //如果没有连接就弹出连接蓝牙框\n                    DisplayMetrics dm = new DisplayMetrics();\n                    WindowManager m = getWindowManager();\n                    m.getDefaultDisplay().getMetrics(dm);\n\n\n                    bluetoothListDialog = new BluetoothListDialog(PressureTestActivity.this, R.style.Dialog, new BluetoothListDialog.BluetoothDialogListener() {\n                        @Override\n                        public void didSelectBluetooth() {\n                            //刷新当前UI\n                            updateCurrentState();\n                        }\n                    });\n                    //dayMeetingListView.setMeetingList(meetingList);\n                    final WindowManager.LayoutParams params = bluetoothListDialog.getWindow().getAttributes();\n                    bluetoothListDialog.show();\n                    params.width = dm.widthPixels - DisplayUtil.dp2px(PressureTestActivity.this, 12);\n                    params.height = DisplayUtil.dp2px(PressureTestActivity.this, 391);\n                    bluetoothListDialog.getWindow().setAttributes(params);\n                }\n\n            }\n        });\n\n\n        //添加管码\n        addPipeCodeImageView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                String code = addPipeCodeEditText.getText().toString();\n\n                addPipeCodeEditText.setText(\"\");\n\n                if (\"\".equals(code) || null == code){\n                    RFProgressHud.showErrorMsg(PressureTestActivity.this, \"Code can not be null!\");\n                    return;\n                }\n\n               ArrayList<String> pipeCodeList =  PressureTestManager.getInstance().currentPressureTestModel.getPipeCodeList();\n\n                if (pipeCodeList.size() >= 10){\n                    RFProgressHud.showErrorMsg(PressureTestActivity.this, \"Enter up to 10 pipecodes!\");\n                    return;\n                }\n\n\n               for (String str : pipeCodeList){\n                   if (str.equals(code)){\n                       RFProgressHud.showErrorMsg(PressureTestActivity.this, \"Code Exist!\");\n\n                       return;\n                   }\n               }\n\n\n                pipeCodeList.add(code);\n                pipCodeAdpater.notifyDataSetChanged();\n            }\n        });\n\n        testingResetBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n               resetDevice(true);\n               resetTestModel();\n\n                RFProgressHud.showSuccessMsg(PressureTestActivity.this, getResources().getString(R.string.Reset_Successfully));\n            }\n        });\n\n        resultResetBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                resetDevice(true);\n                resetTestModel();\n\n                RFProgressHud.showSuccessMsg(PressureTestActivity.this,  getResources().getString(R.string.Reset_Successfully));\n            }\n        });\n\n        saveBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                savePressureTestModel();\n                RFProgressHud.showSuccessMsg(PressureTestActivity.this, getString(R.string.pressuretest_save_success));\n            }\n        });\n\n        submitBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                //提交前先保存\n                savePressureTestModel();\n\n                //提交数据\n                submitPressureTestData();\n\n\n                   // submitImageData();\n            }\n        });\n\n\n        backImageView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                PressureTestActivity.this.finish();\n            }\n        });\n\n        ccEmailBgLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //传值\n                Intent foremanIntent = new Intent(PressureTestActivity.this, ForeManActivity.class);\n                startActivityForResult(foremanIntent, 1);\n            }\n        });\n\n        ccEmailEditText.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //传值\n                Intent foremanIntent = new Intent(PressureTestActivity.this, ForeManActivity.class);\n                startActivityForResult(foremanIntent, 1);\n            }\n        });\n\n\n        //设置选择组别adapter\n        setupSelectGroupRecyclerView();\n\n        //设置管码adapter\n        setupPipecodeRecyclerView();\n\n        //设置轮数adapter\n        setupRoundRecyclerView();\n\n//        //设置pipediagram\n//        setImageSelectEvent();\n        setPipeDiagramView();\n\n        voiceUtils = new VoiceUtils(this);\n\n\n    }\n\n    private void resetDevice(boolean isShowLoading) {\n\n        if (isShowLoading){\n            RFProgressHud.showLoading(PressureTestActivity.this, \"reseting\");\n        }\n\n        //重置试压仪\n        DeviceDataManager.getInstance().resetDevice(new DeviceDataManager.DeviceDataManagerListener() {\n            @Override\n            public void success() {\n                if (isShowLoading) {\n                    RFProgressHud.hideDialog();\n                }\n            }\n\n            @Override\n            public void fail() {\n            }\n        });\n    }\n\n    //提交数据\n    public void submitPressureTestData(){\n\n        if (!checkPressureTestData()){\n            return;\n        }\n\n\n        RFProgressHud.showLoading(PressureTestActivity.this, \"submiting...\");\n        PressureTestViewModel vm = new PressureTestViewModel();\n        vm.setCurrentActivity(this);\n        vm.submitPressureTestData(new BaseViewModel.ViewModelListener() {\n            @Override\n            public void success(String msg) {\n                RFProgressHud.hideDialog();\n                //保存testId\n                PressureTestManager.getInstance().currentPressureTestModel.setTestId(msg);\n                savePressureTestModel();\n                submitImageData();\n\n            }\n\n            @Override\n            public void fail(String msg, BaseViewModel.ReturnCode code) {\n                RFProgressHud.hideDialog();\n                RFProgressHud.showErrorMsg(PressureTestActivity.this, msg);\n            }\n\n            @Override\n            public void finish() {\n\n            }\n        });\n\n    }\n\n    private Boolean checkPressureTestData() {\n\n        if(PressureTestManager.getInstance().currentPressureTestModel.getTestMethod().equals(getResources().getString(R.string.test_method))){\n            showToast(getString(R.string.test_method_cant_empty));\n            return false;\n        }\n        return true;\n    }\n\n    private void submitImageData()  {\n\n\n        RFProgressHud.showLoading(PressureTestActivity.this, \"upload image...\");\n        PressureTestViewModel vm = new PressureTestViewModel();\n        vm.setCurrentActivity(this);\n        vm.uploadDiagrams(new BaseViewModel.ViewModelListener() {\n            @Override\n            public void success(String msg) {\n\n                //成功后删除本地数据\n                deleteCurrentPressureTest();\n                RFProgressHud.hideDialog();\n                RFProgressHud.showSuccessMsg(PressureTestActivity.this, \"submit success\", new RFProgressHud.RFProgressHudListener() {\n                    @Override\n                    public void didCloseHub() {\n                        PressureTestActivity.this.finish();\n                    }\n                });\n            }\n\n            @Override\n            public void fail(String msg, BaseViewModel.ReturnCode code) {\n                RFProgressHud.hideDialog();\n                RFProgressHud.showErrorMsg(PressureTestActivity.this, msg);\n            }\n\n            @Override\n            public void finish() {\n\n            }\n        });\n\n    }\n\n    private void deleteCurrentPressureTest() {\n\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n        DBManager.getInstance(BaseApp.getInstance()).clearPipeDiagramByTempTestId(currentModel.getTempTestId());\n        DBManager.getInstance(BaseApp.getInstance()).clearPipeCodeByTempTestId(currentModel.getTempTestId());\n        DBManager.getInstance(BaseApp.getInstance()).clearPressureResultByTempTestId(currentModel.getTempTestId());\n        DBManager.getInstance(BaseApp.getInstance()).delete(currentModel);\n    }\n\n    @Override\n    protected void initData() {\n\n        DataManager.getInstance().didGetResult = false;\n\n        titleView.setText(getString(R.string.pressuretest_title));\n        retestEnter();\n\n        //获取testMethod\n        requestTestMethod();\n\n        //获取试压参数\n        getUserAgencyPressureInfo();\n        //填充数据\n        initBasicData();\n\n        updateTestDate();\n\n        //刷新当前UI\n        updateCurrentState();\n    }\n\n    @Override\n    public void onStart() {\n        super.onStart();\n\n        //设置监听蓝牙发送的数据\n        DeviceDataManager.getInstance().setUpdateDataListener(new DeviceDataManager.OnUpdateDataListener() {\n            @Override\n            public void updateDataListener(byte[] datas) {\n                forwardData(datas);\n            }\n\n            @Override\n            public void goResult(String result) {\n\n                updateCurrentState();\n\n            }\n\n            @Override\n            public void getResule4Wating() {\n\n            }\n\n            @Override\n            public void testPass() {\n                Log.i(\"======\", \"testPass call\");\n                PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n\n                DeviceDataManager.getInstance().isReadDeviceStatus = false;\n                currentModel.resultList.clear();\n                currentModel.resultList.addAll(DBManager.getInstance(BaseApp.getInstance()).getResultListByTempTestId(currentModel.getTempTestId()));\n                if (currentModel.resultList.size() == currentModel.optionList.size()){\n                    updateCurrentPressureModelStatus(\"3\");\n                }\n\n                Log.i(\"======\", \"testPass call\");\n                Log.i(\"======\", \"resultList:\" + currentModel.resultList.size());\n                Log.i(\"======\", \"optionList:\" + currentModel.optionList.size());\n                resetDevice(false);\n\n                updateCurrentState();\n\n            }\n\n            @Override\n            public void testFail() {\n\n                DeviceDataManager.getInstance().isReadDeviceStatus = false;\n                updateCurrentPressureModelStatus(\"2\");\n                updateCurrentState();\n\n                resetDevice(false);\n            }\n\n            @Override\n            public void didConnectBlueTooth() {\n\n                RFProgressHud.showLoading(PressureTestActivity.this, \"waiting device init...\");\n\n            }\n\n            @Override\n            public void didGetDeviceUniqueCode() {\n\n                RFProgressHud.hideDialog();\n\n                Log.i(\"=====单据状态：\", PressureTestManager.getInstance().currentPressureTestModel.getCurrentState());\n                Log.i(\"=====设备状态：\", DeviceDataManager.getInstance().currentDeviceModel.deviceStatus);\n\n                //连接到设备，校验完设备唯一码， 判断是否当前单据\n                //设备不是空闲状态\n                if ( !\"0\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus)) {\n\n                    //当前单据如果不是最后的测试单据， 弹框重置\n                    if (!PressureTestManager.getInstance().isLastTest()){\n                        DeviceDataManager.getInstance().isReadDeviceStatus = false;\n                        Log.i(\"======\",\"\" + DeviceDataManager.getInstance().currentDeviceModel.deviceStatus);\n                        showNoticeDialog();\n\n\n\n                    }else{\n                        //如果是当前单据，但是是点retest进来\n                        if (PressureTestManager.getInstance().enterType == PressureTestManager.EnterType.EnterTypeRetest){\n\n                            resetDevice(true);\n                            DeviceDataManager.getInstance().isReadDeviceStatus = true;\n                        }else{\n                            DeviceDataManager.getInstance().isReadDeviceStatus = true;\n                        }\n\n                    }\n\n                }\n\n                String tmp = DeviceDataManager.getInstance().currentDeviceModel.deviceUniqueCode;\n                RFService mRFService = RetrofitFactory.getInstance();\n                mRFService.getDeviceCheck(tmp, DataManager.getInstance().getUser().getUserId())\n                        .compose(RXHelper.RFFlowableTransformer())\n                        .subscribe(new Consumer<String>() {\n                            @Override\n                            public void accept(String str) throws Exception {\n\n                                DataManager.getInstance().IS_DEVICEID_UPDATE = true;\n                                PressureTestManager.getInstance().currentPressureTestModel.setDeviceUniqueId(tmp);\n                                savePressureTestModel();\n                                didCheckUniqueCode();\n                                Log.e(\"===getDeviceCheck\", \"success\");\n\n                            }\n                        }, new Consumer<Throwable>() {\n                            @Override\n                            public void accept(@io.reactivex.annotations.NonNull Throwable t) throws Exception {\n                                String msg;\n                                if (t instanceof IOException) {\n                                    msg = \"Net Error,Please Try Later!\";\n                                } else if (t instanceof RFException) {\n                                    msg = t.getMessage();\n                                } else {\n                                    if (BuildConfig.DEBUG) {\n                                        msg = t.getStackTrace().toString();\n                                    } else\n                                        msg = \"Unknow Error,Please Try Later!\";\n                                }\n\n                                DataManager.getInstance().IS_DEVICEID_UPDATE = true;\n\n                                if (BuildConfig.DEBUG) {\n                                    t.printStackTrace();\n                                }\n                            }\n                        }, new Action() {\n                            @Override\n                            public void run() throws Exception {\n\n                            }\n                        });\n\n                updateCurrentState();\n            }\n            public void didCheckUniqueCode(){\n\n\n            }\n        });\n\n    }\n\n\n    private final GridImageAdapter.onAddPicClickListener onAddPicClickListener = new GridImageAdapter.onAddPicClickListener() {\n        @Override\n        public void onAddPicClick() {\n//            boolean mode = cb_mode.isChecked();\n            if (true) {  //相册or单独拍照\n                System.out.println(\"点击添加\");\n                // 进入相册 以下是例子：不需要的api可以不写\n                PictureSelector.create(PressureTestActivity.this)\n                        .openGallery(PictureMimeType.ofAll())// 全部.PictureMimeType.ofAll()、图片.ofImage()、视频.ofVideo()、音频.ofAudio()\n                        .imageEngine(GlideEngine.createGlideEngine())// 外部传入图片加载引擎，必传项\n                        //.theme(themeId)// 主题样式设置 具体参考 values/styles   用法：R.style.picture.white.style v2.3.3后 建议使用setPictureStyle()动态方式\n                        .setPictureUIStyle(PictureSelectorUIStyle.ofDefaultStyle())\n                        //.setPictureStyle(mPictureParameterStyle)// 动态自定义相册主题\n                        //.setPictureCropStyle(mCropParameterStyle)// 动态自定义裁剪主题\n                        .setPictureWindowAnimationStyle(PictureWindowAnimationStyle.ofDefaultWindowAnimationStyle())// 自定义相册启动退出动画\n                        .isWeChatStyle(true)// 是否开启微信图片选择风格\n                        .isUseCustomCamera(true)// 是否使用自定义相机\n                        .setLanguage(LanguageConfig.ENGLISH)// 设置语言，默认中文\n                        .isPageStrategy(true)// 是否开启分页策略 & 每页多少条；默认开启\n                        .setRecyclerAnimationMode(AnimationType.DEFAULT_ANIMATION)// 列表动画效果\n                        .isWithVideoImage(true)// 图片和视频是否可以同选,只在ofAll模式下有效\n                        //.isSyncCover(true)// 是否强制从MediaStore里同步相册封面，如果相册封面没显示异常则没必要设置\n                        //.isCameraAroundState(false) // 是否开启前置摄像头，默认false，如果使用系统拍照 可能部分机型会有兼容性问题\n                        //.isCameraRotateImage(false) // 拍照图片旋转是否自动纠正\n                        //.isAutoRotating(false)// 压缩时自动纠正有旋转的图片\n                        .isMaxSelectEnabledMask(true)// 选择数到了最大阀值列表是否启用蒙层效果\n                        //.isAutomaticTitleRecyclerTop(false)// 连续点击标题栏RecyclerView是否自动回到顶部,默认true\n                        //.loadCacheResourcesCallback(GlideCacheEngine.createCacheEngine())// 获取图片资源缓存，主要是解决华为10部分机型在拷贝文件过多时会出现卡的问题，这里可以判断只在会出现一直转圈问题机型上使用\n                        //.setOutputCameraPath(createCustomCameraOutPath())// 自定义相机输出目录\n                        //.setButtonFeatures(CustomCameraView.BUTTON_STATE_BOTH)// 设置自定义相机按钮状态\n                        .setCaptureLoadingColor(ContextCompat.getColor(PressureTestActivity.this, R.color.Color_Main))\n                        .maxSelectNum(12)// 最大图片选择数量\n                        .minSelectNum(1)// 最小选择数量\n                        .maxVideoSelectNum(0) // 视频最大选择数量\n                        //.minVideoSelectNum(1)// 视频最小选择数量\n                        //.closeAndroidQChangeVideoWH(!SdkVersionUtils.checkedAndroid_Q())// 关闭在AndroidQ下获取图片或视频宽高相反自动转换\n                        .imageSpanCount(3)// 每行显示个数\n                        //.queryFileSize() // 过滤最大资源,已废弃\n                        //.filterMinFileSize(5)// 过滤最小资源，单位kb\n                        //.filterMaxFileSize()// 过滤最大资源，单位kb\n                        .isReturnEmpty(false)// 未选择数据时点击按钮是否可以返回\n                        .closeAndroidQChangeWH(true)//如果图片有旋转角度则对换宽高,默认为true\n                        .closeAndroidQChangeVideoWH(!SdkVersionUtils.checkedAndroid_Q())// 如果视频有旋转角度则对换宽高,默认为false\n                        .isAndroidQTransform(true)// 是否需要处理Android Q 拷贝至应用沙盒的操作，只针对compress(false); && .isEnableCrop(false);有效,默认处理\n                        .setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED)// 设置相册Activity方向，不设置默认使用系统\n                        .isOriginalImageControl(true)// 是否显示原图控制按钮，如果设置为true则用户可以自由选择是否使用原图，压缩、裁剪功能将会失效\n                        .isAutoScalePreviewImage(false)// 如果图片宽度不能充满屏幕则自动处理成充满模式\n                        //.bindCustomPlayVideoCallback(new MyVideoSelectedPlayCallback(getContext()))// 自定义视频播放回调控制，用户可以使用自己的视频播放界面\n                        //.bindCustomPreviewCallback(new MyCustomPreviewInterfaceListener())// 自定义图片预览回调接口\n                        //.bindCustomCameraInterfaceListener(new MyCustomCameraInterfaceListener())// 提供给用户的一些额外的自定义操作回调\n                        //.bindCustomPermissionsObtainListener(new MyPermissionsObtainCallback())// 自定义权限拦截\n                        //.bindCustomChooseLimitListener(new MyChooseLimitCallback()) // 自定义选择限制条件Dialog\n                        //.cameraFileName(System.currentTimeMillis() +\".jpg\")    // 重命名拍照文件名、如果是相册拍照则内部会自动拼上当前时间戳防止重复，注意这个只在使用相机时可以使用，如果使用相机又开启了压缩或裁剪 需要配合压缩和裁剪文件名api\n                        //.renameCompressFile(System.currentTimeMillis() +\".jpg\")// 重命名压缩文件名、 如果是多张压缩则内部会自动拼上当前时间戳防止重复\n                        //.renameCropFileName(System.currentTimeMillis() + \".jpg\")// 重命名裁剪文件名、 如果是多张裁剪则内部会自动拼上当前时间戳防止重复\n                        .selectionMode(PictureConfig.MULTIPLE) // 多选 or 单选\n                        .isPreviewImage(true)// 是否可预览图片\n                        .isPreviewVideo(true)// 是否可预览视频\n                        //.querySpecifiedFormatSuffix(PictureMimeType.ofJPEG())// 查询指定后缀格式资源\n                        //.queryMimeTypeConditions(PictureMimeType.ofWEBP())\n                        .isEnablePreviewAudio(true) // 是否可播放音频\n                        .isCamera(true)// 是否显示拍照按钮\n                        //.isMultipleSkipCrop(false)// 多图裁剪时是否支持跳过，默认支持\n                        //.isMultipleRecyclerAnimation(false)// 多图裁剪底部列表显示动画效果\n                        .isZoomAnim(false)// 图片列表点击 缩放效果 默认true\n                        //.imageFormat(PictureMimeType.PNG)// 拍照保存图片格式后缀,默认jpeg,Android Q使用PictureMimeType.PNG_Q\n                        .isEnableCrop(false)// 是否裁剪\n                        //.basicUCropConfig()//对外提供所有UCropOptions参数配制，但如果PictureSelector原本支持设置的还是会使用原有的设置\n                        .isCompress(true)// 是否压缩\n                        //.compressFocusAlpha(true)// 压缩时是否开启透明通道\n                        //.compressEngine(ImageCompressEngine.createCompressEngine()) // 自定义压缩引擎\n                        //.compressQuality(80)// 图片压缩后输出质量 0~ 100\n                        .synOrAsy(false)//同步true或异步false 压缩 默认同步\n                        //.queryMaxFileSize(10)// 只查多少M以内的图片、视频、音频  单位M\n                        //.compressSavePath(getPath())//压缩图片保存地址\n                        //.sizeMultiplier(0.5f)// glide 加载图片大小 0~1之间 如设置 .glideOverride()无效 注：已废弃\n                        //.glideOverride(160, 160)// glide 加载宽高，越小图片列表越流畅，但会影响列表图片浏览的清晰度 注：已废弃\n//\n                        .hideBottomControls(false)// 是否显示uCrop工具栏，默认不显示\n                        .isGif(false)// 是否显示gif图片\n                        //.isWebp(false)// 是否显示webp图片,默认显示\n                        //.isBmp(false)//是否显示bmp图片,默认显示\n                        .freeStyleCropEnabled(false)// 裁剪框是否可拖拽\n                        .circleDimmedLayer(false)// 是否圆形裁剪\n                        //.setCropDimmedColor(ContextCompat.getColor(getContext(), R.color.app_color_white))// 设置裁剪背景色值\n                        //.setCircleDimmedBorderColor(ContextCompat.getColor(getApplicationContext(), R.color.app_color_white))// 设置圆形裁剪边框色值\n                        //.setCircleStrokeWidth(3)// 设置圆形裁剪边框粗细\n                        .showCropFrame(false)// 是否显示裁剪矩形边框 圆形裁剪时建议设为false\n                        .showCropGrid(false)// 是否显示裁剪矩形网格 圆形裁剪时建议设为false\n                        .isOpenClickSound(false)// 是否开启点击声音\n                        .selectionData(mAdapter.getData())// 是否传入已选图片\n                        //.isDragFrame(false)// 是否可拖动裁剪框(固定)\n                        //.videoMinSecond(10)// 查询多少秒以内的视频\n                        //.videoMaxSecond(15)// 查询多少秒以内的视频\n                        //.recordVideoSecond(10)//录制视频秒数 默认60s\n                        //.isPreviewEggs(true)// 预览图片时 是否增强左右滑动图片体验(图片滑动一半即可看到上一张是否选中)\n                        //.cropCompressQuality(90)// 注：已废弃 改用cutOutQuality()\n                        .cutOutQuality(90)// 裁剪输出质量 默认100\n                        //.cutCompressFormat(Bitmap.CompressFormat.PNG.name())//裁剪图片输出Format格式，默认JPEG\n                        .minimumCompressSize(100)// 小于多少kb的图片不压缩\n                        //.cropWH()// 裁剪宽高比，设置如果大于图片本身宽高则无效\n                        //.cropImageWideHigh()// 裁剪宽高比，设置如果大于图片本身宽高则无效\n                        //.rotateEnabled(false) // 裁剪是否可旋转图片\n                        .scaleEnabled(false)// 裁剪是否可放大缩小图片\n                        .scaleEnabled(false)// 裁剪是否可放大缩小图片\n                        //.videoQuality()// 视频录制质量 0 or 1\n                        //.forResult(PictureConfig.CHOOSE_REQUEST);//结果回调onActivityResult code\n                        .forResult(new MyResultCallback(mAdapter));\n            } else {\n                // 单独拍照\n                PictureSelector.create(PressureTestActivity.this)\n                        .openCamera(PictureMimeType.ofAll())// 单独拍照，也可录像或也可音频 看你传入的类型是图片or视频\n//                        .theme(themeId)// 主题样式设置 具体参考 values/styles\n                        .imageEngine(GlideEngine.createGlideEngine())// 外部传入图片加载引擎，必传项\n//                        .setPictureStyle(mPictureParameterStyle)// 动态自定义相册主题\n//                        .setPictureCropStyle(mCropParameterStyle)// 动态自定义裁剪主题\n                        .setPictureWindowAnimationStyle(PictureWindowAnimationStyle.ofDefaultWindowAnimationStyle())// 自定义相册启动退出动画\n//                        .maxSelectNum(maxSelectNum)// 最大图片选择数量\n//                        .isUseCustomCamera(cb_custom_camera.isChecked())// 是否使用自定义相机\n                        //.setOutputCameraPath()// 自定义相机输出目录\n                        .minSelectNum(1)// 最小选择数量\n                        //.querySpecifiedFormatSuffix(PictureMimeType.ofPNG())// 查询指定后缀格式资源\n                        .closeAndroidQChangeWH(true)//如果图片有旋转角度则对换宽高，默认为true\n                        .closeAndroidQChangeVideoWH(!SdkVersionUtils.checkedAndroid_Q())// 如果视频有旋转角度则对换宽高，默认false\n                        .selectionMode(PictureConfig.MULTIPLE )// 多选 or 单选\n                        //.cameraFileName(System.currentTimeMillis() + \".jpg\")// 使用相机时保存至本地的文件名称,注意这个只在拍照时可以使用\n                        //.renameCompressFile(System.currentTimeMillis() + \".jpg\")// 重命名压缩文件名、 注意这个不要重复，只适用于单张图压缩使用\n                        //.renameCropFileName(System.currentTimeMillis() + \".jpg\")// 重命名裁剪文件名、 注意这个不要重复，只适用于单张图裁剪使用\n                        .loadCacheResourcesCallback(GlideCacheEngine.createCacheEngine())// 获取图片资源缓存，主要是解决华为10部分机型在拷贝文件过多时会出现卡的问题，这里可以判断只在会出现一直转圈问题机型上使用\n                        .isPreviewImage(true)// 是否可预览图片\n                        .isPreviewVideo(true)// 是否可预览视频\n                        .isEnablePreviewAudio(true) // 是否可播放音频\n                        .isCamera(true)// 是否显示拍照按钮\n                        .isAndroidQTransform(true)// 是否需要处理Android Q 拷贝至应用沙盒的操作，只针对compress(false); && .isEnableCrop(false);有效,默认处理\n                        .isEnableCrop(false)// 是否裁剪\n                        //.basicUCropConfig()//对外提供所有UCropOptions参数配制，但如果PictureSelector原本支持设置的还是会使用原有的设置\n                        .isCompress(true)// 是否压缩\n                        .compressQuality(60)// 图片压缩后输出质量\n                        .glideOverride(160, 160)// glide 加载宽高，越小图片列表越流畅，但会影响列表图片浏览的清晰度\n//                        .withAspectRatio(aspect_ratio_x, aspect_ratio_y)// 裁剪比例 如16:9 3:2 3:4 1:1 可自定义\n                        .hideBottomControls(false)// 是否显示uCrop工具栏，默认不显示\n//                        .isGif(cb_isGif.isChecked())// 是否显示gif图片\n                        .freeStyleCropEnabled(false)// 裁剪框是否可拖拽\n//                        .circleDimmedLayer(cb_crop_circular.isChecked())// 是否圆形裁剪\n                        //.setCircleDimmedColor(ContextCompat.getColor(this, R.color.app_color_white))// 设置圆形裁剪背景色值\n                        //.setCircleDimmedBorderColor(ContextCompat.getColor(this, R.color.app_color_white))// 设置圆形裁剪边框色值\n                        //.setCircleStrokeWidth(3)// 设置圆形裁剪边框粗细\n                        .showCropFrame(false)// 是否显示裁剪矩形边框 圆形裁剪时建议设为false\n                        .showCropGrid(false)// 是否显示裁剪矩形网格 圆形裁剪时建议设为false\n                        .isOpenClickSound(true)// 是否开启点击声音\n                        .selectionData(mAdapter.getData())// 是否传入已选图片\n                        .isAutoScalePreviewImage(false)// 如果图片宽度不能充满屏幕则自动处理成充满模式\n                        //.isPreviewEggs(true)// 预览图片时 是否增强左右滑动图片体验(图片滑动一半即可看到上一张是否选中)\n                        //.cropCompressQuality(90)// 废弃 改用cutOutQuality()\n                        .cutOutQuality(90)// 裁剪输出质量 默认100\n                        .minimumCompressSize(100)// 小于100kb的图片不压缩\n                        //.cropWH()// 裁剪宽高比，设置如果大于图片本身宽高则无效\n                        //.cropImageWideHigh()// 裁剪宽高比，设置如果大于图片本身宽高则无效\n                        //.rotateEnabled() // 裁剪是否可旋转图片\n                        //.scaleEnabled()// 裁剪是否可放大缩小图片\n                        //.videoQuality()// 视频录制质量 0 or 1\n                        //.forResult(PictureConfig.CHOOSE_REQUEST);//结果回调onActivityResult code\n                        .forResult(new MyResultCallback(mAdapter));\n            }\n        }\n    };\n\n    /**\n     * 返回结果回调\n     */\n    private static class MyResultCallback implements OnResultCallbackListener<LocalMedia> {\n\n        private final WeakReference<GridImageAdapter> mAdapterWeakReference;\n//\n        public MyResultCallback(GridImageAdapter adapter) {\n            super();\n            this.mAdapterWeakReference = new WeakReference<>(adapter);\n        }\n\n        @Override\n        public void onResult(List<LocalMedia> result) {\n\n\n            PressureTestModel currentModel =  PressureTestManager.getInstance().currentPressureTestModel;\n            PressureTestManager.getInstance().currentPressureTestModel.getPipeDiagramList().clear();\n\n            for (LocalMedia media : result) {\n                if (media.getWidth() == 0 || media.getHeight() == 0) {\n                    if (PictureMimeType.isHasImage(media.getMimeType())) {\n                        MediaExtraInfo imageExtraInfo = MediaUtils.getImageSize(media.getPath());\n                        media.setWidth(imageExtraInfo.getWidth());\n                        media.setHeight(imageExtraInfo.getHeight());\n                    } else if (PictureMimeType.isHasVideo(media.getMimeType())) {\n                        MediaExtraInfo videoExtraInfo = MediaUtils.getVideoSize(PictureAppMaster.getInstance().getAppContext(), media.getPath());\n                        media.setWidth(videoExtraInfo.getWidth());\n                        media.setHeight(videoExtraInfo.getHeight());\n                    }\n                }\n\n                //加入到model\n                currentModel.getPipeDiagramList().add(new PipeDiagramModel(media, currentModel.getTempTestId()));\n\n\n\n\n                Log.i(TAG, \"文件名: \" + media.getFileName());\n                Log.i(TAG, \"是否压缩:\" + media.isCompressed());\n                Log.i(TAG, \"压缩:\" + media.getCompressPath());\n                Log.i(TAG, \"原图:\" + media.getPath());\n                Log.i(TAG, \"绝对路径:\" + media.getRealPath());\n                Log.i(TAG, \"是否裁剪:\" + media.isCut());\n                Log.i(TAG, \"裁剪:\" + media.getCutPath());\n                Log.i(TAG, \"是否开启原图:\" + media.isOriginal());\n                Log.i(TAG, \"原图路径:\" + media.getOriginalPath());\n                Log.i(TAG, \"Android Q 特有Path:\" + media.getAndroidQToPath());\n                Log.i(TAG, \"宽高: \" + media.getWidth() + \"x\" + media.getHeight());\n                Log.i(TAG, \"Size: \" + media.getSize());\n\n            }\n\n\n            if (mAdapterWeakReference.get() != null) {\n                mAdapterWeakReference.get().setList(result);\n                PressureTestManager.getInstance().mediaList.clear();\n                PressureTestManager.getInstance().mediaList.addAll(result);\n                mAdapterWeakReference.get().notifyDataSetChanged();\n            }\n        }\n\n        @Override\n        public void onCancel() {\n            Log.i(TAG, \"PictureSelector Cancel\");\n        }\n    }\n\n\n\n    private PictureParameterStyle getDefaultStyle() {\n        // 相册主题\n        PictureParameterStyle mPictureParameterStyle = new PictureParameterStyle();\n        // 是否改变状态栏字体颜色(黑白切换)\n        mPictureParameterStyle.isChangeStatusBarFontColor = false;\n        // 是否开启右下角已完成(0/9)风格\n        mPictureParameterStyle.isOpenCompletedNumStyle = false;\n        // 是否开启类似QQ相册带数字选择风格\n        mPictureParameterStyle.isOpenCheckNumStyle = false;\n        // 相册状态栏背景色\n        mPictureParameterStyle.pictureStatusBarColor = Color.parseColor(\"#393a3e\");\n        // 相册列表标题栏背景色\n        mPictureParameterStyle.pictureTitleBarBackgroundColor = Color.parseColor(\"#393a3e\");\n        // 相册父容器背景色\n        mPictureParameterStyle.pictureContainerBackgroundColor = ContextCompat.getColor(this, R.color.app_color_black);\n        // 相册列表标题栏右侧上拉箭头\n        mPictureParameterStyle.pictureTitleUpResId = R.drawable.picture_icon_arrow_up;\n        // 相册列表标题栏右侧下拉箭头\n        mPictureParameterStyle.pictureTitleDownResId = R.drawable.picture_icon_arrow_down;\n        // 相册文件夹列表选中圆点\n        mPictureParameterStyle.pictureFolderCheckedDotStyle = R.drawable.picture_orange_oval;\n        // 相册返回箭头\n        mPictureParameterStyle.pictureLeftBackIcon = R.drawable.picture_icon_back;\n        // 标题栏字体颜色\n        mPictureParameterStyle.pictureTitleTextColor = ContextCompat.getColor(this, R.color.picture_color_white);\n        // 相册右侧取消按钮字体颜色  废弃 改用.pictureRightDefaultTextColor和.pictureRightDefaultTextColor\n        mPictureParameterStyle.pictureCancelTextColor = ContextCompat.getColor(this, R.color.picture_color_white);\n        // 选择相册目录背景样式\n        mPictureParameterStyle.pictureAlbumStyle = R.drawable.picture_new_item_select_bg;\n        // 相册列表勾选图片样式\n        mPictureParameterStyle.pictureCheckedStyle = R.drawable.picture_checkbox_selector;\n        // 相册列表底部背景色\n        mPictureParameterStyle.pictureBottomBgColor = ContextCompat.getColor(this, R.color.picture_color_grey);\n        // 已选数量圆点背景样式\n        mPictureParameterStyle.pictureCheckNumBgStyle = R.drawable.picture_num_oval;\n        // 相册列表底下预览文字色值(预览按钮可点击时的色值)\n        mPictureParameterStyle.picturePreviewTextColor = ContextCompat.getColor(this, R.color.picture_color_fa632d);\n        // 相册列表底下不可预览文字色值(预览按钮不可点击时的色值)\n        mPictureParameterStyle.pictureUnPreviewTextColor = ContextCompat.getColor(this, R.color.picture_color_white);\n        // 相册列表已完成色值(已完成 可点击色值)\n        mPictureParameterStyle.pictureCompleteTextColor = ContextCompat.getColor(this, R.color.picture_color_fa632d);\n        // 相册列表未完成色值(请选择 不可点击色值)\n        mPictureParameterStyle.pictureUnCompleteTextColor = ContextCompat.getColor(this, R.color.picture_color_white);\n        // 预览界面底部背景色\n        mPictureParameterStyle.picturePreviewBottomBgColor = ContextCompat.getColor(this, R.color.picture_color_grey);\n        // 外部预览界面删除按钮样式\n        mPictureParameterStyle.pictureExternalPreviewDeleteStyle = R.drawable.picture_icon_delete;\n        // 原图按钮勾选样式  需设置.isOriginalImageControl(true); 才有效\n        mPictureParameterStyle.pictureOriginalControlStyle = R.drawable.picture_original_wechat_checkbox;\n        // 原图文字颜色 需设置.isOriginalImageControl(true); 才有效\n        mPictureParameterStyle.pictureOriginalFontColor = ContextCompat.getColor(this, R.color.white);\n        // 外部预览界面是否显示删除按钮\n        mPictureParameterStyle.pictureExternalPreviewGonePreviewDelete = true;\n        // 设置NavBar Color SDK Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP有效\n        mPictureParameterStyle.pictureNavBarColor = Color.parseColor(\"#393a3e\");\n        // 文件夹字体颜色\n        mPictureParameterStyle.folderTextColor = Color.parseColor(\"#4d4d4d\");\n        // 文件夹字体大小\n        mPictureParameterStyle.folderTextSize = 16;\n\n        return mPictureParameterStyle;\n    }\n\n    public void setPipeDiagramView(){\n\n        FullyGridLayoutManager manager = new FullyGridLayoutManager(this,\n                3, GridLayoutManager.VERTICAL, false);\n        mRecyclerView.setLayoutManager(manager);\n        mRecyclerView.addItemDecoration(new GridSpacingItemDecoration(3,\n                ScreenAdaptUtil.dip2px(this, 8), false));\n        mAdapter = new GridImageAdapter(this, onAddPicClickListener);\n\n\n\n        mRecyclerView.setAdapter(mAdapter);\n\n        if (PressureTestManager.getInstance().currentPressureTestModel.getPipeDiagramList().size() > 0){\n            PressureTestManager.getInstance().mediaList.clear();\n            for (PipeDiagramModel model : PressureTestManager.getInstance().currentPressureTestModel.getPipeDiagramList()){\n\n                PressureTestManager.getInstance().mediaList.add(model.getLocalMedia());\n            }\n            mAdapter.setList( PressureTestManager.getInstance().mediaList);\n        }\n\n        mAdapter.setOnItemClickListener((v, position) -> {\n            List<LocalMedia> selectList = mAdapter.getData();\n\n            if (selectList.size() > 0) {\n                LocalMedia media = selectList.get(position);\n                String mimeType = media.getMimeType();\n                int mediaType = PictureMimeType.getMimeType(mimeType);\n                switch (mediaType) {\n                    case PictureConfig.TYPE_VIDEO:\n                        // 预览视频\n                        PictureSelector.create(PressureTestActivity.this)\n                                .themeStyle(R.style.picture_default_style)\n                                .setPictureStyle(getDefaultStyle())// 动态自定义相册主题\n                                .externalPictureVideo(TextUtils.isEmpty(media.getAndroidQToPath()) ? media.getPath() : media.getAndroidQToPath());\n                        break;\n                    case PictureConfig.TYPE_AUDIO:\n                        // 预览音频\n                        PictureSelector.create(PressureTestActivity.this)\n                                .externalPictureAudio(PictureMimeType.isContent(media.getPath()) ? media.getAndroidQToPath() : media.getPath());\n                        break;\n                    default:\n                        // 预览图片 可自定长按保存路径\n//                        PictureWindowAnimationStyle animationStyle = new PictureWindowAnimationStyle();\n//                        animationStyle.activityPreviewEnterAnimation = R.anim.picture_anim_up_in;\n//                        animationStyle.activityPreviewExitAnimation = R.anim.picture_anim_down_out;\n                        PictureSelector.create(PressureTestActivity.this)\n                                .themeStyle(R.style.picture_default_style) // xml设置主题\n                                .setPictureStyle(getDefaultStyle())// 动态自定义相册主题\n                                //.setPictureWindowAnimationStyle(animationStyle)// 自定义页面启动动画\n                                .setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED)// 设置相册Activity方向，不设置默认使用系统\n                                .isNotPreviewDownload(true)// 预览图片长按是否可以下载\n                                //.bindCustomPlayVideoCallback(new MyVideoSelectedPlayCallback(getContext()))// 自定义播放回调控制，用户可以使用自己的视频播放界面\n                                .imageEngine(GlideEngine.createGlideEngine())// 外部传入图片加载引擎，必传项\n                                .openExternalPreview(position, selectList);\n                        break;\n                }\n            }\n        });\n\n    }\n\n    //更新测试中数据显示\n    public void updateTestingData(String countdown){\n\n        currentPressureNumTextView.setText(\"\" + DeviceDataManager.getInstance().currentDeviceModel.currentPressure);\n        startPressureNumTextView.setText(\"\" +  DeviceDataManager.getInstance().currentDeviceModel.pressureStart);\n        countdownTextView.setText(countdown);\n\n\n    }\n\n    // ble 蓝牙状态以及数据回调接口\n    // setBlockOnBeatsBreak\n    public void onEventMainThread(UpdataUIEven event) {\n        forwardData(event.getRecvs());\n    }\n\n\n\n    public void forwardData(byte[] datas) {\n        if (datas[3] == 0x02) {\n            switch (datas[5]) {\n                case 0x30:\n                    Log.e(\"tag\", \"请加压\");\n                    voiceUtils.playVoice(\"pleasekeeppressurising.mp3\");\n                    return;\n                case 0x31:\n                    voiceUtils.playVoice(\"overpressured.mp3\");\n                    Log.e(\"tag\", \"超压\");\n                    return;\n                case 0x32:\n                    voiceUtils.playVoice(\"testfailed.mp3\");\n                    Log.e(\"tag\", \"测试异常\");\n                    return;\n                case 0x33:\n                    voiceUtils.playVoice(\"testcontinue.mp3\");\n                    Log.e(\"tag\", \"继续测试\");\n                    return;\n                case 0x34:\n//                    voiceUtils.playVoice(\"pleasekeeppressurising.mp3\");\n                    Log.e(\"tag\", \"低电提示\");\n                    return;\n                case 0x35:\n                    voiceUtils.playVoice(\"pressureexceedsthesettingpleasedropthepressure.mp3\");\n                    Log.e(\"tag\", \"已超压，请降压到设定范围内\");\n                    return;\n            }\n\n            int value = datas[5] & 0xff;\n            if (value % 2 == 0) {\n                int end = value / 2;\n                List<String> list = new ArrayList<>();\n                list.add(\"round.mp3\");\n                list.add(end + \".mp3\");\n                list.add(\"pressureholdfinished.mp3\");\n                voiceUtils.playVoice(list);\n//                Log.e(\"tag\", \"第\" + end + \"次保压结束\");\n            } else {\n                int start = value / 2 + 1;\n                List<String> list = new ArrayList<>();\n                list.add(\"pressureholdround.mp3\");\n                list.add(start + \".mp3\");\n                voiceUtils.playVoice(list);\n//                Log.e(\"tag\", \"第\" + start + \"次保压开始\");\n            }\n        }\n        // 实时模式\n        else if (datas[3] == 0x01) {\n\n            Log.e(\"实时数据\", \"\" + datas);\n            Log.e(\"实时数据\", \"\" + TransUtils.bytes2hex(datas));\n\n\n            if (PressureTestManager.getInstance().currentPressureTestModel.getCurrentState().equals(\"0\") || PressureTestManager.getInstance().currentPressureTestModel.equals( \"1\")){\n//                    PressureTestManager.getInstance().currentPressureTestModel.setCurrentState();\n                if (DeviceDataManager.getInstance().isReadDeviceStatus && !\"3\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus)){\n                    updateCurrentPressureModelStatus(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus);\n                }\n\n            }\n\n\n            int power = datas[6] & 0xff;\n\n            int times = datas[7] & 0xff;\n            if (datas[5] == 0x03) {\n                times--;\n            }\n//            textPressuretestTestNo.setText(String.format(getString(R.string.pressuretest_test_no), times));\n\n            //实时数据\n\n            // strSeveralTests\n            int round = datas[7] & 0xff;\n\n            //\n\n\n\n//            //实时倒计时\n            int min = datas[16] & 0xff;\n            int sec = datas[17] & 0xff;\n            String countDownTime = formatNum(min) + \":\" + formatNum(sec);\n            updateTestingData(countDownTime);\n\n\n\n            int type = datas[18] & 0xff;\n            switch (type) {\n                case 0x00:\n                    break;\n                case 0x03:\n                    break;\n            }\n\n            // iOS BLDATA.strEquipmentState = [BLFunction numberHexString:[dataStar substringWithRange:NSMakeRange(10,2)]];\n            switch (datas[5]) {\n                case 0x00:\n                    PressureTestManager.getInstance().lastState = 0;\n\n                    break;\n                case 0x01:\n                    //0转到1\n                    if (PressureTestManager.getInstance().lastState == 0){\n                        //PressureTestManager.getInstance().currentPressureTestModel.setCurrentState(\"1\");\n                        //PressureTestManager.getInstance().currentUIState =  PressureTestManager.CurrentUIState.CurrentUIStateTesting;\n                    }\n                    PressureTestManager.getInstance().lastState = 1;\n\n                    //设置测试中当前轮\n                    if (round > 0){\n                        roundAdapter.setCurrentPositon(round - 1);\n                    }\n\n                    break;\n                case 0x02:\n                    if (PressureTestManager.getInstance().lastState != 1) {\n                        return;\n                    }\n                    if (DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew) {\n                        //请求到当前轮数的数据\n                        requestTestData(round);\n                        // 已经接受到数据而且那边已经处理完，进行重置\n//                        if (DataManager.getInstance().didGetResult) {\n//                            //重置\n//                           resetDevice();\n//                            DataManager.getInstance().didGetResult = false;\n//                        }\n                    }\n                    PressureTestManager.getInstance().lastState = 2;\n//                    PressureTestManager.getInstance().currentPressureTestModel.setCurrentState(\"2\");\n\n//                    showResult(false);\n//                    LogToFileUtils.write(\"测试状态：\" + \"异常\");\n                    break;\n                case 0x03:\n\n                    if (DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew) {\n                        LogToFileUtils.write(\"Press Test Act 测试状态：\" + \"合格\");\n//                        // 如果 当前的轮数是最后一轮\n                        if (round == PressureTestManager.getInstance().currentPressureTestModel.optionList.size()) {\n\n                            // 已经接受到数据而且那边已经处理完，进行重置\n                            requestTestData(round);\n\n\n//                            if (DataManager.getInstance().didGetResult) {\n//                                //重置\n//\n//                                DeviceDataManager.getInstance().getResultData(\"PASS\");\n//                                LogToFileUtils.write(\"测试状态：\" + \"合格\");\n////                                showResult(true);\n//                                PressureTestManager.getInstance().lastState = 3;\n////                                PressureTestManager.getInstance().currentPressureTestModel.setCurrentState(\"3\");\n//                            } else {\n//                                // 已经接受到数据而且那边已经处理完，进行重置\n//                                requestTestData(round);\n//                            }\n                        }\n                    } else {\n                        LogToFileUtils.write(\"测试状态：\" + \"合格\");\n\n                    }\n                    break;\n            }\n            updateRound(times);\n\n            updateCurrentState();\n        }\n    }\n\n    public void updateRound(int round) {\n\n        if (PressureTestManager.getInstance().lastState == 1){\n            roundAdapter.setCurrentPositon(round - 1);\n            roundAdapter.notifyDataSetChanged();\n        }\n\n\n    }\n\n    private void requestTestData(int round) {\n        for (int i = 0; i < round; i++) {\n            try {\n                //休眠200ms\n                Thread.sleep(200);\n                //获取数据 round 从 1 开始算\n                int tmp = i + 1;\n                LogToFileUtils.write(\"测试状态：\" + \"合格\" + \"从试压仪中获取\" + tmp + \"轮数据\");\n                DeviceDataManager.getInstance().forwardDataPreAll(tmp);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\n    public void updateTestDate(){\n\n        PressureTestViewModel vm = new PressureTestViewModel();\n        vm.getServerTime(new BaseViewModel.ViewModelListener() {\n            @Override\n            public void success(String msg) {\n\n                testTimeEditText.setText(PressureTestManager.getInstance().currentPressureTestModel.getTestTimeStr());\n\n            }\n\n            @Override\n            public void fail(String msg, BaseViewModel.ReturnCode code) {\n                vm.getLocalTime(new BaseViewModel.ViewModelListener() {\n                    @Override\n                    public void success(String msg) {\n                        testTimeEditText.setText(PressureTestManager.getInstance().currentPressureTestModel.getTestTimeStr());\n                    }\n\n                    @Override\n                    public void fail(String msg, BaseViewModel.ReturnCode code) {\n\n                    }\n\n                    @Override\n                    public void finish() {\n\n                    }\n                });\n\n            }\n\n            @Override\n            public void finish() {\n\n            }\n        });\n\n    }\n\n    public void initBasicData(){\n\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n        projectNameEditText.setText(currentModel.getProjectName());\n        addressEditText.setText(currentModel.getAddress());\n        companyEditText.setText(DataManager.getInstance().getUser().getCompanyName());\n        postCodeEditText.setText(currentModel.getPostCode());\n        pipeBrandAndTypeEditText.setText(currentModel.getPipeBrandAndType());\n        ccEmailEditText.setText(currentModel.getCcEmail());\n\n    }\n\n\n    public void getUserAgencyPressureInfo(){\n        PressureTestViewModel vm = new PressureTestViewModel();\n        vm.getAgencyPressureInfo(new BaseViewModel.ViewModelListener() {\n            @Override\n            public void success(String msg) {\n\n                didGetParameter = true;\n                didGetPressureInfo();\n            }\n\n            @Override\n            public void fail(String msg, BaseViewModel.ReturnCode code) {\n\n                //如果失败，从本地再读取一次\n                PressureTestViewModel vm2 = new PressureTestViewModel();\n                vm2.getAgencyPressureInfoFromLocal(new BaseViewModel.ViewModelListener() {\n                    @Override\n                    public void success(String msg) {\n                        didGetPressureInfo();\n                        didGetParameter = true;\n                    }\n\n                    @Override\n                    public void fail(String msg, BaseViewModel.ReturnCode code) {\n                        didGetParameter = true;\n                        showToast(PressureTestActivity.this.getString(R.string.no_pressure_test_parameters));\n                    }\n\n                    @Override\n                    public void finish() {\n\n                    }\n                });\n\n            }\n\n            @Override\n            public void finish() {\n\n            }\n        });\n\n    }\n\n    public void didGetPressureInfo(){\n\n        if (PressureTestManager.getInstance().currentPressureTestModel.getAgreementList().size() == 0){\n            RFProgressHud.showErrorMsg(this, getString(R.string.no_pressure_test_parameters));\n        }\n\n        selectGroupAdapter.notifyDataSetChanged();\n\n\n//        String groupId = PressureTestManager.getInstance().currentPressureTestModel.getGroupId();\n//        //如果当前模型有选择过测压参数\n//        if (groupId != null && !\"\".equals(groupId)){\n//            selectPressureByGroupId(groupId);\n//        }\n\n\n    }\n\n    public void selectPressureByGroupId(String groupId){\n\n    }\n\n\n    private void requestTestMethod() {\n\n        PressureTestViewModel vm = new PressureTestViewModel();\n        vm.getTestMethod(new BaseViewModel.ViewModelListener(){\n\n            @Override\n            public void success(String msg) {\n                didGetTestMethod();\n            }\n\n            @Override\n            public void fail(String msg, BaseViewModel.ReturnCode code) {\n\n                //网络获取失败，从本地获取\n                PressureTestViewModel vm2 = new PressureTestViewModel();\n                vm2.getTestMethodFromLocal(new BaseViewModel.ViewModelListener() {\n                    @Override\n                    public void success(String msg) {\n                        didGetTestMethod();\n                    }\n\n                    @Override\n                    public void fail(String msg, BaseViewModel.ReturnCode code) {\n\n                    }\n\n                    @Override\n                    public void finish() {\n\n                    }\n                });\n            }\n\n\n            @Override\n            public void finish() {\n\n            }\n        });\n    }\n\n    public void didGetTestMethod(){\n\n\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n        int index = -1;\n        for (int i = 0; i <  PressureTestManager.getInstance().testMethodList.size(); i++){\n            LookupCode code = PressureTestManager.getInstance().testMethodList.get(i);\n            if (code.getItem_name().equals(currentModel.getTestMethod())){\n                index = i;\n                break;\n            }\n        }\n\n        int finalIndex = index;\n        PressureTestActivity.this.runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                TestMethodAdapter<LookupCode> adapter = new TestMethodAdapter<>(PressureTestActivity.this, R.layout.simple_spinner_item, PressureTestManager.getInstance().testMethodList);\n                adapter.setDropDownViewResource(R.layout.test_method_drop_down);\n                testMethodSpinner.setAdapter(adapter);\n                if (finalIndex != -1){\n                    testMethodSpinner.setSelection(finalIndex,  true);\n                }else{\n                    if (PressureTestManager.getInstance().testMethodList.size() > 0) {\n                        testMethodSpinner.setSelection(PressureTestManager.getInstance().testMethodList.size() - 1, true);\n                    }\n                }\n\n            }\n        });\n    }\n\n    class TestMethodAdapter<T> extends ArrayAdapter {\n        public TestMethodAdapter(@NonNull Context context, int resource, @NonNull List<T> objects) {\n            super(context, resource, objects);\n        }\n\n        @Override\n        public int getCount() {\n            //返回数据的统计数量，大于0项则减去1项，从而不显示最后一项\n            int i = super.getCount();\n            return i > 0 ? i - 1 : i;\n        }\n\n        @Nullable\n        @Override\n        public Object getItem(int position) {\n            LookupCode code = (LookupCode) super.getItem(position);\n            return code.getItem_name();\n        }\n    }\n\n\n    @SuppressLint(\"WrongConstant\")\n    public void setupSelectGroupRecyclerView(){\n\n        selectGroupAdapter = new PressureTestAdaper(this , PressureTestManager.getInstance().currentPressureTestModel.getAgreementList());\n        selectGroupAdapter.setmListener(new PressureTestAdaper.OnItemClickListener() {\n            @Override\n            public void onItemClick(View itemView, int position, Object item) {\n                //点击选择组别\n                selectGroup(position, (Agreement) item);\n            }\n\n            @Override\n            public boolean onItemLongClick(View itemView, int position, Object item) {\n                return false;\n            }\n        });\n        selectGroupRecycleView.setAdapter(selectGroupAdapter);\n        selectGroupRecycleView.setLayoutManager(\n                new GridLayoutManager(\n                        PressureTestActivity.this ,2,\n                        GridLayoutManager.VERTICAL ,\n                        false));\n\n\n    }\n\n    private void selectGroup(int position, Agreement item) {\n\n        // 如果还没有更新设备\n        if (!isConnected() && !DataManager.getInstance().IS_DEVICEID_UPDATE) {\n            sendDatas(null);\n            ToastUtils.showToast(PressureTestActivity.this,\"Not Init Yet\");\n            return;\n        }\n\n         PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n\n        if (\"\".equals(currentModel.getDeviceUniqueId())){\n            currentModel.setDeviceUniqueId(DeviceDataManager.getInstance().currentDeviceModel.deviceUniqueCode);\n\n        }\n\n\n        Agreement agreement = item;\n        int optionPostion = -1;\n        for (int i = 0; i < PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().size(); i++){\n\n            Log.i(\"========agreementId\", agreement.getId());\n\n\n            if (PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().get(i).size() > 0){\n                String group_id = PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().get(i).get(0).getGroupId();\n\n                Log.i(\"=======option groupId\", group_id);\n                if (group_id.equals(agreement.getId())){\n                    // 当前选中的\n                    optionPostion = i;\n                    break;\n                }\n            }\n\n        }\n        Log.i(\"=======tttt\",  getString(R.string.no_pressure_test_parameters));\n        if (optionPostion == -1){\n\n            sendDatas(null);\n            Log.i(\"=======tttt\",  getString(R.string.no_pressure_test_parameters));\n            ToastUtils.showToast(PressureTestActivity.this,getString(R.string.no_pressure_test_parameters));\n            return;\n        }\n        /**\n         * 试压前判断\n         * <p>\n         * 如果current pressure【试压仪获取的当前压力】-start_pressure【起始压力】>0并且<=overpressure【起始压力-组别压力>?KPa提示超压】 进入试压；\n         * 如果current pressure【试压仪获取的当前压力】-start_pressure【起始压力】 >overpressure【起始压力-组别压力>?KPa提示超压】 并且<= cannotpressure_num【起始压力-组别压力>?KPa不允许进入测压阶段】 提示“已超压”，但是还是能进入试压\n         * 如果current pressure【试压仪获取的当前压力】-start_pressure【起始压力】 > cannotpressure_num【起始压力-组别压力>?KPa不允许进入测压阶段】 提示“已超压，不允许进入测压！”，不能进入试压阶段\n         */\n        double currentPressure = DeviceDataManager.getInstance().currentDeviceModel.currentPressure;\n        double startPressure = DeviceDataManager.getInstance().currentDeviceModel.pressureStart;\n        double overPressure =  (int)(Double.parseDouble(PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().get(optionPostion).get(0).getOverpressure()));\n        double cannotpressureNum = (int)(Double.parseDouble( PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().get(optionPostion).get(0).getCannotpressureNum()));\n\n\n        if (currentPressure - startPressure > overPressure && currentPressure - startPressure <= cannotpressureNum) {\n            voiceUtils.playVoice(\"overpressured.mp3\");\n        }\n        //没有协议内容则给出提示\n        if (StringUtils.isNullOrEmpty(agreement.getAgreement())) {\n            startPressureTest(agreement,optionPostion);\n        } else {\n            int finalPosition = optionPostion;\n            startPressureTest(agreement,finalPosition);\n\n            PressureTestManager.getInstance().currentPressureTestModel.setTestType(agreement.getTestType());\n            PressureTestManager.getInstance().currentPressureTestModel.setGroupId(agreement.getId());\n            savePressureTestModel();\n\n\n            LastDeviceTestId lastDevice = new LastDeviceTestId();\n            lastDevice.setDeviceUniqueId(DeviceDataManager.getInstance().currentDeviceModel.deviceUniqueCode);\n            lastDevice.setTempTestId(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId());\n            DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(lastDevice);\n\n\n//            RFProgressHud.showLoading(this, \"loading\");\n////                int finalPosition = optionPostion;\n//            int finalPosition = optionPostion;\n//            showNoticeDialog(PressureTestActivity.this, getString(R.string.dilog_title_pt_notice),\n//                    agreement.getAgreement().replace(\"\\\\n\", \"\\n\"),\n//                    getString(R.string.dilog_btn_pt_agree), null, R.drawable.shape_dialog_orange,\n//                    null, true,\n//                    new View.OnClickListener() {\n//                        @Override\n//                        public void onClick(View v) {\n//                            startPressureTest(agreement,finalPosition);\n//                        }\n//                    }, new View.OnClickListener(\n//                    ) {\n//                        @Override\n//                        public void onClick(View v) {\n//                            hideDialog();\n//                        }\n//                    });\n        }\n    }\n\n    private void setupPipecodeRecyclerView(){\n\n        ArrayList<String> pipeCodeList = PressureTestManager.getInstance().currentPressureTestModel.getPipeCodeList();\n        pipCodeAdpater = new PipCodeAdpater(this, pipeCodeList, new PipCodeAdpater.PipeCodeListener() {\n            @Override\n            public void clickDeleteAtPostion(int postion) {\n\n                if (postion < pipeCodeList.size()){\n                    pipeCodeList.remove(postion);\n                    pipCodeAdpater.notifyDataSetChanged();\n                }\n            }\n        });\n        pipeCodeRecyclerView.setLayoutManager(new LinearLayoutManager(this));\n        pipeCodeRecyclerView.setAdapter(pipCodeAdpater);\n        pipeCodeRecyclerView.setNestedScrollingEnabled(false);\n        //设置分割线\n       // pipeCodeRecyclerView.addItemDecoration(new SimpleDividerItemDecoration(this , 2));\n    }\n\n    private void setupRoundRecyclerView(){\n\n        roundAdapter = new RoundAdapter(this, PressureTestManager.getInstance().currentPressureTestModel.getOptionList());\n\n        roundRecyclerView.setLayoutManager(new LinearLayoutManager(this));\n        roundRecyclerView.setAdapter(roundAdapter);\n        roundRecyclerView.setNestedScrollingEnabled(false);\n\n    }\n\n    public String getEmailsString(){\n\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < DataManager.selectedForemanList.size(); i++){\n            if (i == DataManager.selectedForemanList.size() - 1){\n                sb.append(DataManager.selectedForemanList.get(i).getEmail());\n            }else{\n                sb.append(DataManager.selectedForemanList.get(i).getEmail());\n                sb.append(\",\");\n            }\n        }\n        return sb.toString();\n\n    }\n    /**\n     * 遍历判断权限是否都有请求\n     * @param neededPermissions\n     * @return\n     */\n    private boolean checkPermissions(String[] neededPermissions) {\n        if (neededPermissions == null || neededPermissions.length == 0) {\n            return true;\n        }\n        boolean allGranted = true;\n        for (String neededPermission : neededPermissions) {\n            allGranted &= ContextCompat.checkSelfPermission(this, neededPermission) == PackageManager.PERMISSION_GRANTED;\n        }\n        return allGranted;\n    }\n\n    public void updateCurrentState(){\n\n\n\n        //For test\n       // PressureTestManager.getInstance().currentPressureTestModel.setCurrentState(\"3\");\n        Log.i(\"=====单据状态：\", PressureTestManager.getInstance().currentPressureTestModel.getCurrentState());\n        Log.i(\"=====设备状态：\", DeviceDataManager.getInstance().currentDeviceModel.deviceStatus + \" size:\" + PressureTestManager.getInstance().mediaList.size());\n\n\n\n        if(\"2\".equalsIgnoreCase(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState()) || \"3\".equalsIgnoreCase(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState())){\n            PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateTestEnd;\n           // resetDevice();\n        }\n\n\n        if (PressureTestManager.getInstance().isBluetoothConnected() == true ){\n\n            if(\"1\".equalsIgnoreCase(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState())){\n\n                if (\"0\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus) ){\n                    PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateSelectGroup;\n                }\n                if (\"1\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus) ){\n                    PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateTesting;\n                }\n\n                if (\"2\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus) ||  \"3\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus)){\n                    //获取结果\n\n                    DeviceDataManager.getInstance().getResultData(\"PASS\");\n\n\n                }\n\n            }\n\n            if(\"0\".equalsIgnoreCase(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState())){\n                PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateDidConnect;\n\n                if (\"0\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus) ){\n                    PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateSelectGroup;\n\n                }\n\n                //如果当前单据状态是未开始测试，设备状态是测试中\n                if (\"1\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus) ){\n\n                    //从数据库获取当前设备的最后测试id， 如果跟当前单据相符，或者没有保存过单据，当做是新增，改变状态，否则弹框提示重置设备\n                    PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateTesting;\n\n                }\n\n                if (\"2\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus) ||  \"3\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus)){\n                    //获取结果\n                    //PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateTestEnd;\n                }\n\n            }\n        }else{\n            if(\"2\".equalsIgnoreCase(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState()) || \"3\".equalsIgnoreCase(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState())){\n                PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateTestEnd;\n\n\n            }else{\n                PressureTestManager.getInstance().currentUIState = PressureTestManager.CurrentUIState.CurrentUIStateNoConnect;\n            }\n\n        }\n\n        updateUIState();\n    }\n\n    public void updateUIState(){\n\n        if (PressureTestManager.getInstance().currentUIState == PressureTestManager.CurrentUIState.CurrentUIStateNoConnect){\n\n            //未连接蓝牙\n            bluetoothDotView.setBackgroundResource(R.drawable.dot_disconnnect);\n            bluetoothNameView.setText(\"Disconnected\");\n            bluetoothConnectView.setText(\"Connect\");\n\n            batteryDotView.setBackgroundResource(R.drawable.dot_disconnnect);\n            batteryStatusLayout.setVisibility(View.GONE);\n            batteryPowerLowTipView.setVisibility(View.GONE);\n\n            selectTestGroupLayout.setVisibility(View.GONE);\n            testingLayout.setVisibility(View.GONE);\n            testResultLayout.setVisibility(View.GONE);\n            pipeDiagramBgLayout.setVisibility(View.GONE);\n            pipeCodeBgLayout.setVisibility(View.GONE);\n\n        }\n\n        if (PressureTestManager.getInstance().currentUIState == PressureTestManager.CurrentUIState.CurrentUIStateDidConnect){\n\n            bluetoothDotView.setBackgroundResource(R.drawable.dot_connnect);\n            bluetoothNameView.setText(DataManager.getInstance().getAppManager().bluetoothDevice .getName());\n\n\n            batteryDotView.setBackgroundResource(R.drawable.dot_connnect);\n            batteryStatusLayout.setVisibility(View.VISIBLE);\n\n\n            selectTestGroupLayout.setVisibility(View.GONE);\n            testingLayout.setVisibility(View.GONE);\n            testResultLayout.setVisibility(View.GONE);\n            pipeDiagramBgLayout.setVisibility(View.GONE);\n            pipeCodeBgLayout.setVisibility(View.GONE);\n\n        }\n        if (PressureTestManager.getInstance().currentUIState == PressureTestManager.CurrentUIState.CurrentUIStateSelectGroup){\n\n\n            //选择参数\n            batteryDotView.setBackgroundResource(R.drawable.dot_connnect);\n            batteryStatusLayout.setVisibility(View.VISIBLE);\n            batteryPowerLowTipView.setVisibility(View.VISIBLE);\n\n            selectTestGroupLayout.setVisibility(View.VISIBLE);\n            selectGroupCurrentPressureTextview.setText(DeviceDataManager.getInstance().currentDeviceModel.currentPressure + \"\");\n            testingLayout.setVisibility(View.GONE);\n            testResultLayout.setVisibility(View.GONE);\n            pipeDiagramBgLayout.setVisibility(View.GONE);\n            pipeCodeBgLayout.setVisibility(View.GONE);\n\n            //如果还没测压参数\n            if (PressureTestManager.getInstance().currentPressureTestModel.getAgreementList().size() == 0 && !didGetParameter){\n               getUserAgencyPressureInfo();\n            }else{\n                selectGroupAdapter.notifyDataSetChanged();\n            }\n        }\n        if (PressureTestManager.getInstance().currentUIState == PressureTestManager.CurrentUIState.CurrentUIStateTesting){\n\n            //测试中\n\n            batteryDotView.setBackgroundResource(R.drawable.dot_connnect);\n            batteryStatusLayout.setVisibility(View.VISIBLE);\n            batteryPowerLowTipView.setVisibility(View.VISIBLE);\n\n            selectTestGroupLayout.setVisibility(View.GONE);\n            testingLayout.setVisibility(View.VISIBLE);\n            testResultLayout.setVisibility(View.GONE);\n            pipeDiagramBgLayout.setVisibility(View.GONE);\n            pipeCodeBgLayout.setVisibility(View.GONE);\n\n        }\n        if (PressureTestManager.getInstance().currentUIState == PressureTestManager.CurrentUIState.CurrentUIStateTestEnd){\n\n            //测试结束\n            batteryDotView.setBackgroundResource(R.drawable.dot_connnect);\n            batteryStatusLayout.setVisibility(View.VISIBLE);\n            batteryPowerLowTipView.setVisibility(View.VISIBLE);\n\n            selectTestGroupLayout.setVisibility(View.GONE);\n            testingLayout.setVisibility(View.GONE);\n            testResultLayout.setVisibility(View.VISIBLE);\n            pipeDiagramBgLayout.setVisibility(View.VISIBLE);\n\n            pipeCodeBgLayout.setVisibility(View.VISIBLE);\n            submitBtn.setEnabled(true);\n            submitBtn.setBackgroundDrawable(getResources().getDrawable(R.drawable.submit_btn_corner_shape));\n            setResult();\n        }\n\n        //设置蓝牙模块UI\n        if (PressureTestManager.getInstance().isBluetoothConnected() == true ){\n            bluetoothDotView.setBackgroundResource(R.drawable.dot_connnect);\n            bluetoothNameView.setText(DataManager.getInstance().getAppManager().bluetoothDevice .getName());\n\n\n            batteryDotView.setBackgroundResource(R.drawable.dot_connnect);\n            batteryStatusLayout.setVisibility(View.VISIBLE);\n            batteryPowerLowTipView.setVisibility(View.GONE);\n\n            bluetoothConnectView.setText(\"Disconnect\");\n            //更新电池\n            if (!\"-1\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceStatus)){\n\n                batteryStatusLayout.setVisibility(View.VISIBLE);\n                batteryPowerLowTipView.setVisibility(View.VISIBLE);\n\n                if (\"0\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceBattery)){\n                    batteryInfoImageView.setImageResource(R.mipmap.power_0);\n                    batteryPowerLowTipView.setVisibility(View.VISIBLE);\n                }else if (\"1\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceBattery)){\n                    batteryInfoImageView.setImageResource(R.mipmap.power_1);\n                    batteryPowerLowTipView.setVisibility(View.VISIBLE);\n                }else if (\"2\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceBattery)){\n                    batteryInfoImageView.setImageResource(R.mipmap.power_2);\n                    batteryPowerLowTipView.setVisibility(View.GONE);\n                }else if (\"3\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceBattery)){\n                    batteryInfoImageView.setImageResource(R.mipmap.power_3);\n                    batteryPowerLowTipView.setVisibility(View.GONE);\n                }else if (\"4\".equals(DeviceDataManager.getInstance().currentDeviceModel.deviceBattery)){\n                    batteryInfoImageView.setImageResource(R.mipmap.power_4);\n                    batteryPowerLowTipView.setVisibility(View.GONE);\n                }\n\n\n\n            }else{\n\n                batteryStatusLayout.setVisibility(View.GONE);\n                batteryPowerLowTipView.setVisibility(View.GONE);\n\n            }\n\n        }else{\n            //未连接蓝牙\n            bluetoothDotView.setBackgroundResource(R.drawable.dot_disconnnect);\n            bluetoothNameView.setText(\"Disconnected\");\n            bluetoothConnectView.setText(\"Connect\");\n\n            batteryDotView.setBackgroundResource(R.drawable.dot_disconnnect);\n            batteryStatusLayout.setVisibility(View.GONE);\n            batteryPowerLowTipView.setVisibility(View.GONE);\n\n        }\n\n    }\n\n\n    public void setResult(){\n\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n\n        for (Agreement  agreement : currentModel.getAgreementList()) {\n            if (agreement.getId().equals(currentModel.getGroupId()) ) {\n                resultTestGroupTextView.setText(agreement.getGroupName() + \"kPa\");\n            }\n        }\n\n        List<PressureResultBean> list = DBManager.getInstance(BaseApp.getInstance()).getResultListByTempTestId(currentModel.getTempTestId());\n        currentModel.resultList.addAll(list);\n\n        List<PressureResultBean> resultList = currentModel.resultList;\n        for (int i = resultList.size() - 1; i >= 0; i--){\n            PressureResultBean resultBean = resultList.get(i);\n            if (resultBean.getDecisionStandard().equals(\"Y\")){\n                resultStartPressureTextView.setText(resultBean.getStartPressure() + \"kPa\");\n                resultEndtPressureTextView.setText(resultBean.getEndPressure() + \"kPa\");\n\n            }\n        }\n\n        if(\"2\".equals(currentModel.getCurrentState())){\n            resultTextView.setText(\"FAIL\");\n        }else if(\"3\".equals(currentModel.getCurrentState())){\n            resultTextView.setText(\"PASS\");\n        }else{\n            if(\"2\".equals(currentModel.getCurrentState())){\n                resultTextView.setText(\"\");\n            }\n        }\n\n    }\n\n    public void updateSelectGroupLayout(){\n\n    }\n\n    //保存试压数据\n    private void savePressureTestModel(){\n\n        User currentUser = DataManager.getInstance().getUser();\n\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n\n        //如果没有testId 生成一个\n        if (PressureTestManager.getInstance().currentPressureTestModel.getTempTestId() == null || \"\".equalsIgnoreCase(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId())){\n            PressureTestManager.getInstance().currentPressureTestModel.setTempTestId(DataManager.getInstance().getTempTestId());\n        }\n        PressureTestManager.getInstance().currentPressureTestModel.setProjectName(getNotNullString(projectNameEditText.getText().toString()));\n        PressureTestManager.getInstance().currentPressureTestModel.setAddress(getNotNullString(addressEditText.getText().toString()));\n        PressureTestManager.getInstance().currentPressureTestModel.setPostCode(getNotNullString(postCodeEditText.getText().toString()));\n        PressureTestManager.getInstance().currentPressureTestModel.setCompany(getNotNullString(companyEditText.getText().toString()));\n        PressureTestManager.getInstance().currentPressureTestModel.setCcEmail(getNotNullString(ccEmailEditText.getText().toString()));\n        PressureTestManager.getInstance().currentPressureTestModel.setPipeBrandAndType(getNotNullString(pipeBrandAndTypeEditText.getText().toString()));\n        PressureTestManager.getInstance().currentPressureTestModel.setEmail(currentUser.getEmail());\n        PressureTestManager.getInstance().currentPressureTestModel.setMobile(currentUser.getMobile());\n        if (currentModel.getDeviceUniqueId() == null || \"\".equals(currentModel.getDeviceUniqueId())){\n            PressureTestManager.getInstance().currentPressureTestModel.setDeviceUniqueId(DeviceDataManager.getInstance().currentDeviceModel.deviceUniqueCode);\n        }\n\n        //保存basic\n        DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(PressureTestManager.getInstance().currentPressureTestModel);\n\n\n        DBManager.getInstance(BaseApp.getInstance()).clearPipeCodeByTempTestId(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId());\n        //保存管码\n        for (int i = 0; i < PressureTestManager.getInstance().currentPressureTestModel.getPipeCodeList().size(); i++){\n            String pipeCode = PressureTestManager.getInstance().currentPressureTestModel.getPipeCodeList().get(i);\n            PipeCodeModel model = new PipeCodeModel();\n            model.setTempTestId(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId());\n            model.setPipeCode(pipeCode);\n            DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(model);\n        }\n\n\n        DBManager.getInstance(BaseApp.getInstance()).clearPipeDiagramByTempTestId(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId());\n        //保存管路图\n        if (PressureTestManager.getInstance().currentPressureTestModel.getPipeDiagramList().size() > 0){\n            DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(PressureTestManager.getInstance().currentPressureTestModel.getPipeDiagramList());\n        }\n\n\n        DBManager.getInstance(BaseApp.getInstance()).clearPressureResultByTempTestId(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId());\n        DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(PressureTestManager.getInstance().currentPressureTestModel.resultList);\n\n\n\n    }\n\n\n    public String getNotNullString(String str){\n        if (str == null){\n            return \"\";\n        }\n\n        return str;\n    }\n\n\n    // ble 蓝牙状态以及数据回调接口\n    // setBlockOnBeatsBreak\n    public void onEventMainThread(BroadcastEvent event) {\n\n        Intent intent = event.getIntent();\n        String action = intent.getAction();\n        if (RFStarBLEService.ACTION_GATT_CONNECTED.equals(action)) {\n\n            DeviceDataManager.getInstance().recvs.clear();\n            LogToFileUtils.write(\"已连接上蓝牙服务\");\n            // bug 82 让指令先充分走完\n            showLoadingDuragion(4000);\n\n        } else if (RFStarBLEService.ACTION_GATT_DISCONNECTED.equals(action)) {\n//            ToastUtils.showToast(this, \"连接断开\");\n            DeviceDataManager.getInstance().currentDeviceModel.totalTime = 0;\n            DeviceDataManager.getInstance().currentDeviceModel.realTime = 0;\n            LogToFileUtils.write(\"蓝牙连接断开\");\n            updateCurrentState();\n        } else if (RFStarBLEService.ACTION_GATT_SERVICES_DISCOVERED.equals(action)) {\n            voiceUtils.playVoice(\"bluetoothconnected.mp3\");\n            LogToFileUtils.write(\"蓝牙连接成功\");\n        } else if (RFStarBLEService.ACTION_GATT_CONNECTING.equals(action)) {\n\n        } else if (RFStarBLEService.ACTION_DATA_AVAILABLE.equals(action)) {\n\n        }\n\n        updateCurrentState();\n    }\n\n    private void showLoadingDuragion(int duration) {\n        // 新设备需要时间获取设备表示\n        //showLoading();\n        new Handler().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                //hideDialog();\n                //PressureTestActivity.this.updateCurrentState();\n            }\n\n\n        }, duration);\n\n    }\n\n    private void startPressureTest(Agreement agreement, final int optionsPosition) {\n       // DeviceDataManager.getInstance().selectPosition = optionsPosition;\n//        ToastUtils.showToast(this, \"Button Position:\"+ agreementPosition+\" OptionPosition:\"+optionsPosition);\n        //RFProgressHud.showLoading(this, \"loading...\");\n\n        RFProgressHud.showLoading(PressureTestActivity.this, \"waiting device data\");\n        new Handler().post(new Runnable() {\n            @Override\n            public void run() {\n                LogToFileUtils.write(\"start test\");\n                DeviceDataManager.getInstance().recvs.clear();\n                if (!isConnected()) {\n                    RFProgressHud.hideDialog();\n                    return;\n                }\n\n                List<Option> selectPotions = PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().get(optionsPosition);\n                PressureTestManager.getInstance().currentPressureTestModel.getOptionList().addAll(selectPotions);\n\n                //Agreement selectAgreement = PressureTestManager.getInstance().currentPressureTestModel.getAgreementList().get(agreementPosition);\n                //saveBleRecord(selectAgreement.getId(), selectAgreement.getGroupName(), selectPotions);\n\n\n\n                if (DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew) {\n                    LogToFileUtils.write(\"新设备测试组点击，执行新设备测试\");\n                    List<Option> options = selectPotions;\n                    DeviceDataManager.getInstance().selectTestGroup(options, new DeviceDataManager.DeviceDataManagerListener() {\n                        @Override\n                        public void success() {\n                            updateCurrentPressureModelStatus(\"1\");\n                            RFProgressHud.hideDialog();\n                        }\n\n                        @Override\n                        public void fail() {\n                            RFProgressHud.hideDialog();\n                        }\n                    });\n\n                } else {\n                    RFProgressHud.hideDialog();\n                    //旧协议\n//                    LogToFileUtils.write(\"旧设备测试组点击，执行旧设备测试\");\n//                    sendDatas(getOptionData(selectPotions.get(0).getGroupId(), selectPotions));\n                }\n                //间隔500ms，确保参数的指令发送完\n//                ((ValueAdapter) mAdapter).setItemClickListener(null);\n//                optionList.clear();\n//                optionList.addAll(selectPotions);\n//                mTestProgressAdapter.setData(optionList);\n\n//                Thread.sleep(500);\n\n                PressureTestManager.getInstance().currentPressureTestModel.getOptionList().clear();\n                PressureTestManager.getInstance().currentPressureTestModel.getOptionList().addAll(selectPotions);\n\n                //发送完参数到测试中\n\n\n                roundAdapter.notifyDataSetChanged();\n\n\n                updateCurrentState();\n\n\n            }\n        });\n\n\n    }\n\n\n    protected void sendDatas(byte[] datas) {\n        if (isConnected()) {\n           // BaseApp.getInstance().BLUETOOTH_CONNECTED = true;\n            if (datas == null) {\n                return;\n            }\n            Log.e(\"tag\", \"data-send:\" + TransUtils.bytes2hex(datas));\n            DataManager.getInstance().getAppManager().cubicBLEDevice.writeValue(datas);\n\n        } else {\n           updateCurrentState();\n        }\n    }\n\n\n    public byte getIntByte(int number, int num) {\n        byte[] b = TransUtils.int2bytes(number);\n        return b[num];\n    }\n\n\n    private String formatNum(int num) {\n        if (num < 0) {\n            num = 0;\n        }\n        if (num < 10) {\n            return \"0\" + num;\n        } else {\n            return String.valueOf(num);\n        }\n\n    }\n\n\n\n    public void resetTestModel(){\n        PressureTestManager.getInstance().currentPressureTestModel.setCurrentState(\"0\");\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n       PressureTestManager.getInstance().currentPressureTestModel.resultList.clear();\n        PressureTestManager.getInstance().currentPressureTestModel.getPipeCodeList().clear();\n        PressureTestManager.getInstance().currentPressureTestModel.getPipeDiagramList().clear();\n        DeviceDataManager.getInstance().currentDeviceModel.deviceStatus = \"0\";\n        //清掉测压结果,管路图管码\n        DBManager.getInstance(BaseApp.getInstance()).clearPressureResultByTempTestId(currentModel.getTempTestId());\n        DBManager.getInstance(BaseApp.getInstance()).clearPipeCodeByTempTestId(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId());\n        DBManager.getInstance(BaseApp.getInstance()).clearPipeDiagramByTempTestId(currentModel.getTempTestId());\n\n\n        updateCurrentState();\n\n    }\n\n    public void updateCurrentPressureModelStatus(String status){\n\n        //如果状态是测试完成，不再赋值\n        if (\"2\".equals(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState()) || \"3\".equals(PressureTestManager.getInstance().currentPressureTestModel.getCurrentState())) {\n\n            return;\n        }\n\n        Log.i(\"pressureStatus: \", status);\n        PressureTestManager.getInstance().currentPressureTestModel.setCurrentState(status);\n        updateCurrentState();\n    }\n\n    public void showNoticeDialog(){\n        //forTest\n\n        if (noticeDialog != null){\n            return;\n        }\n        PressureTestActivity.this.runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                noticeDialog = new RFNoticeDialog(PressureTestActivity.this, \"The device is in pressure, reset the device?\", \"exit\", \"reset\", new RFNoticeDialog.RFNoticeDialogListener(){\n\n                    @Override\n                    public void leftBtnClick() {\n                        PressureTestActivity.this.finish();\n                    }\n\n                    @Override\n                    public void rightBtnClick() {\n\n\n\n                        resetDevice(true);\n\n                        resetTestModel();\n\n                    }\n                });\n\n                noticeDialog.show();\n            }\n        });\n    }\n\n\n    public void retestEnter(){\n\n        //当前单据如果不是最后的测试单据， 弹框重置\n//        if (!PressureTestManager.getInstance().isLastTest()){\n//            DeviceDataManager.getInstance().isReadDeviceStatus = false;\n//            Log.i(\"======\",\"\" + DeviceDataManager.getInstance().currentDeviceModel.deviceStatus);\n//            showNoticeDialog();\n//        }\n        if(PressureTestManager.getInstance().enterType == PressureTestManager.EnterType.EnterTypeRetest){\n            resetDevice(false);\n            resetTestModel();\n\n        }\n\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        ccEmailEditText.setText(getEmailsString());\n    }\n\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/rifeng/p2p/activity/PressureTestActivity.java	(revision a28551c00ca0f986bad3d72197623ec3e662eeaf)
-+++ app/src/main/java/com/rifeng/p2p/activity/PressureTestActivity.java	(date 1626241984000)
-@@ -6,13 +6,18 @@
- import android.content.Intent;
- import android.content.pm.ActivityInfo;
- import android.content.pm.PackageManager;
-+import android.graphics.Bitmap;
- import android.graphics.Color;
-+import android.graphics.drawable.BitmapDrawable;
- import android.graphics.drawable.Drawable;
- import android.os.Handler;
- import android.text.TextUtils;
- import android.util.DisplayMetrics;
- import android.util.Log;
-+import android.view.Gravity;
-+import android.view.LayoutInflater;
- import android.view.View;
-+import android.view.ViewGroup;
- import android.view.WindowManager;
- import android.widget.AdapterView;
- import android.widget.ArrayAdapter;
-@@ -20,6 +25,7 @@
- import android.widget.EditText;
- import android.widget.ImageView;
- import android.widget.LinearLayout;
-+import android.widget.PopupWindow;
- import android.widget.Spinner;
- import android.widget.TextView;
- 
-@@ -53,6 +59,7 @@
- import com.rifeng.p2p.adapter.RoundAdapter;
- import com.rifeng.p2p.app.BaseApp;
- import com.rifeng.p2p.db.DBManager;
-+import com.rifeng.p2p.entity.AddressItem;
- import com.rifeng.p2p.entity.Agreement;
- import com.rifeng.p2p.entity.LastDeviceTestId;
- import com.rifeng.p2p.entity.LookupCode;
-@@ -81,9 +88,11 @@
- import com.rifeng.p2p.view.RFProgressHud;
- import com.rifeng.p2p.viewmodel.BaseViewModel;
- import com.rifeng.p2p.viewmodel.PressureTestViewModel;
-+import com.rifeng.p2p.widget.AddressSelectView;
- import com.rifeng.p2p.widget.FullyGridLayoutManager;
- import com.rifeng.p2p.widget.GlideCacheEngine;
- import com.rifeng.p2p.widget.GlideEngine;
-+import com.rifeng.p2p.widget.RFDropdownListView;
- 
- 
- import java.io.IOException;
-@@ -137,8 +146,14 @@
-     @BindView(R.id.ccemail_bg_click_layout)
-     LinearLayout ccEmailBgLayout;
- 
--    @BindView(R.id.spinner_testmethod)
--    Spinner testMethodSpinner;
-+//    @BindView(R.id.spinner_testmethod)
-+//    Spinner testMethodSpinner;
-+    @BindView(R.id.basic_testmethod)
-+    TextView testMethodTextView;
-+
-+    @BindView(R.id.test_method_bg_click_layout)
-+    LinearLayout testMethodBgLayout;
-+
- 
-     //蓝牙
-     @BindView(R.id.blue_tooth_bg)
-@@ -240,6 +255,7 @@
-     @BindView(R.id.tv_statu)
-     TextView resultTextView;
- 
-+
-     BluetoothListDialog bluetoothListDialog = null;
- 
-     private boolean didGetParameter = false;
-@@ -352,32 +368,47 @@
-             }
-         });
- 
--        testMethodSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-+        testMethodTextView.setClickable(true);
-+        testMethodTextView.setOnClickListener(new View.OnClickListener() {
-             @Override
--            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {
--                String methodCode = PressureTestManager.getInstance().testMethodList.get(position).getItem_code();
--                String testMethod = PressureTestManager.getInstance().testMethodList.get(position).getItem_name();
--                currentSelectTestMethod = PressureTestManager.getInstance().testMethodList.get(position);
--
--                TextView view = (TextView) selectedItemView;
--                if (testMethod.equals(PressureTestViewModel.DEFAULT_TEST_MTTHOD)){
--                    view.setTextColor(ContextCompat.getColor(PressureTestActivity.this, R.color.Color_Word25));
--                }else{
--                    view.setTextColor(ContextCompat.getColor(PressureTestActivity.this, R.color.Color_Word85));
--                }
--
--                PressureTestManager.getInstance().currentPressureTestModel.setTestMethod(testMethod);
--                PressureTestManager.getInstance().currentPressureTestModel.setTestMethodCode(methodCode);
--                // mAgent.setTestMethod(methodCode);
-+            public void onClick(View v) {
-+                showTextMethodPopwindow();
-             }
-+        });
- 
--
-+        testMethodBgLayout.setOnClickListener(new View.OnClickListener(){
-             @Override
--            public void onNothingSelected(AdapterView<?> parentView) {
--
-+            public void onClick(View v) {
-+                showTextMethodPopwindow();
-             }
-+        });
- 
--        });
-+//        testMethodSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-+//            @Override
-+//            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {
-+//                String methodCode = PressureTestManager.getInstance().testMethodList.get(position).getItem_code();
-+//                String testMethod = PressureTestManager.getInstance().testMethodList.get(position).getItem_name();
-+//                currentSelectTestMethod = PressureTestManager.getInstance().testMethodList.get(position);
-+//
-+//                TextView view = (TextView) selectedItemView;
-+//                if (testMethod.equals(PressureTestViewModel.DEFAULT_TEST_MTTHOD)){
-+//                    view.setTextColor(ContextCompat.getColor(PressureTestActivity.this, R.color.Color_Word25));
-+//                }else{
-+//                    view.setTextColor(ContextCompat.getColor(PressureTestActivity.this, R.color.Color_Word85));
-+//                }
-+//
-+//                PressureTestManager.getInstance().currentPressureTestModel.setTestMethod(testMethod);
-+//                PressureTestManager.getInstance().currentPressureTestModel.setTestMethodCode(methodCode);
-+//                // mAgent.setTestMethod(methodCode);
-+//            }
-+//
-+//
-+//            @Override
-+//            public void onNothingSelected(AdapterView<?> parentView) {
-+//
-+//            }
-+//
-+//        });
- 
-         bluetoothBgLayout.setOnClickListener(new View.OnClickListener() {
-             @Override
-@@ -540,6 +571,48 @@
- 
-     }
- 
-+    //获取整个layout的上下文，即layout的根组件
-+    private View getContentView() {
-+        return this.findViewById(R.id.pressure_test_all_bg_layout);
-+    }
-+
-+
-+    PopupWindow popupWindow;
-+    /**
-+     * 显示popupWindow
-+     */
-+    private void showTextMethodPopwindow() {
-+
-+        Log.i("showTextMethodPopwindow","call =====");
-+
-+        if (PressureTestManager.getInstance().testMethodList.size() == 0){
-+
-+            return;
-+        }
-+        View contentView = LayoutInflater.from(this).inflate(R.layout.test_method_popup_layout, null);
-+        popupWindow = new PopupWindow(contentView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT, true);
-+        popupWindow.setAnimationStyle(R.style.anim_testmethod_popup);
-+        popupWindow.showAtLocation(PressureTestActivity.this.getContentView(), Gravity.RIGHT | Gravity.BOTTOM, 0, 0);
-+        RFDropdownListView selectview = contentView.findViewById(R.id.select_testmethod);
-+        selectview.setLookupCodeList(PressureTestManager.getInstance().testMethodList);
-+        selectview.setDropdownListViewListener(new RFDropdownListView.RFDropdownListViewListener() {
-+            @Override
-+            public void onClickItem(LookupCode code) {
-+                testMethodTextView.setText(code.getItem_name());
-+                PressureTestManager.getInstance().currentPressureTestModel.setTestMethod(code.getItem_name());
-+                PressureTestManager.getInstance().currentPressureTestModel.setTestMethodCode(code.getItem_code());
-+                popupWindow.dismiss();
-+            }
-+
-+            @Override
-+            public void onClickClose() {
-+                popupWindow.dismiss();
-+            }
-+        });
-+
-+
-+    }
-+
-     private void resetDevice(boolean isShowLoading) {
- 
-         if (isShowLoading){
-@@ -1570,27 +1643,30 @@
-             LookupCode code = PressureTestManager.getInstance().testMethodList.get(i);
-             if (code.getItem_name().equals(currentModel.getTestMethod())){
-                 index = i;
-+                testMethodTextView.setText(code.getItem_name());
-                 break;
-             }
-         }
- 
--        int finalIndex = index;
--        PressureTestActivity.this.runOnUiThread(new Runnable() {
--            @Override
--            public void run() {
--                TestMethodAdapter<LookupCode> adapter = new TestMethodAdapter<>(PressureTestActivity.this, R.layout.simple_spinner_item, PressureTestManager.getInstance().testMethodList);
--                adapter.setDropDownViewResource(R.layout.test_method_drop_down);
--                testMethodSpinner.setAdapter(adapter);
--                if (finalIndex != -1){
--                    testMethodSpinner.setSelection(finalIndex,  true);
--                }else{
--                    if (PressureTestManager.getInstance().testMethodList.size() > 0) {
--                        testMethodSpinner.setSelection(PressureTestManager.getInstance().testMethodList.size() - 1, true);
--                    }
--                }
- 
--            }
--        });
-+
-+//        int finalIndex = index;
-+//        PressureTestActivity.this.runOnUiThread(new Runnable() {
-+//            @Override
-+//            public void run() {
-+//                TestMethodAdapter<LookupCode> adapter = new TestMethodAdapter<>(PressureTestActivity.this, R.layout.simple_spinner_item, PressureTestManager.getInstance().testMethodList);
-+//                adapter.setDropDownViewResource(R.layout.test_method_drop_down);
-+//                testMethodSpinner.setAdapter(adapter);
-+//                if (finalIndex != -1){
-+//                    testMethodSpinner.setSelection(finalIndex,  true);
-+//                }else{
-+//                    if (PressureTestManager.getInstance().testMethodList.size() > 0) {
-+//                        testMethodSpinner.setSelection(PressureTestManager.getInstance().testMethodList.size() - 1, true);
-+//                    }
-+//                }
-+//
-+//            }
-+//        });
-     }
- 
-     class TestMethodAdapter<T> extends ArrayAdapter {
-Index: app/src/main/res/values/styles.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><resources>\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n        <item name=\"android:layout_height\">48dp</item>\r\n        <item name=\"android:layout_width\">41dp</item>\r\n        <item name=\"android:textSize\">30dp</item>\r\n        <item name=\"android:textStyle\">bold</item>\r\n    </style>\r\n    <style name=\"loading_dialog\" parent=\"android:style/Theme.Dialog\">\r\n        <item name=\"android:windowFrame\">@null</item> <!-- 边框 -->\r\n        <item name=\"android:windowNoTitle\">true</item> <!-- 无标题 -->\r\n        <item name=\"android:windowIsTranslucent\">true</item> <!-- 半透明 -->\r\n        <item name=\"android:windowBackground\">@android:color/transparent</item> <!-- 背景透明 -->\r\n        <item name=\"android:windowIsFloating\">true</item> <!-- 是否浮现在activity之上 -->\r\n        <item name=\"android:backgroundDimEnabled\">false</item> <!-- 模糊，默认为true -->\r\n        <item name=\"android:windowContentOverlay\">@null</item>\r\n        <item name=\"android:backgroundDimAmount\">0.5</item>\r\n    </style>\r\n    <style name=\"RFProgressDialog\" parent=\"Theme.AppCompat.Dialog\">\r\n        <item name=\"android:backgroundDimEnabled\">false</item>\r\n        <item name=\"android:windowBackground\">@android:color/transparent</item>\r\n    </style>\r\n    <style name=\"DefaultDialog\" parent=\"@android:style/Theme.Dialog\">\r\n        <item name=\"android:windowNoTitle\">true</item>\r\n        <item name=\"android:colorBackground\">@android:color/transparent</item>\r\n    </style>\r\n    <style name=\"AppTheme.FullScreen\" parent=\"AppTheme\">\r\n        <item name=\"android:windowFullscreen\">true</item>\r\n        <item name=\"android:windowNoTitle\">true</item>\r\n        <item name=\"android:windowActionBar\">false</item>\r\n        <item name=\"windowNoTitle\">true</item>\r\n        <item name=\"windowActionBar\">false</item>\r\n    </style>\r\n    <style name=\"MyCheckBox\" parent=\"Theme.AppCompat.Light\">\r\n        <item name=\"colorControlNormal\">@color/Color_Word25</item>\r\n        <item name=\"colorControlActivated\">@color/colorOfRound1</item>\r\n    </style>\r\n    <style name=\"textview_style\">\r\n        <item name=\"android:layout_height\">30dp</item>\r\n        <item name=\"android:layout_width\">30dp</item>\r\n        <item name=\"android:background\">@color/white</item>\r\n        <item name=\"android:gravity\">center</item>\r\n        <item name=\"android:textColor\">@color/Color_Word25</item>\r\n        <item name=\"android:textSize\">25dp</item>\r\n        <item name=\"android:textStyle\">bold</item>\r\n    </style>\r\n\r\n    <style name=\"Dialog\" parent=\"android:style/Theme.Dialog\">\r\n        <item name=\"android:background\">#00000000</item>\r\n        <item name=\"android:windowBackground\">@android:color/transparent</item>\r\n        <item name=\"android:windowNoTitle\">true</item>\r\n        <item name=\"android:windowIsFloating\">true</item>\r\n    </style>\r\n\r\n    <style name=\"TabLayoutTextStyleSelect\"\r\n        parent=\"@android:style/TextAppearance.Widget.TabWidget\">\r\n        <item name=\"android:textSize\">18sp</item>\r\n        <item name=\"android:textColor\">@color/Color_Main</item>\r\n        <item name=\"android:textStyle\">bold</item>\r\n        <item name=\"android:gravity\">center</item>\r\n        <item name=\"android:textAllCaps\">false</item>\r\n    </style>\r\n\r\n    <style name=\"TabLayoutTextStyle\"\r\n        parent=\"@android:style/TextAppearance.Widget.TabWidget\"\r\n        >\r\n        <item name=\"android:textSize\">16sp</item>\r\n        <item name=\"android:textStyle\">normal</item>\r\n        <item name=\"android:textColor\">@color/Color_Word45</item>\r\n        <item name=\"android:gravity\">center</item>\r\n        <item name=\"android:textAllCaps\">false</item>\r\n    </style>\r\n</resources>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/values/styles.xml	(revision a28551c00ca0f986bad3d72197623ec3e662eeaf)
-+++ app/src/main/res/values/styles.xml	(date 1626241712000)
-@@ -72,4 +72,9 @@
-         <item name="android:gravity">center</item>
-         <item name="android:textAllCaps">false</item>
-     </style>
-+
-+    <style name="anim_testmethod_popup">
-+        <item name="android:windowEnterAnimation">@anim/popup_in</item>
-+        <item name="android:windowExitAnimation">@anim/popup_out</item>
-+    </style>
- </resources>
-Index: app/src/main/res/layout/item_popup_list.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/item_popup_list.xml	(date 1626240769000)
-+++ app/src/main/res/layout/item_popup_list.xml	(date 1626240769000)
-@@ -0,0 +1,19 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:layout_width="match_parent"
-+    android:layout_height="48dp">
-+
-+    <TextView
-+        android:id="@+id/tv"
-+        android:background="#fff"
-+        android:layout_width="match_parent"
-+        android:layout_height="48dp"
-+        android:textSize="@dimen/size_14sp"
-+        android:paddingLeft="12dp"
-+        android:foreground="?android:attr/selectableItemBackground"
-+        android:textColor="#333"
-+        android:text="@string/app_name"
-+        android:gravity="center|left"
-+        />
-+
-+</LinearLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/rifeng/p2p/manager/DeviceDataManager.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.rifeng.p2p.manager;\n\nimport android.content.Intent;\nimport android.os.Environment;\nimport android.os.Handler;\nimport android.util.Log;\n\n\nimport com.google.gson.Gson;\nimport com.google.gson.GsonBuilder;\nimport com.google.gson.reflect.TypeToken;\nimport com.rifeng.p2p.BuildConfig;\nimport com.rifeng.p2p.R;\nimport com.rifeng.p2p.activity.PressureTestActivity_ViewBinding;\nimport com.rifeng.p2p.app.BaseApp;\nimport com.rifeng.p2p.db.DBManager;\nimport com.rifeng.p2p.entity.DeviceModel;\nimport com.rifeng.p2p.entity.Option;\nimport com.rifeng.p2p.entity.Point;\nimport com.rifeng.p2p.entity.PressureResultBean;\nimport com.rifeng.p2p.entity.UpdataUIEven;\nimport com.rifeng.p2p.http.RFException;\nimport com.rifeng.p2p.http.RFService;\nimport com.rifeng.p2p.http.RXHelper;\nimport com.rifeng.p2p.http.RetrofitFactory;\nimport com.rifeng.p2p.util.LogToFileUtils;\nimport com.rifeng.p2p.util.StringUtils;\nimport com.rifeng.p2p.view.RFProgressHud;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.UnsupportedEncodingException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Timer;\nimport java.util.TimerTask;\n\nimport cn.fly2think.blelib.BroadcastEvent;\nimport cn.fly2think.blelib.RFStarBLEService;\nimport cn.fly2think.blelib.TransUtils;\nimport de.greenrobot.event.EventBus;\nimport io.reactivex.annotations.NonNull;\nimport io.reactivex.functions.Action;\nimport io.reactivex.functions.Consumer;\n\n/**\n * Created by keguihong on 2017/9/15.\n */\n\npublic class DeviceDataManager {\n    //是否成功发送测压参数\n    public static boolean didSuccessSendSelectParam = false;\n\n    public interface DeviceDataManagerListener{\n\n        public void success();\n        public void fail();\n    }\n\n    public DeviceDataManagerListener mListener = null;\n\n    public DeviceModel currentDeviceModel = new DeviceModel();\n\n    public final static int maxTime = 600;\n\n    private static DeviceDataManager ourInstance;\n\n    public List<Byte> recvs = new ArrayList<>();\n    public int len = 0;\n\n    private int bleDeviceRound;\n\n    //是否要使用设备状态\n    public boolean isReadDeviceStatus = false;\n    public String result = \"\";\n\n    OnUpdateDataListener updateDataListener;\n    OnAddEngResultListener onAddEnqListener;\n\n    public boolean didGetDeviceUniqueCode= false;\n\n\n    File bleDataFile;\n    //private BleRecords records = new BleRecords();\n    List<String> testRoundTime = new ArrayList<>();\n    List<Long> optionList = new ArrayList<>();\n    Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd HH:mm:ss\").serializeNulls().create();\n\n\n    private DeviceDataManager() {\n        bleDataFile = getBleDataFile(BaseApp.getInstance().getApplicationContext().getString(R.string.app_name));\n        if (!EventBus.getDefault().isRegistered(this)) {\n            EventBus.getDefault().register(this);\n        }\n    }\n\n    public static DeviceDataManager getInstance() {\n        if (ourInstance == null) {\n            ourInstance = new DeviceDataManager();\n        }\n        return ourInstance;\n    }\n\n    public void clear() {\n        recvs = new ArrayList<>();\n        len = 0;\n\n        currentDeviceModel.pressureStart = 0;\n        currentDeviceModel.pressureEnd = 0;\n        currentDeviceModel.currentPressure = 0;\n        currentDeviceModel.totalTime = 0;\n        currentDeviceModel.realTime = 0;\n\n        result = \"\";\n        LogToFileUtils.write(\"清空缓存数据\");\n    }\n\n    public void exit() {\n//        clear();\n        if (EventBus.getDefault().isRegistered(ourInstance)) {\n            EventBus.getDefault().unregister(ourInstance);\n        }\n        ourInstance = null;\n    }\n\n    // 蓝牙 状态以及数据回调接口\n    public void onEventMainThread(BroadcastEvent event) {\n\n\n        Intent intent = event.getIntent();\n        String action = intent.getAction();\n        if (RFStarBLEService.ACTION_GATT_CONNECTED.equals(action)) {\n            LogToFileUtils.write(\"蓝牙状态：ACTION_GATT_CONNECTED\");\n\n        } else if (RFStarBLEService.ACTION_GATT_DISCONNECTED.equals(action)) {\n            currentDeviceModel.totalTime = 0;\n            currentDeviceModel.realTime = 0;\n            LogToFileUtils.write(\"蓝牙断开链接，清空总时及实时的时间\");\n            didGetDeviceUniqueCode = false;\n        } else if (RFStarBLEService.ACTION_GATT_SERVICES_DISCOVERED.equals(action)) {\n        } else if (RFStarBLEService.ACTION_GATT_CONNECTING.equals(action)) {\n        } else if (RFStarBLEService.ACTION_DATA_AVAILABLE.equals(action)) {\n            byte[] datas = intent.getByteArrayExtra(RFStarBLEService.EXTRA_DATA);\n            Log.e(\"tag\", \"data:\" + TransUtils.bytes2hex(datas));\n            LogToFileUtils.write(\"data-get:\" + TransUtils.bytes2hex(datas));\n\n            // 新设备 发送 fff3 到手机\n            // 收到 fff3 表示新设备\n            if ((datas[0] & 0xFF) == 0xFF && (datas[1] & 0xFF) == 0xF3) {\n                LogToFileUtils.write(\"新设备发送fff3到手机 手机回复fff1\");\n                // 需要回复 fff1 给设备\n                DataManager.getInstance().currentDeviceType = DataManager.DeviceType.DeviceTypeNew;\n                // 数据溢出 -1 表示 FF, -2 表示 FE\n                byte[] settings = {-1, -15};\n\n                sendDatas(settings);\n                return;\n            }\n\n            //收到测压结果\n            if (datas[0] == 0x57 && datas[1] == 0x50 && datas[2] == 0x47 && datas[3] == 0x05) {\n                if (DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew\n                ) {\n                    getNewPressurePreAll(datas);\n                } else {\n                    getPressurePerAll(datas);\n                }\n                recvs.clear();\n            } else if (datas[0] == 0x57 && datas[1] == 0x50 && datas[2] == 0x47 && datas[3] == 0x03 && datas[4] == 0x00) {\n                forwardOldAppId();\n                recvs.clear();\n            } else if (datas[0] == 0x57 && datas[1] == 0x50 && datas[2] == 0x47 && datas[3] == 0x10 && datas[4] == 0x02 && datas[5] == 0x4f && datas[6] == 0x4b) {\n                //接收到APP发的数据，测压仪应返回一个指令，表示数据已接收。\n                //0x57  0x50 0x47  0x10   0x02  0x4f  0x4b\n                if (mListener != null){\n                    //发送完试压参数，设备收到指令返回\n                    Log.i(\"====\", \"发送完试压参数，设备收到指令返回\");\n                    didSuccessSendSelectParam = true;\n                    mListener.success();\n                }\n                recvs.clear();\n            } else if (datas[0] == 0x57 && datas[1] == 0x50 && datas[2] == 0x47 && datas[3] == 0x0A && datas[4] == 0x0B) {\n\n                //获取到设备唯一码\n//                if(!(DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew)){\n                didGetDeviceUniqueCode = true;\n                // 获取设备id\n                Log.e(\"tag\", \"获取新设备 试压仪编码\");\n                String responseID = TransUtils.bytes2hex(datas);\n                int length = responseID.length();\n                String tmp = responseID.substring(10, length);\n                Log.e(\"tag\", \"试压仪编码 \" + tmp);\n                currentDeviceModel.deviceUniqueCode = tmp;\n                updateDataListener.didGetDeviceUniqueCode();\n\n\n            } else {\n\n                for (byte b : datas) {\n                    recvs.add(b);\n                    if (recvs.size() == 1) {\n                        if (recvs.get(0) != 0x57) {\n                            recvs.clear();\n                        }\n                    } else if (recvs.size() == 2) {\n                        if (recvs.get(1) != 0x50) {\n                            recvs.clear();\n                        }\n                    } else if (recvs.size() == 3) {\n                        if (recvs.get(2) != 0x47) {\n                            recvs.clear();\n                        }\n                    } else if (recvs.size() == 5) {\n                        len = recvs.get(4) & 0xff;\n                    } else if (recvs.size() == len + 5) {\n\n\n\n\n                        if (updateDataListener != null) {\n                            forwardDatas(TransUtils.toPrimitive(recvs));\n                            updateDataListener.updateDataListener(TransUtils.toPrimitive(recvs));\n                        }\n\n                        UpdataUIEven even = new UpdataUIEven();\n                        even.setRecvs(TransUtils.toPrimitive(recvs));\n                        EventBus.getDefault().post(even);\n                        recvs.clear();\n                    }\n                }\n\n\n            }\n\n\n\n        }\n\n    }\n\n    public void fail(String msg) {\n        DataManager.getInstance().IS_DEVICEID_UPDATE = true;\n        if (DeviceDataManager.this.onAddEnqListener != null) {\n            DeviceDataManager.this.onAddEnqListener.onFaile(msg);\n        }\n    }\n\n    private void forwardDatas(byte[] datas) {\n        //语音播报\n        if (datas[3] == 0x02) {\n            switch (datas[5]) {\n                case 0x30:\n                    Log.e(\"tag\", \"请加压\");\n                    return;\n                case 0x31:\n                    Log.e(\"tag\", \"超压\");\n                    return;\n                case 0x32:\n                    Log.e(\"tag\", \"测试异常\");\n                    return;\n                case 0x33:\n                    Log.e(\"tag\", \"继续测试\");\n                    return;\n                case 0x34:\n                    Log.e(\"tag\", \"低电提示\");\n                    return;\n                case 0x35:\n                    Log.e(\"tag\", \"已超压\");\n                    return;\n            }\n\n            int value = datas[5] & 0xff;\n            if (value % 2 == 0) {\n                int end = value / 2;\n                Log.e(\"tag\", \"第\" + end + \"次保压结束\");\n            } else {\n                int start = value / 2 + 1;\n                Log.e(\"tag\", \"第\" + start + \"次保压开始\");\n            }\n            //实时数据模式\n        } else if (datas[3] == 0x01) {\n\n\n            currentDeviceModel.isGetRealData = true;\n\n            // strSeveralTests\n            currentDeviceModel.round = datas[7] & 0xff;\n\n            byte[] pressure_starts = {0x00, 0x00, datas[8], datas[9]};\n            //初始压力值 测试初始值 strTestInitialValue\n            currentDeviceModel.pressureStart = Integer.parseInt(TransUtils.bytes2hex(pressure_starts), 16);\n\n            byte[] pressure_ends = {0x00, 0x00, datas[10], datas[11]};\n            //最终压力值 测试结束值 strTestEndValue\n            currentDeviceModel.pressureEnd = Integer.parseInt(TransUtils.bytes2hex(pressure_ends), 16);\n\n            byte[] pressure_reals = {0x00, 0x00, datas[12], datas[13]};\n            //实时压力值 当前压力值 strCurrentPressureValue\n            currentDeviceModel.currentPressure = Integer.parseInt(TransUtils.bytes2hex(pressure_reals), 16);\n\n            //倒计时总时间\n            // strTheHoldingTimeMinutes\n            int minT = datas[14] & 0xff;\n            // strTheHoldingTimeSeconds\n            int secT = datas[15] & 0xff;\n            // 一个周期总共时间\n            currentDeviceModel.totalTime = minT * 60 + secT;\n\n            //实时倒计时\n            // strCountdownTimeMinutes\n            int min = datas[16] & 0xff;\n            // strCountdownTimeSeconds\n            int sec = datas[17] & 0xff;\n            // 实际倒计时时间\n            currentDeviceModel.realTime = min * 60 + sec;\n\n            // strKilogramsModel\n            int type = datas[18] & 0xff;//测试模式（多少公斤）\n\n\n            String deviceType = \"\";\n            if (DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew) {\n                deviceType = \"新设备(数据最后读取保存)\";\n            } else {\n                deviceType = \"旧设备(数据实时保存)\";\n            }\n\n            //如果新连接上没获取到key\n            if (!didGetDeviceUniqueCode) {\n                getNewAppKey();\n            }\n            //电池\n            switch (datas[6]){\n                case 0x00:\n                    currentDeviceModel.deviceBattery = \"0\";\n                    break;\n                case 0x01:\n                    currentDeviceModel.deviceBattery = \"1\";\n                    break;\n                case 0x02:\n                    currentDeviceModel.deviceBattery = \"2\";\n                    break;\n                case 0x03:\n                    currentDeviceModel.deviceBattery = \"3\";\n                    break;\n                case 0x04:\n                    currentDeviceModel.deviceBattery = \"4\";\n                    break;\n                default:\n                    currentDeviceModel.deviceBattery = \"0\";\n                    break;\n            }\n            switch (datas[5]) {\n\n\n                case 0x00:\n                    // result strEquipmentState 就是设备状态\n                    LogToFileUtils.write(\"蓝牙等待状态\");\n                    result = \"等待\";\n                    // 等待中，压力开始值设置为0\n                    currentDeviceModel.pressureStart = 0;\n                    currentDeviceModel.deviceStatus = \"0\";\n\n                    break;\n                case 0x01:\n                    result = \"测试中\";\n                    currentDeviceModel.deviceStatus = \"1\";\n                    if (!(DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew)) {\n\n                        //旧设备暂不处理\n\n                    }\n                    LogToFileUtils.write(\"设备类型:\" + deviceType + \"测试中：第\" + currentDeviceModel.round + \"次测试 \" + \"状态结果：\" + result + \" 初始压力值：\" + currentDeviceModel.pressureStart + \" 实时压力值：\" + currentDeviceModel.currentPressure + \" pressure_end：\" + currentDeviceModel.pressureEnd + \" 倒计时总时间：\" + currentDeviceModel.totalTime + \" 实时倒计时:\" + currentDeviceModel.realTime);\n\n                    break;\n                case 0x02:\n                    currentDeviceModel.deviceStatus = \"2\";\n                    LogToFileUtils.write(\"异常\");\n                    result = \"FAIL\";\n                    if (DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew) {\n                        getResultData(\"FAIL\");\n                    } else {\n                        getResultData(\"FAIL\");\n                    }\n                    break;\n                case 0x03:\n                    if ( currentDeviceModel.round == PressureTestManager.getInstance().currentPressureTestModel.optionList.size()){\n                        currentDeviceModel.deviceStatus = \"3\";\n                        result = \"PASS\";\n                        getResultData(\"PASS\");\n                        break;\n                    }\n\n            }\n\n\n\n\n        } else if (datas[3] == 0x03) {\n            //连接上默认发送 5750470300\n\n        } else if (datas[3] == 0x08) {\n            //新设备，回复415418010A\n            Log.e(\"TAG\", \"新设备反馈 57504708010A\");\n            DataManager.getInstance().currentDeviceType = DataManager.DeviceType.DeviceTypeNew;\n            forwardNewAppId();\n        }\n    }\n\n\n    /**\n     * APP识别码\n     * 收到0x57  0x50  0x47  0x03   0x00指令时需回应\n     */\n    private void forwardOldAppId() {\n        byte[] settings = {0x41, 0x54, 0x12, 0x03, 0x01, 0x02, 0x03};\n        sendDatas(settings);\n    }\n\n    // 新设备，发送 415418010A\n    private void forwardNewAppId() {\n//        41 54 18 01 0A\n        byte[] settings = {0x41, 0x54, 0x18, 0x01, 0x0A};\n        sendDatas(settings);\n    }\n\n    private void getNewAppKey() {\n        byte[] settings = {0x41, 0x54, 0x0A, 0x00, 0x0A};\n        sendDatas(settings);\n    }\n\n\n    protected boolean isConnected() {\n        return DataManager.getInstance().getAppManager().cubicBLEDevice != null && DataManager.getInstance().getAppManager().cubicBLEDevice.isConnected();\n    }\n\n    protected void sendDatas(byte[] datas) {\n        if (isConnected()) {\n            if (datas == null) {\n                return;\n            }\n            Log.e(\"tag\", \"data-send:\" + TransUtils.bytes2hex(datas));\n            LogToFileUtils.write(\"data-send:\" + TransUtils.bytes2hex(datas));\n            LogToFileUtils.write(\"data-send:\" + TransUtils.bytes2hex(datas));\n            DataManager.getInstance().getAppManager().cubicBLEDevice.writeValue(datas);\n        }\n    }\n\n    public void getResultData(String result) {\n\n\n        //如果当前单据是测试中\n        if (updateDataListener != null) {\n            updateDataListener.getResule4Wating();\n        }\n//            //试压仪最后round是加了1的\n        getBleDeviceData();\n\n    }\n\n\n    Handler mHandler = new Handler();\n    Runnable r = new Runnable() {\n        @Override\n        public void run() {\n            //do something\n            //每隔1s循环执行run方法\n            if (result.equalsIgnoreCase(\"FAIL\")) {\n                if (bleDeviceRound <= currentDeviceModel.round) {\n                    forwardDataPreAll(bleDeviceRound);\n                    mHandler.postDelayed(this, 1000);\n                    bleDeviceRound++;\n                } else {\n\n                    new Handler().postDelayed(new Runnable() {\n                        @Override\n                        public void run() {\n                            //这里为<round是因为最后的结果中，试压仪返回的round是+1了的\n                            //弹窗显示失败\n                            if (updateDataListener != null) {\n                                updateDataListener.testFail();\n\n                            }\n                            //forwordFinishAllTest();\n                        }\n                    }, 1000);\n                }\n            } else {\n\n\n                if (bleDeviceRound <= PressureTestManager.getInstance().currentPressureTestModel.getOptionList().size()) {\n                    forwardDataPreAll(bleDeviceRound);\n                    mHandler.postDelayed(this, 1000);\n                    bleDeviceRound++;\n                } else {\n\n                    new Handler().postDelayed(new Runnable() {\n                        @Override\n                        public void run() {\n                            //这里为<round是因为最后的结果中，试压仪返回的round是+1了的\n                            if (updateDataListener != null) {\n                                //弹窗显示成功\n                                //updateDataListener.testPass();\n\n\n                            }\n\n                            //forwordFinishAllTest();\n                        }\n                    }, 2000);\n                }\n            }\n\n        }\n    };\n\n\n    /**\n     * 获取试压仪保存的数据\n     */\n    private void getBleDeviceData() {\n        bleDeviceRound = 1;\n        mHandler.post(r);\n    }\n\n\n    public void setUpdateDataListener(OnUpdateDataListener updateDataListener) {\n        this.updateDataListener = updateDataListener;\n    }\n\n    public void setOnAddEnqListener(OnAddEngResultListener onAddEnqListener) {\n        this.onAddEnqListener = onAddEnqListener;\n    }\n\n    private File getBleDataFile(String id) {\n        File file;\n        // 判断是否有SD卡或者外部存储器\n        if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\n            // 有SD卡则使用SD - PS:没SD卡但是有外部存储器，会使用外部存储器\n            // SD\\Android\\data\\包名\\files\\Log\\logs.txt\n            file = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/BleData/\");\n        } else {\n            // 没有SD卡或者外部存储器，使用内部存储器\n            // \\data\\data\\包名\\files\\Log\\logs.txt\n            file = new File(BaseApp.getInstance().getFilesDir().getPath() + \"/BleData/\");\n        }\n        // 若目录不存在则创建目录\n        if (!file.exists()) {\n            file.mkdir();\n        }\n        File bleDataFile = new File(file.getPath(), id + \".txt\");\n        if (!bleDataFile.exists()) {\n            try {\n                bleDataFile.createNewFile();\n            } catch (Exception e) {\n                Log.e(\"tag\", \"Create file failure !!! \" + e.toString());\n            }\n        }\n        return bleDataFile;\n    }\n\n    public void writeBleData(String str) {\n//        // 判断是否初始化或者初始化是否成功\n//        bleDataFile = getBleDataFile(BaseApp.getInstance().getApplicationContext().getString(R.string.app_name));\n//        if (null == bleDataFile || !bleDataFile.exists()) {\n//            return;\n//        }\n//        try {\n//            BufferedWriter bw = new BufferedWriter(new FileWriter(bleDataFile, true));\n//            bw.write(str);\n//            bw.write(\"\\r\\n\");\n//            bw.flush();\n//        } catch (Exception e) {\n//            Log.e(\"tag\", \"Write failure !!! \" + e.toString());\n//        }\n        LogToFileUtils.write(str);\n    }\n\n    public interface OnUpdateDataListener {\n\n        void didConnectBlueTooth();\n\n\n        void didGetDeviceUniqueCode();\n\n        void didCheckUniqueCode();\n\n        void updateDataListener(byte[] datas);\n\n        void goResult(String result);\n\n        void testPass();\n\n        void testFail();\n\n        void getResule4Wating();\n    }\n\n\n    public interface OnAddEngResultListener {\n        void onFaile(String faileMsg);\n    }\n\n    //重置试压仪\n    public void resetDevice(DeviceDataManagerListener listener){\n        forwordFinishAllTest();\n        //Thread.sleep(1000);\n        final Timer t = new Timer();\n        t.schedule(new TimerTask() {\n            public void run() {\n\n                if (listener != null){\n\n\n                    listener.success();\n                }\n            }\n        }, 2000);\n\n    }\n\n    public void forwordFinishAllTest() {\n        LogToFileUtils.write(\"发送重置设备指令\");\n        if (DataManager.getInstance().currentDeviceType == DataManager.DeviceType.DeviceTypeNew) {\n            //新设备重置\n            byte[] replys = {0x41, 0x54, 0x31, 0x00};\n            sendDatas(replys);\n        } else {\n            byte[] replys = {0x41, 0x54, 0x13, 0x00};\n            sendDatas(replys);\n        }\n\n        currentDeviceModel.clear();\n\n    }\n\n    public void forwardDataPreAll(int round) {\n        byte[] bytes = {0x41, 0x54, 0x14, 0x01, TransUtils.int2bytes(round)[3]};\n        sendDatas(bytes);\n    }\n\n\n    public void getNewPressurePreAll(byte[] datas) {\n        LogToFileUtils.write(\"新设备 DataManager: 蓝牙返回575047\");\n        // 需求： 将目前实时获取试压数据的机制改为可延迟获取试压数据 未完成\n        // 只有 20个字节\n        // 数据个数\n        long num = datas[4] & 0xff;\n        // 数据下标(顺序)\n        long squence = datas[5] & 0xff;\n        // 测试轮数 ()\n        int rounds = datas[7] & 0xff;\n        // 分钟\n        int starMin = datas[8] & 0xff;\n\n        String resultStr = \"\";\n        try {\n            resultStr = new String(datas, \"UTF-8\");\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n\n        float startPressure = 0;\n        float endPressure = 0;\n\n        List<String> pointArray = new ArrayList<String>();\n        // press 值, 需要拿剩下的所有位数\n        // 每2个字节代表一个压力数据\n        for (int i = 9; i < datas.length - 1; i = i + 2) {\n            byte[] press_value = {0x00, 0x00, datas[i], datas[i + 1]};\n            // 压力数据\n            Integer cur_press_value = Integer.parseInt(TransUtils.bytes2hex(press_value), 16);\n            if (i == 9) {\n                //第一个作为结束压力\n                endPressure = cur_press_value;\n            }\n            //最后一个为开始压力\n            startPressure = cur_press_value;\n            // 当前第几轮\n            int curRound = rounds;\n//            saveNewValue(curRound + \"\", starMin + \"\", cur_press_value + \"\");\n            pointArray.add(\"{\\\"point\\\"\" + starMin + \":\\\"min\\\",\\\"pressure\\\":\" + cur_press_value + \"}\");\n            // 对应的分钟数 从起始分钟数开始递减\n            starMin--;\n        }\n\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"[\");\n\n        if (pointArray.size() > 0) {\n            for (int i = pointArray.size() - 1; i >= 0; i--) {\n                String point = pointArray.get(i);\n                if (i == 0) {\n                    sb.append(point);\n                } else {\n                    sb.append(point);\n                    sb.append(\",\");\n                }\n            }\n        }\n\n        sb.append(\"]\");\n\n\n        Log.i(\"======didGetResult\", \"\" + sb.toString() + \"   rounds:\" + rounds + \" optinSize:\" + PressureTestManager.getInstance().currentPressureTestModel.getOptionList().size());\n\n        if (rounds <= PressureTestManager.getInstance().currentPressureTestModel.getOptionList().size()) {\n\n            Option option = PressureTestManager.getInstance().currentPressureTestModel.getOptionList().get(rounds-1);\n            PressureResultBean result = new PressureResultBean();\n            result.setTempTestId(PressureTestManager.getInstance().currentPressureTestModel.getTempTestId());\n            result.setRound(\"\" + rounds);\n            result.setResult(sb.toString());\n            result.setGroupPressure(option.getStartPressure() + \"\");\n            result.setStartPressure(startPressure + \"\"); //\n            result.setEndPressure(endPressure + \"\");\n            result.setDecisionStandard(option.getDecisionStandard());\n\n            //如果当前单据是设备最后的测试单据\n            if (PressureTestManager.getInstance().isLastTest()){\n                //保存到数据库\n                DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(result);\n\n                //如果是获取到最后一轮数据\n                if (rounds == PressureTestManager.getInstance().currentPressureTestModel.getOptionList().size()) {\n                    updateDataListener.testPass();\n                    // 处理完所有数据\n                    DataManager.getInstance().didGetResult = true;\n                }\n            }\n\n        }\n\n\n\n\n\n\n\n    }\n\n    public void getPressurePerAll(byte[] bytes) {\n        LogToFileUtils.write(\"蓝牙返回57504705XXXXX, 读取获取所有试压数据\");\n        int length = bytes[4] & 0xff;\n        int round = bytes[5] & 0xff;\n        int min = bytes[6] & 0xff;\n        if (round > 0 && round - 1 < testRoundTime.size()) {\n            int testTime = Integer.valueOf(testRoundTime.get(round - 1));\n\n\n            for (int i = min, j = 0, k = length - 2; k > 0; k -= 2, j++, i--) {\n                String p = \"\";\n                p = j + \"min\";\n//                Point point = DBManager.getInstance().getPoint(records.getTestId(), records.getGroupId(), round, p);\n//                if (point != null) {\n//                    int pressure = getPressureValue(bytes[7 + j * 2], bytes[7 + j * 2 + 1]);\n//                    point.setPressure(pressure + \"\");\n//                    point.setPoint(p);\n//                    DBManager.getInstance().insertOrReplace(point);\n//                    LogToFileUtils.write(\"getPressurePerAll:\" + \" testId:\" + records.getTestId() + \" groudId\" + records.getGroupId() + \" round:\" + round + \" point:\" + p + \" pressure:\" + pressure);\n//                }\n            }\n\n        }\n\n    }\n\n    public int getPressureValue(byte h, byte l) {\n        byte[] bytes = {0x00, 0x00, h, l};\n        //最终压力值\n        int pressure = Integer.parseInt(TransUtils.bytes2hex(bytes), 16);\n        return pressure;\n    }\n\n    public void selectTestGroup( List<Option> options, DeviceDataManagerListener listener){\n        this.mListener = listener;\n        didSuccessSendSelectParam = false;\n        try {\n            for (Option o : options) {\n                //休眠100ms\n                // 2 因新蓝牙芯片的接收字节数受限，APP将发送试压仪字节数调整为20字节/次，超过20个字节分多次发送，间隔20ms (后面改成100ms)\n                Thread.sleep(100);\n                String group = o.getGroup();\n                sendDatas(getNewOptionData(group, o));\n            }\n            //发送完设置参数,发送这个指令，试压仪开始试压工作\n            Thread.sleep(1000);\n            ;//间隔500ms，确保参数的指令发送完\n            //41541300\n            byte[] confirms = {0x41, 0x54, 0x13, 0x00};\n            sendDatas(confirms);\n\n            //三秒后如果不成功则返回失败\n            Handler handler = new Handler();\n            handler.postDelayed(() -> {\n                if (didSuccessSendSelectParam == false){\n                    if (DeviceDataManager.this.mListener != null){\n                        DeviceDataManager.this.mListener.fail();\n                    }\n                }\n\n\n            }, 3000);\n\n\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n\n    }\n\n\n    // 新协议\n    // 3 APP将后台已维护对应代理的超压压力上限值参数（即起始压力-组别压力>?kPa不允许进入测压阶段）以指令的形式发给试压仪，用于试压仪自动判断是否超压\n    private byte[] getNewOptionData(String groupId, Option option) {\n        byte[] datas = new byte[14];\n        datas[0] = 0x41;\n        datas[1] = 0x54;\n        datas[2] = 0x11;\n        datas[3] = 0x0A;\n        // 添加groupId\n        datas[4] = getIntByte(Integer.parseInt(groupId), 3);\n        // 加入 roundId\n        datas[5] = getIntByte(Integer.parseInt(option.getRoundId()), 3);\n        //测试压力值\n        long startPressure = (int)(Double.parseDouble(option.getStartPressure())) / 10;\n        datas[6] = getIntByte((int) startPressure, 3);\n        //分\n        int min = (int)(Double.parseDouble(option.getTestTime())) / 60;\n        datas[7] = getIntByte(min, 3);\n        //秒\n        int sec =  (int)(Double.parseDouble(option.getTestTime())) % 60;\n        datas[8] = getIntByte(sec, 3);\n        //降压\n        int decRange =  (int)(Double.parseDouble(option.getPressureDecRange())) / 10;\n        datas[9] = getIntByte(decRange, 3);\n        //升压\n        int riseRange =  (int)(Double.parseDouble(option.getPressureRiseRange()));\n        datas[10] = getIntByte(riseRange, 3);\n        String decisionStandard = option.getDecisionStandard();\n        //自动判断\n        if (decisionStandard != null && decisionStandard.equalsIgnoreCase(\"Y\")) {\n            datas[11] = 0x01;\n        } else {\n            datas[11] = 0x00;\n        }\n        //提示超压\n        int overpressure =  (int)(Double.parseDouble(option.getOverpressure()));\n        datas[12] = getIntByte(overpressure, 3);\n\n        // 超压上线\n        datas[13] = getIntByte( (int)(Double.parseDouble(option.getCannotpressureNum())), 3);\n\n        return datas;\n    }\n\n\n\n    //获取试压指令(旧协议)\n    private byte[] getOptionData(String groupId, List<Option> list) {\n        byte[] datas = new byte[5 + list.size() * 7];\n        datas[0] = 0x41;\n        datas[1] = 0x54;\n        datas[2] = 0x11;\n        datas[3] = getIntByte((list.size() * 7 + 1), 3);\n        datas[4] = getIntByte(Integer.parseInt(groupId), 3);\n        for (int i = 0; i < list.size(); i++) {\n            // 测试压力值\n            long startPressure = Long.parseLong(list.get(i).getStartPressure()) / 10;\n            datas[4 + 1 + 7 * i] = getIntByte((int) startPressure, 3);\n            //分\n            int min =  (int)(Double.parseDouble(list.get(i).getTestTime())) / 60;\n            datas[4 + 2 + 7 * i] = getIntByte(min, 3);\n            //秒\n            int sec = (int)(Double.parseDouble(list.get(i).getTestTime())) % 60;\n            datas[4 + 3 + 7 * i] = getIntByte(sec, 3);\n            // 降压\n            int decRange =  (int)(Double.parseDouble(list.get(i).getPressureDecRange())) / 10;\n            datas[4 + 4 + 7 * i] = getIntByte(decRange, 3);\n            // 升压\n            int riseRange =  (int)(Double.parseDouble(list.get(i).getPressureRiseRange()));\n            datas[4 + 5 + 7 * i] = getIntByte(riseRange, 3);\n            // 自动判断\n            String decisionStandard = list.get(i).getDecisionStandard();\n            if (decisionStandard != null && decisionStandard.equalsIgnoreCase(\"Y\")) {\n                datas[4 + 6 + 7 * i] = 0x01;\n            } else {\n                datas[4 + 6 + 7 * i] = 0x00;\n            }\n            //提示超压\n            int overpressure =  (int)(Double.parseDouble(list.get(i).getOverpressure()));\n            datas[4 + 7 + 7 * i] = getIntByte(overpressure, 3);\n        }\n        return datas;\n    }\n\n    public byte getIntByte(int number, int num) {\n        byte[] b = TransUtils.int2bytes(number);\n        return b[num];\n    }\n\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/rifeng/p2p/manager/DeviceDataManager.java	(revision a28551c00ca0f986bad3d72197623ec3e662eeaf)
-+++ app/src/main/java/com/rifeng/p2p/manager/DeviceDataManager.java	(date 1626234294000)
-@@ -11,7 +11,6 @@
- import com.google.gson.reflect.TypeToken;
- import com.rifeng.p2p.BuildConfig;
- import com.rifeng.p2p.R;
--import com.rifeng.p2p.activity.PressureTestActivity_ViewBinding;
- import com.rifeng.p2p.app.BaseApp;
- import com.rifeng.p2p.db.DBManager;
- import com.rifeng.p2p.entity.DeviceModel;
-Index: app/src/main/java/com/rifeng/p2p/viewmodel/PressureTestViewModel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.rifeng.p2p.viewmodel;\n\n\nimport android.app.Activity;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.graphics.Color;\nimport android.net.Uri;\nimport android.os.Handler;\nimport android.os.UserManager;\nimport android.provider.ContactsContract;\nimport android.util.Log;\nimport android.view.Gravity;\nimport android.view.View;\nimport android.widget.LinearLayout;\n\nimport com.bumptech.glide.Glide;\nimport com.google.gson.Gson;\nimport com.google.gson.JsonObject;\nimport com.luck.picture.lib.entity.LocalMedia;\nimport com.rifeng.p2p.R;\nimport com.rifeng.p2p.activity.PressureTestActivity;\nimport com.rifeng.p2p.app.BaseApp;\nimport com.rifeng.p2p.db.DBManager;\nimport com.rifeng.p2p.entity.AgentInfo;\nimport com.rifeng.p2p.entity.Agreement;\nimport com.rifeng.p2p.entity.LookupCode;\nimport com.rifeng.p2p.entity.PressureResultBean;\nimport com.rifeng.p2p.entity.PressureTestModel;\nimport com.rifeng.p2p.entity.User;\nimport com.rifeng.p2p.entity.UserAgencyPressureInfo;\nimport com.rifeng.p2p.http.RXHelper;\nimport com.rifeng.p2p.manager.DataManager;\nimport com.rifeng.p2p.manager.PressureTestManager;\nimport com.rifeng.p2p.util.GetPathFromUri;\nimport com.rifeng.p2p.util.StringUtils;\nimport com.rifeng.p2p.view.RFProgressHud;\nimport com.rifeng.p2p.widget.RFDialog;\n\nimport org.greenrobot.greendao.test.DbTest;\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\nimport java.util.concurrent.ExecutionException;\n\nimport io.reactivex.functions.Consumer;\nimport okhttp3.MediaType;\nimport okhttp3.MultipartBody;\nimport okhttp3.RequestBody;\n\npublic class PressureTestViewModel extends BaseViewModel{\n\n    public  final static String DEFAULT_TEST_MTTHOD = \"Testing Method\";\n\n\n    public void PressureTestActivity(Activity activity){\n        currentActivity = activity;\n    }\n\n    //通过网络接口获取TestMethod\n    public void getTestMethod(ViewModelListener listener){\n\n        currentListener = listener;\n\n        mRFService.getTestMethod()\n                .compose(RXHelper.RFFlowableTransformer())\n                .subscribe(new Consumer<List<LookupCode>>() {\n                    @Override\n                    public void accept(List<LookupCode> list) throws Exception {\n\n                        PressureTestManager.getInstance().testMethodList.clear();\n\n\n                        PressureTestManager.getInstance().testMethodList.addAll(list);\n\n                        LookupCode defaultCode = new LookupCode();\n                        defaultCode.setItem_name(DEFAULT_TEST_MTTHOD);\n                        PressureTestManager.getInstance().testMethodList.add(defaultCode);\n\n\n\n                        if (currentListener != null){\n\n                            //保存到本地\n                            DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(list);\n                            currentListener.success(\"\");\n                        }\n                    }\n                }, mThrowableConsumer, mFinishAction);\n\n    }\n\n    //从本地获取testmethod\n    public void getTestMethodFromLocal(ViewModelListener listener){\n\n        currentListener = listener;\n        List<LookupCode> testMethodList = DBManager.getInstance(BaseApp.getInstance()).getLookUpCodeList();\n        if (testMethodList != null && testMethodList.size() > 0){\n            currentListener.success(\"\");\n        }else{\n            currentListener.fail(\"no data\", ReturnCode.ReturnCodeOther);\n        }\n\n\n    }\n\n\n\n    //获取试压参数\n    public void getAgencyPressureInfo(ViewModelListener listener){\n\n        currentListener = listener;\n\n        User user = DataManager.getInstance().getUser();\n        String agencyId = user.getAgentId();\n\n\n        mRFService.getAgentInfo(agencyId, user.getCompanyId())\n                .compose(RXHelper.RFFlowableTransformer())\n                .subscribe(new Consumer<AgentInfo>() {\n                    @Override\n                    public void accept(AgentInfo agentInfo) {\n\n\n                        //保存试压参数到本地\n                        if (agentInfo.getAgreements() != null && agentInfo.getAgreements().size() > 0 && agentInfo.getOptions() != null && agentInfo.getOptions().size() > 0){\n\n                            Gson gson = new Gson();\n                            String jsonStr = gson.toJson(agentInfo);\n                            UserAgencyPressureInfo info = new UserAgencyPressureInfo();\n                            info.setUserId(user.getUserId());\n                            info.setPressureInfoJsonStr(jsonStr);\n                            DBManager.getInstance(BaseApp.getInstance()).insertOrReplace(info);\n\n                            //倒序\n                            //Collections.reverse(agentInfo.getOptions());\n                            PressureTestManager.getInstance().currentPressureTestModel.getAgreementList().clear();\n                            PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().clear();\n                            PressureTestManager.getInstance().currentPressureTestModel.getAgreementList().addAll(agentInfo.getAgreements());\n                            PressureTestManager.getInstance().currentPressureTestModel.getAllOptionList().addAll(agentInfo.getOptions());\n\n                        }else{\n\n                        }\n                        if (currentListener != null){\n                            currentListener.success(\"\");\n                        }\n                    }\n                }, mThrowableConsumer, mFinishAction);\n\n\n\n    }\n\n\n    public void getAgencyPressureInfoFromLocal(ViewModelListener listener){\n\n        currentListener = listener;\n\n        User user = DataManager.getInstance().getUser();\n        UserAgencyPressureInfo userAgencyPressureInfo = DBManager.getInstance(BaseApp.getInstance()).getAgencyPressureInfo(user.getUserId());\n        if (userAgencyPressureInfo != null){\n            Gson gson = new Gson();\n            AgentInfo agentInfo = gson.fromJson(userAgencyPressureInfo.getPressureInfoJsonStr(),AgentInfo.class);\n            if(currentListener != null){\n                currentListener.success(\"\");\n            }else{\n                currentListener.fail(\"\", ReturnCode.ReturnCodeOther);\n            }\n        }\n\n\n    }\n    //获取试压参数\n    public void getServerTime(ViewModelListener listener) {\n        currentListener = listener;\n        mRFService.getServerTime()\n                .compose(RXHelper.RFFlowableTransformer())\n                .subscribe(new Consumer<Map<String, String>>() {\n                    @Override\n                    public void accept(Map<String, String> map) {\n\n                        String timeStr = getTimeStr(Long.parseLong( map.get(\"currentDay\")));\n                        PressureTestManager.getInstance().currentPressureTestModel.setTestTimeStr(timeStr);\n                        PressureTestManager.getInstance().currentPressureTestModel.setTestTime(Long.parseLong( map.get(\"currentDay\")));\n\n\n                        Log.i(\"==============\", \"\" + timeStr);\n\n                        if (currentListener != null){\n                            currentListener.success(\"\");\n                        }\n                    }\n                }, mThrowableConsumer, mFinishAction);\n    }\n\n    public void getLocalTime(ViewModelListener listener){\n\n        currentListener = listener;\n\n        SimpleDateFormat sdf=new SimpleDateFormat(\"dd MMM yyyy hh:mm:ss aa\", Locale.US);\n        Date date = new Date();\n        String sd = sdf.format(date);      // 时间戳转换成时间\n        System.out.println(\"格式化结果：\" + sd);\n\n        PressureTestManager.getInstance().currentPressureTestModel.setTestTimeStr(sd);\n        PressureTestManager.getInstance().currentPressureTestModel.setTestTime(date.getTime());\n\n\n        if (currentListener != null){\n            currentListener.success(\"\");\n        }\n\n    }\n\n    public String getTimeStr(long interval){\n\n        SimpleDateFormat sdf=new SimpleDateFormat(\"dd MMM yyyy hh:mm:ss aa\", Locale.US);\n        String sd = sdf.format(new Date(Long.parseLong(String.valueOf(interval))));      // 时间戳转换成时间\n        System.out.println(\"格式化结果：\" + sd);\n\n        return sd;\n    }\n\n\n\n    void showNoticeDialog(Context context, String title, String message, String btnPositiveStr, int backgroundRes, String textColor, boolean cancelable, View.OnClickListener btnPositivelistener) {\n        try {\n            RFDialog.Builder builder = new RFDialog.Builder(context);\n            builder.setTitle(title);\n            builder.setMessage(message);\n            builder.setPositiveButton(btnPositiveStr, btnPositivelistener);\n            builder.setCancelable(cancelable);\n            Dialog dialog = builder.create();\n\n            LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) builder.getIDialog().getTitleView().getLayoutParams();\n            params.gravity = Gravity.LEFT;\n            builder.getIDialog().getTitleView().setGravity(Gravity.LEFT);\n            if (backgroundRes != 0) {\n                builder.getIDialog().getView().setBackgroundResource(backgroundRes);\n            }\n            if (!StringUtils.isNullOrEmpty(textColor)) {\n                builder.getIDialog().getTitleView().setTextColor(Color.parseColor(textColor));\n                builder.getIDialog().getMessageView().setTextColor(Color.parseColor(textColor));\n            }\n            dialog.show();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n\n    public void checkDeviceUniqueCode(String uniqueCode){\n\n    }\n\n    public void submitPressureTestData(ViewModelListener listener) {\n        currentListener = listener;\n\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n\n\n        User user = DataManager.getInstance().getUser();\n        JSONObject submitObj = new JSONObject();\n        JSONObject obj = null;\n        try {\n            obj = new JSONObject();\n            obj.put(\"engineerId\", user.getEngineerId());\n            obj.put(\"agencyId\", user.getAgentId());\n\n            obj.put(\"city\", currentModel.getAddress());\n            obj.put(\"projectName\", currentModel.getProjectName());\n            //SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            obj.put(\"testDate\", currentModel.getTestTimeStr());\n            obj.put(\"postCode\", currentModel.getPostCode());\n            obj.put(\"memo\", currentModel.getPipeBrandAndType());\n            obj.put(\"plumbingCompany\", currentModel.getCompany());\n            obj.put(\"groupId\",currentModel.getGroupId());\n            obj.put(\"testIdFromApp\",currentModel.getTempTestId());\n            obj.put(\"deviceUniqueCode\",currentModel.getDeviceUniqueId());\n            obj.put(\"testType\",currentModel.getTestType());\n\n//            obj.put(\"testBy\", mEditTestedBy.getText().toString());\n            if (currentModel.getTestMethodCode() != null){\n                obj.put(\"testMethod\", currentModel.getTestMethodCode());\n            }\n\n            //TODO:\n            obj.put(\"ccemail\", currentModel.getCcEmail());\n\n            obj.put(\"testResult\", currentModel.getCurrentState().equals(\"3\") ? \"PASS\" : \"FAIL\");\n\n            JSONArray pipeCodeArray = new JSONArray();\n\n            List<String> codeList = currentModel.getPipeCodeList();\n            for (int i = 0; i < codeList.size(); i++) {\n\n                pipeCodeArray.put(codeList.get(i));\n            }\n\n            submitObj.put(\"basicData\", obj);\n            submitObj.put(\"pipecode\",pipeCodeArray);\n            submitObj.put(\"history\",getHistoryString());\n\n\n\n\n        } catch (JSONException e) {\n            e.printStackTrace();\n            RFProgressHud.showErrorMsg( currentActivity,\"\");\n            return;\n        }\n\n\n        RequestBody body = RequestBody.create(MediaType.parse(\"application/json; charset=utf-8\"), submitObj.toString());\n\n\n        mRFService.submitPressureResult(body)\n                .compose(RXHelper.RFFlowableTransformer())\n                .subscribe(new Consumer<String>() {\n                    @Override\n                    public void accept(String testId) {\n\n\n                        if (currentListener != null){\n                            currentListener.success(testId);\n                        }\n                    }\n                }, mThrowableConsumer, mFinishAction);\n\n    }\n\n    public void uploadDiagrams(ViewModelListener listener) {\n        currentListener = listener;\n\n\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                Map<String, RequestBody> map = new HashMap<>();\n                List<LocalMedia> localPaths = PressureTestManager.getInstance().getMediaList();\n                localPaths.remove(\"plus\");\n//                Uri uri = Uri.parse(localPaths.get(0));\n                File file = null;\n                for (LocalMedia imgUrl : localPaths) {\n                    try {\n                        file = new File(imgUrl.getRealPath());\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                    }\n                }\n                MultipartBody.Part[] photo = new MultipartBody.Part[localPaths.size()];\n                for (int i = 0 ; i < localPaths.size() ; i++) {\n                    File file1 = null;\n                    try {\n                        file1 = Glide.with(currentActivity).downloadOnly().load(localPaths.get(i)).submit().get();\n                    } catch (ExecutionException e) {\n                        e.printStackTrace();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n//                    RequestBody requestFile = RequestBody.create(MediaType.parse(\"multipart/form-data\"), file);\n                    RequestBody requestFile = RequestBody.create(MediaType.parse(\"image/jpg\"), file);\n                    //注意：file就是与服务器对应的key,后面filename是服务器得到的文件名\n                    photo[i] = MultipartBody.Part.createFormData(\"files\", file.getName(), requestFile);\n                }\n                Map<String , String> testId = new HashMap<>();\n                testId.put(\"testId\", PressureTestManager.getInstance().currentPressureTestModel.getTestId());\n                mRFService.uploadPipeImage(photo , testId).compose(RXHelper.RFFlowableTransformer())\n                        .subscribe(new Consumer<String>() {\n                            @Override\n                            public void accept(String s) throws Exception {\n\n                                if (currentListener != null){\n                                    currentListener.success(s);\n                                }\n                            }\n                        }, mThrowableConsumer, mFinishAction);\n            }\n        }).start();\n    }\n\n    public String getHistoryString(){\n        PressureTestModel currentModel = PressureTestManager.getInstance().currentPressureTestModel;\n\n        List<PressureResultBean> resultArray = DBManager.getInstance(BaseApp.getInstance()).getResultListByTempTestId(currentModel.getTempTestId());\n\n        if (resultArray == null || resultArray.size() == 0) {\n            return \"\";\n        }\n\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"{\\\"record\\\":[\");\n        for (int i = 0; i < resultArray.size(); i++){\n            PressureResultBean resultBean = resultArray.get(i);\n            if (i != resultArray.size() - 1){\n                sb.append(String.format(\"{\\\"round\\\":\\\"%s\\\",\\\"decisionStandard\\\":\\\"%s\\\",\\\"startPressure\\\":\\\"%s\\\",\\\"history\\\":%s},\", resultBean.getRound(), resultBean.getDecisionStandard(), resultBean.getGroupPressure(), resultBean.getResult()));\n            }else{\n                sb.append(String.format(\"{\\\"round\\\":\\\"%s\\\",\\\"decisionStandard\\\":\\\"%s\\\",\\\"startPressure\\\":\\\"%s\\\",\\\"history\\\":%s}\", resultBean.getRound(), resultBean.getDecisionStandard(), resultBean.getGroupPressure(), resultBean.getResult()));\n\n            }\n        }\n\n        sb.append(\"]}\");\n\n        return sb.toString();\n    }\n\n\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/rifeng/p2p/viewmodel/PressureTestViewModel.java	(revision a28551c00ca0f986bad3d72197623ec3e662eeaf)
-+++ app/src/main/java/com/rifeng/p2p/viewmodel/PressureTestViewModel.java	(date 1626238277000)
-@@ -83,9 +83,9 @@
- 
-                         PressureTestManager.getInstance().testMethodList.addAll(list);
- 
--                        LookupCode defaultCode = new LookupCode();
--                        defaultCode.setItem_name(DEFAULT_TEST_MTTHOD);
--                        PressureTestManager.getInstance().testMethodList.add(defaultCode);
-+//                        LookupCode defaultCode = new LookupCode();
-+//                        defaultCode.setItem_name(DEFAULT_TEST_MTTHOD);
-+//                        PressureTestManager.getInstance().testMethodList.add(defaultCode);
- 
- 
- 
-Index: app/src/main/res/layout/popup_list_layout.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/popup_list_layout.xml	(date 1626241282000)
-+++ app/src/main/res/layout/popup_list_layout.xml	(date 1626241282000)
-@@ -0,0 +1,57 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="fill_parent"
-+    android:layout_height="wrap_content"
-+    android:background="#7f000000"
-+    android:gravity="center_horizontal"
-+    android:orientation="vertical">
-+    <LinearLayout
-+        android:id="@+id/pop_layout"
-+        android:layout_width="fill_parent"
-+        android:layout_height="wrap_content"
-+        android:layout_alignParentBottom="true"
-+        android:background="#ffffff"
-+        android:gravity="center_horizontal"
-+        android:orientation="vertical">
-+        <LinearLayout
-+            android:layout_width="match_parent"
-+            android:layout_height="46dp"
-+            android:orientation="horizontal"
-+            android:gravity="center"
-+            >
-+
-+
-+            <TextView
-+                android:layout_marginLeft="30dp"
-+                android:id="@+id/popup_titleview"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_weight="1"
-+                android:textColor="@color/Color_Word85"
-+                android:textAlignment="center"
-+                android:textSize="16sp"
-+                android:text="TestMethod" />
-+
-+            <ImageView
-+                android:id="@+id/popup_close_imageview"
-+                android:layout_marginRight="10dp"
-+                android:layout_width="20dp"
-+                android:layout_height="20dp"
-+                android:layout_weight="0"
-+                android:src="@mipmap/delete_image" />
-+
-+
-+        </LinearLayout>
-+
-+        <androidx.recyclerview.widget.RecyclerView
-+            android:id="@+id/dropdown_recyleView"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:layout_weight="1" />
-+
-+
-+    </LinearLayout>
-+
-+</RelativeLayout>
-\ No newline at end of file
-Index: app/src/main/res/anim/popup_in.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/anim/popup_in.xml	(date 1626241601000)
-+++ app/src/main/res/anim/popup_in.xml	(date 1626241601000)
-@@ -0,0 +1,9 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<set xmlns:android="http://schemas.android.com/apk/res/android" >
-+
-+    <translate
-+        android:duration="250"
-+        android:fromYDelta="100.0%"
-+        android:toYDelta="0.0" />
-+
-+</set>
-\ No newline at end of file
-Index: app/src/main/java/com/rifeng/p2p/activity/BaseActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.rifeng.p2p.activity;\n\n\nimport android.app.AlertDialog;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.text.method.ScrollingMovementMethod;\nimport android.view.Gravity;\nimport android.view.View;\nimport android.view.Window;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.app.AppCompatDelegate;\n\n\nimport com.rifeng.p2p.BuildConfig;\nimport com.rifeng.p2p.R;\nimport com.rifeng.p2p.app.BaseApp;\nimport com.rifeng.p2p.http.RFException;\nimport com.rifeng.p2p.http.RFService;\nimport com.rifeng.p2p.http.RFTokenException;\nimport com.rifeng.p2p.http.RetrofitFactory;\nimport com.rifeng.p2p.util.*;\nimport com.rifeng.p2p.widget.LoadingDialog;\nimport com.rifeng.p2p.widget.RFDialog;\n\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\nimport java.util.Map;\nimport java.util.Timer;\nimport java.util.TimerTask;\n\nimport butterknife.ButterKnife;\nimport io.reactivex.functions.Action;\nimport io.reactivex.functions.Consumer;\nimport okhttp3.MediaType;\nimport okhttp3.RequestBody;\n\nimport static com.rifeng.p2p.util.UIUtils.getContext;\nimport io.reactivex.functions.Action;\n\npublic abstract class BaseActivity extends AppCompatActivity {\n\n\n    protected RFService mRFService;\n    LoadingDialog mDialog;\n    private Context mContext;\n\n    protected Bundle saveInstan;\n    @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        DisplayUtil.setCustomDensity(this, getApplication());\n        super.onCreate(savedInstanceState);\n        mContext = this;\n        saveInstan =  savedInstanceState;\n        setContentView(initLayout());\n        ButterKnife.bind(this);\n        AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);\n        mRFService = RetrofitFactory.getInstance();\n        //将当前的activity添加到ActivityManager中\n        ActivityUtil.getInstance().addActivity(this);\n        initView();\n        initData();\n    }\n    protected abstract int initLayout();\n    protected abstract void initView();\n    protected abstract void initData();\n    //跳转到cls\n    public void  navigateTo(Class cls) {\n        Intent in = new Intent(mContext, cls);\n        startActivity(in);\n    }\n    public void navigateToWithBundle(Class cls, Bundle bundle) {\n        Intent in = new Intent(mContext, cls);\n        in.putExtras(bundle);\n        startActivity(in);\n    }\n    public void showToast(String msg){\n        Toast.makeText(mContext ,msg,Toast.LENGTH_SHORT ).show();\n    }\n    public void showToast(int msgId) {\n        Toast.makeText(BaseApp.getInstance(), getString(msgId), Toast.LENGTH_SHORT).show();\n    }\n\n    public void showLoading() {\n        if (mDialog == null) {\n            mDialog = new LoadingDialog(this);\n        }\n        if (!mDialog.isShowing()) {\n            mDialog.show();\n        }\n    }\n\n\n    public void hideDialog() {\n        if (mDialog != null && mDialog.isShowing()) {\n            mDialog.dismiss();\n        }\n    }\n\n    protected void showNoticeDialog(Context context, String title, String message, String btnPositiveStr, String btnNegativeStr, int backgroundRes, String textColor, boolean cancelable, View.OnClickListener btnPositivelistener, View.OnClickListener btnNegativelistener) {\n        try {\n            RFDialog.Builder builder = new RFDialog.Builder(context);\n            builder.setTitle(title);\n            builder.setMessage(message);\n            builder.setPositiveButton(btnPositiveStr, btnPositivelistener).setNegativeButton(btnNegativeStr, btnNegativelistener);\n            builder.setCancelable(cancelable);\n            Dialog dialog = builder.create();\n\n            LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) builder.getIDialog().getTitleView().getLayoutParams();\n            params.gravity = Gravity.LEFT;\n            builder.getIDialog().getTitleView().setGravity(Gravity.LEFT);\n            if (backgroundRes != 0) {\n                builder.getIDialog().getView().setBackgroundResource(backgroundRes);\n            }\n            builder.getIDialog().getMessageView().setMovementMethod(ScrollingMovementMethod.getInstance());\n            builder.getIDialog().getMessageView().setGravity(Gravity.LEFT);\n            if (!StringUtils.isNullOrEmpty(textColor)) {\n                builder.getIDialog().getTitleView().setTextColor(Color.parseColor(textColor));\n                builder.getIDialog().getMessageView().setTextColor(Color.parseColor(textColor));\n            }\n            dialog.show();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n    protected void insertVal(String key, String val) {\n        SharedPreferences sp = getSharedPreferences(\"sp_ttit\", MODE_PRIVATE);\n        SharedPreferences.Editor editor = sp.edit();\n        editor.putString(key, val);\n        editor.commit();\n    }\n    protected Action mFinishAction = new Action() {\n        @Override\n        public void run() throws Exception {\n            hideDialog();\n        }\n    };\n\n\n\n    //删除当前的Activity\n    public void removeCurrentActivity(){\n        ActivityUtil.getInstance().finishActivity(this);\n    }\n    //销毁所有的activity\n    public void removeAll(){\n        ActivityUtil.getInstance().finishAllActivity();\n    }\n\n\n    public Consumer<Throwable> mThrowableConsumer = new Consumer<Throwable>() {\n        @Override\n        public void accept(Throwable t) throws Exception {\n            hideDialog();\n            String msg;\n            if (t instanceof IOException) {\n                msg = getString(R.string.net_error);\n            } else if (t instanceof RFException) {\n                msg = t.getMessage();\n            }else if(t instanceof RFTokenException){\n                //token过期\n                msg = t.getMessage();\n                startActivity(new Intent(mContext, LoginActivity.class));\n            }\n            else {\n                if (BuildConfig.DEBUG) {\n                    msg = t.getStackTrace().toString();\n                } else\n                    msg = getString(R.string.unkown_error);\n            }\n            if (BuildConfig.DEBUG) {\n                t.printStackTrace();\n            }\n            hideDialog();\n            if(msg != null){\n                // 修复进去的时候白色toast\n                showToast(msg);\n            }\n\n        }\n    };\n\n    public RequestBody getRequestBody(Map<String, String> map){\n        RequestBody body = null;\n        try {\n            JSONObject obj = new JSONObject();\n            map.keySet();\n            for(Map.Entry<String, String> entry : map.entrySet()){\n                obj.put(entry.getKey(),entry.getValue());\n            }\n            System.out.println(\"json参数\" + obj);\n            body = RequestBody.create(MediaType.parse(\"application/json; charset=utf-8\"), obj.toString());\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        return body;\n    }\n\n    public void showLoadingDialog() {\n        if (this != null) {\n            this.showLoading();\n        }\n    }\n\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/rifeng/p2p/activity/BaseActivity.java	(revision a28551c00ca0f986bad3d72197623ec3e662eeaf)
-+++ app/src/main/java/com/rifeng/p2p/activity/BaseActivity.java	(date 1626222051000)
-@@ -175,6 +175,7 @@
-                 //token过期
-                 msg = t.getMessage();
-                 startActivity(new Intent(mContext, LoginActivity.class));
-+                BaseActivity.this.finish();
-             }
-             else {
-                 if (BuildConfig.DEBUG) {
-Index: app/src/main/res/layout/test_method_popup_layout.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/test_method_popup_layout.xml	(date 1626241898000)
-+++ app/src/main/res/layout/test_method_popup_layout.xml	(date 1626241898000)
-@@ -0,0 +1,16 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    >
-+
-+        <com.rifeng.p2p.widget.RFDropdownListView
-+            android:id="@+id/select_testmethod"
-+            android:layout_alignParentBottom="true"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:layout_weight="1">
-+
-+        </com.rifeng.p2p.widget.RFDropdownListView>
-+
-+</LinearLayout>
-\ No newline at end of file
-Index: app/src/main/res/anim/popup_out.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/anim/popup_out.xml	(date 1626241652000)
-+++ app/src/main/res/anim/popup_out.xml	(date 1626241652000)
-@@ -0,0 +1,9 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<set xmlns:android="http://schemas.android.com/apk/res/android" >
-+
-+    <translate
-+        android:duration="250"
-+        android:fromYDelta="0.0"
-+        android:toYDelta="100%" />
-+
-+</set>
-\ No newline at end of file
-Index: app/src/main/res/layout/pressure_test_layout.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    >\n\n       <!-- 顶部导航条   -->\n        <LinearLayout\n            android:id=\"@+id/ll_title\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"64dp\"\n            android:orientation=\"horizontal\"\n            android:background=\"#FFFFFF\"\n            android:layout_weight=\"0\"\n            android:gravity=\"center_vertical\"\n            >\n            <include layout=\"@layout/layout_toolbar\"></include>\n        </LinearLayout>\n\n        <ScrollView\n            android:layout_below=\"@+id/v_grap\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_weight=\"1\"\n            android:background=\"#F6F8FAFF\"\n            >\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                >\n\n                <View\n                    android:id=\"@+id/v_grap\"\n                    android:layout_below=\"@+id/ll_title\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"12dp\"></View>\n\n                <!--  basic data title-->\n                <LinearLayout\n                    android:id=\"@+id/basic_data_title_layout\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"49dp\"\n                    android:orientation=\"horizontal\"\n                    android:gravity=\"center\"\n                    android:background=\"#FFFFFF\"\n                    >\n                    <TextView\n                        android:id=\"@+id/basic_data_title\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_weight=\"1\"\n                        android:text=\"@string/pressuretest_basic_data\"\n                        android:textColor=\"@color/Color_Main\"\n                        android:layout_alignParentLeft=\"true\"\n                        android:textSize=\"16sp\" />\n                    <ImageView\n                        android:id=\"@+id/basic_data_open\"\n                        android:layout_width=\"25dp\"\n                        android:layout_height=\"25dp\"\n                        android:layout_marginRight=\"21dp\"\n                        android:layout_weight=\"0\"\n                        android:src=\"@mipmap/shrink\"\n                        />\n                </LinearLayout>\n\n                <!--    basic data 内容-->\n                <LinearLayout\n                    android:id=\"@+id/ll_basic_data\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:visibility=\"visible\"\n                    >\n                    <!--项目名称-->\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <com.rifeng.p2p.view.MyEditText\n\n                            android:id=\"@+id/basic_project_name\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:hint=\"@string/pressuretest_basic_project_name\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textColorHint=\"@color/Color_Word25\"\n                            android:textSize=\"@dimen/edit_hint_sizt\"\n                            android:drawableRight=\"@mipmap/delete_image\"\n                            android:paddingLeft=\"12dp\"\n                            android:paddingRight=\"12dp\"\n                            android:background=\"@color/transparent_background\"\n                            android:ems=\"20\"\n                            />\n                    </LinearLayout>\n                    <!--项目地址-->\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <com.rifeng.p2p.view.MyEditText\n\n                            android:id=\"@+id/basic_address\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:hint=\"@string/pressuretest_basic_address\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textColorHint=\"@color/Color_Word25\"\n                            android:textSize=\"@dimen/edit_hint_sizt\"\n                            android:drawableRight=\"@mipmap/delete_image\"\n                            android:paddingLeft=\"12dp\"\n                            android:paddingRight=\"12dp\"\n                            android:background=\"@color/transparent_background\"\n                            android:ems=\"10\"\n                            />\n                    </LinearLayout>\n                    <!--项目postcode-->\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <com.rifeng.p2p.view.MyEditText\n\n                            android:id=\"@+id/basic_post_code\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:hint=\"@string/pressuretest_basic_postCode\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textColorHint=\"@color/Color_Word25\"\n                            android:textSize=\"@dimen/edit_hint_sizt\"\n                            android:drawableRight=\"@mipmap/delete_image\"\n                            android:paddingLeft=\"12dp\"\n                            android:paddingRight=\"12dp\"\n                            android:background=\"@color/transparent_background\"\n                            android:ems=\"10\"\n                            />\n                    </LinearLayout>\n                    <!--项目test日期-->\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <com.rifeng.p2p.view.MyEditText\n\n                            android:id=\"@+id/basic_test_date\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:hint=\"@string/pressuretest_basic_test_time\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textColorHint=\"@color/Color_Word25\"\n                            android:textSize=\"@dimen/edit_hint_sizt\"\n                            android:paddingLeft=\"12dp\"\n                            android:paddingRight=\"12dp\"\n                            android:enabled=\"false\"\n                            android:background=\"@color/transparent_background\"\n                            android:ems=\"10\"\n                            />\n                    </LinearLayout>\n\n                    <!--公司-->\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <com.rifeng.p2p.view.MyEditText\n\n                            android:id=\"@+id/basic_company\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:hint=\"@string/pressuretest_basic_Company\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textColorHint=\"@color/Color_Word25\"\n                            android:textSize=\"@dimen/edit_hint_sizt\"\n                            android:paddingLeft=\"12dp\"\n                            android:paddingRight=\"12dp\"\n                            android:background=\"@color/transparent_background\"\n                            android:ems=\"10\"\n                            android:enabled=\"false\"\n                            />\n                    </LinearLayout>\n                    <!--Pipe brand and type-->\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <com.rifeng.p2p.view.MyEditText\n\n                            android:id=\"@+id/basic_pipe_brand_and_type\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:hint=\"@string/pressuretest_pipe_brand_and_type\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textColorHint=\"@color/Color_Word25\"\n                            android:textSize=\"@dimen/edit_hint_sizt\"\n                            android:drawableRight=\"@mipmap/delete_image\"\n                            android:paddingLeft=\"12dp\"\n                            android:paddingRight=\"12dp\"\n                            android:background=\"@color/transparent_background\"\n                            android:ems=\"10\"\n                            />\n                    </LinearLayout>\n\n                    <!--Pipe brand and type-->\n                    <FrameLayout\n\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:id=\"@+id/cc_email_bg_view\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <LinearLayout\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:layout_gravity=\"center\"\n                            android:gravity=\"center\">\n\n                            <TextView\n\n                                android:id=\"@+id/basic_ccemail\"\n                                android:layout_width=\"0dp\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_gravity=\"center\"\n                                android:layout_weight=\"1\"\n                                android:hint=\"@string/pressuretest_basic_cc_email\"\n                                android:textColor=\"@color/Color_Word85\"\n                                android:textColorHint=\"@color/Color_Word25\"\n                                android:textSize=\"@dimen/edit_hint_sizt\"\n                                android:paddingLeft=\"12dp\"\n                                android:paddingRight=\"12dp\"\n                                android:background=\"@color/transparent_background\"\n                                android:enabled=\"false\"\n                                android:singleLine=\"true\"\n                                android:ems=\"10\"\n                                />\n\n                            <ImageView\n                                android:id=\"@+id/ccemail_right_imageview\"\n                                android:layout_width=\"25dp\"\n                                android:layout_height=\"25dp\"\n                                android:layout_marginRight=\"12dp\"\n                                android:layout_weight=\"0\"\n                                android:src=\"@mipmap/jump\"\n                                />\n                        </LinearLayout>\n\n                        <LinearLayout\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:id=\"@+id/ccemail_bg_click_layout\"\n                            android:orientation=\"horizontal\">\n\n\n                        </LinearLayout>\n\n\n                    </FrameLayout>\n\n\n\n\n\n                    <!--TestMethod-->\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:gravity=\"center\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n                        <Spinner\n                            android:id=\"@+id/spinner_testmethod\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"match_parent\"\n                            android:layout_marginLeft=\"1dp\"\n                            android:layout_marginRight=\"1dp\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:background=\"@color/transparent_background\"\n                            android:overlapAnchor=\"false\"\n                            android:prompt=\"@string/test_method\">\n\n                        </Spinner>\n                    </LinearLayout>\n                </LinearLayout>\n                <View\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"12dp\">\n                </View>\n\n                <!--pressure Test title-->\n                <LinearLayout\n                    android:id=\"@+id/pressure_test_title_layout\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"49dp\"\n                    android:orientation=\"horizontal\"\n                    android:gravity=\"center\"\n                    android:background=\"#FFFFFF\"\n                    >\n                    <TextView\n                        android:id=\"@+id/pressure_test_title\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:layout_weight=\"1\"\n                        android:text=\"@string/pressuretest_title\"\n                        android:textColor=\"@color/Color_Main\"\n                        android:layout_alignParentLeft=\"true\"\n\n                        android:textSize=\"16sp\" />\n                    <ImageView\n                        android:id=\"@+id/pressure_test_open\"\n                        android:layout_width=\"25dp\"\n                        android:layout_height=\"25dp\"\n                        android:layout_marginRight=\"21dp\"\n                        android:layout_weight=\"0\"\n                        android:src=\"@mipmap/shrink\"\n                        />\n                </LinearLayout>\n\n\n\n            <LinearLayout\n                android:id=\"@+id/pressure_test_content_bg_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:visibility=\"visible\"\n                >\n                <!--blue_tooth_and_battery content-->\n\n                <LinearLayout\n                    android:id=\"@+id/blue_tooth_and_battery_layout\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:visibility=\"visible\"\n\n                    >\n\n                    <!--蓝牙连接-->\n                    <LinearLayout\n                        android:id=\"@+id/blue_tooth_bg\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:orientation=\"horizontal\"\n                        android:gravity=\"center\"\n                        android:visibility=\"visible\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n\n                        <View\n                            android:id=\"@+id/bluetooth_connect_dot_view\"\n                            android:layout_marginLeft=\"12dp\"\n                            android:layout_width=\"8dp\"\n                            android:layout_height=\"8dp\"\n                            android:layout_weight=\"0\"\n                            android:background=\"@drawable/dot_connnect\">\n\n                        </View>\n                        <TextView\n                            android:id=\"@+id/bluetooth_name_textView\"\n                            android:layout_width=\"0dp\"\n                            android:layout_height=\"match_parent\"\n                            android:layout_weight=\"1\"\n                            android:layout_marginLeft=\"5dp\"\n                            android:gravity=\"center\"\n                            android:text=\"Connected(Rifeng Guard)\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textAlignment=\"2\"\n                            android:textSize=\"14sp\" />\n                        <TextView\n                            android:id=\"@+id/blue_tooth_connect_textView\"\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"match_parent\"\n                            android:gravity=\"center\"\n                            android:text=\"Disconnect\"\n                            android:layout_marginRight=\"12dp\"\n                            android:textColor=\"@color/Color_Main\"\n                            android:layout_weight=\"0\"\n                            android:textSize=\"14sp\" />\n                    </LinearLayout>\n\n                    <!--电池状态-->\n                    <LinearLayout\n                        android:id=\"@+id/battery_status_bg\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginTop=\"12dp\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:orientation=\"horizontal\"\n                        android:gravity=\"center\"\n                        android:visibility=\"visible\"\n                        android:background=\"@drawable/shape_border\"\n                        >\n\n                        <View\n                            android:id=\"@+id/battery_dot_view\"\n                            android:layout_marginLeft=\"12dp\"\n                            android:layout_width=\"8dp\"\n                            android:layout_height=\"8dp\"\n                            android:layout_weight=\"0\"\n                            android:background=\"@drawable/dot_connnect\"></View>\n                        <TextView\n                            android:id=\"@+id/battery_power_textview\"\n                            android:layout_width=\"0dp\"\n                            android:layout_height=\"match_parent\"\n                            android:layout_weight=\"1\"\n                            android:layout_marginLeft=\"5dp\"\n                            android:gravity=\"center\"\n                            android:text=\"@string/pressuretest_battery_power\"\n                            android:textColor=\"@color/Color_Word85\"\n                            android:textAlignment=\"2\"\n                            android:textSize=\"14sp\" />\n\n                        <ImageView\n                            android:id=\"@+id/battery_info_imageview\"\n                            android:layout_width=\"22dp\"\n                            android:layout_height=\"13dp\"\n                            android:layout_weight=\"0\"\n                            android:gravity=\"center\"\n                            android:layout_marginRight=\"12dp\"\n                            android:src=\"@mipmap/power_0\" />\n                        <!--                        <TextView-->\n<!--                            android:id=\"@+id/battery_power_num_textview\"-->\n<!--                            android:layout_width=\"wrap_content\"-->\n<!--                            android:layout_height=\"match_parent\"-->\n<!--                            android:gravity=\"center\"-->\n<!--                            android:text=\"15%\"-->\n<!--                            android:layout_marginRight=\"12dp\"-->\n<!--                            android:textColor=\"@color/Color_Error\"-->\n<!--                            android:layout_weight=\"0\"-->\n<!--                            android:textSize=\"14sp\" />-->\n                    </LinearLayout>\n\n                    <TextView\n                        android:id=\"@+id/battery_power_low_tip_textview\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:gravity=\"center\"\n                        android:text=\"@string/pressuretest_battery_tip\"\n                        android:layout_marginRight=\"12dp\"\n                        android:layout_marginLeft=\"12dp\"\n                        android:textColor=\"@color/Color_Error\"\n                        android:textAlignment=\"2\"\n                        android:layout_weight=\"0\"\n                        android:textSize=\"12sp\" />\n\n\n                </LinearLayout>\n                <View\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"12dp\">\n                </View>\n\n                <!--选择组别-->\n                <LinearLayout\n                    android:id=\"@+id/select_test_group_bg\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:visibility=\"visible\"\n                    >\n                    <include layout=\"@layout/test_select_group\"></include>\n                </LinearLayout>\n\n\n                <include layout=\"@layout/testing_layout\"></include>\n\n\n                <!--测压结果-->\n                <include\n                    layout=\"@layout/test_result_data\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_width=\"match_parent\">\n                </include>\n\n                <!--管路图-->\n                <include\n                    layout=\"@layout/pipe_diagram_layout\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_width=\"match_parent\">\n                </include>\n\n                <!--管码-->\n                <include\n                    layout=\"@layout/pipe_code_layout\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_width=\"match_parent\">\n\n                </include>\n            </LinearLayout>\n\n                <!--<include layout=\"@layout/test_finish\"></include>-->\n            </LinearLayout>\n\n        </ScrollView>\n\n\n\n    <LinearLayout\n        android:id=\"@+id/bottom_view\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"56dp\"\n        android:orientation=\"horizontal\"\n        android:background=\"#FFFFFF\"\n        android:layout_weight=\"0\"\n        android:gravity=\"center_vertical\"\n        >\n\n\n        <Button\n            android:id=\"@+id/pressure_button_save\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"40dp\"\n            android:layout_weight=\"1\"\n            android:background=\"@drawable/save_btn_corner_shape\"\n            android:layout_marginLeft=\"12dp\"\n            android:textColor=\"@color/Color_Main\"\n            android:text=\"@string/Save\" />\n\n        <Button\n            android:id=\"@+id/pressure_button_submit\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"40dp\"\n            android:layout_weight=\"1\"\n            android:layout_marginLeft=\"12dp\"\n            android:layout_marginRight=\"12dp\"\n            android:background=\"@drawable/submit_btn_disable_bg\"\n            android:textColor=\"@color/white\"\n            android:text=\"@string/submit\" />\n    </LinearLayout>\n\n\n\n</LinearLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/pressure_test_layout.xml	(revision a28551c00ca0f986bad3d72197623ec3e662eeaf)
-+++ app/src/main/res/layout/pressure_test_layout.xml	(date 1626237198000)
-@@ -5,6 +5,7 @@
-     android:layout_width="match_parent"
-     android:layout_height="match_parent"
-     android:orientation="vertical"
-+    android:id="@+id/pressure_test_all_bg_layout"
-     >
- 
-        <!-- 顶部导航条   -->
-@@ -309,18 +310,54 @@
-                         android:gravity="center"
-                         android:background="@drawable/shape_border"
-                         >
--                        <Spinner
--                            android:id="@+id/spinner_testmethod"
-+                        <FrameLayout
-                             android:layout_width="match_parent"
-                             android:layout_height="match_parent"
--                            android:layout_marginLeft="1dp"
--                            android:layout_marginRight="1dp"
--                            android:textColor="@color/Color_Word85"
--                            android:background="@color/transparent_background"
--                            android:overlapAnchor="false"
--                            android:prompt="@string/test_method">
-+                            android:gravity="center">
-+
-+                            <TextView
-+
-+                                android:id="@+id/basic_testmethod"
-+                                android:layout_width="match_parent"
-+                                android:layout_height="wrap_content"
-+                                android:layout_gravity="center"
-+                                android:layout_weight="1"
-+                                android:background="@color/transparent_background"
-+                                android:clickable="true"
-+                                android:ems="10"
-+                                android:enabled="false"
-+                                android:hint="@string/pressuretest_basic_test_method"
-+                                android:paddingLeft="12dp"
-+                                android:paddingRight="12dp"
-+                                android:singleLine="true"
-+                                android:textColor="@color/Color_Word85"
-+                                android:textColorHint="@color/Color_Word25"
-+                                android:textSize="@dimen/edit_hint_sizt"
-+
-+                                />
-+
-+                            <LinearLayout
-+                                android:id="@+id/test_method_bg_click_layout"
-+                                android:layout_width="match_parent"
-+                                android:layout_height="match_parent"
-+                                android:background="@color/transparent_background"
-+                                android:orientation="vertical">
-+
-+                            </LinearLayout>                        </FrameLayout>
- 
--                        </Spinner>
-+
-+                        <!--                        <Spinner-->
-+<!--                            android:id="@+id/spinner_testmethod"-->
-+<!--                            android:layout_width="match_parent"-->
-+<!--                            android:layout_height="match_parent"-->
-+<!--                            android:layout_marginLeft="1dp"-->
-+<!--                            android:layout_marginRight="1dp"-->
-+<!--                            android:textColor="@color/Color_Word85"-->
-+<!--                            android:background="@color/transparent_background"-->
-+<!--                            android:overlapAnchor="false"-->
-+<!--                            android:prompt="@string/test_method">-->
-+
-+<!--                        </Spinner>-->
-                     </LinearLayout>
-                 </LinearLayout>
-                 <View
-Index: app/src/main/java/com/rifeng/p2p/api/Api.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.rifeng.p2p.api;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.util.Log;\n\nimport com.rifeng.p2p.activity.LoginActivity;\nimport com.rifeng.p2p.util.StringUtils;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.MediaType;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.RequestBody;\nimport okhttp3.Response;\n\nimport static android.content.Context.MODE_PRIVATE;\n\npublic class Api {\n    private static OkHttpClient client;\n    private static String requestUrl;\n    private static HashMap<String, Object> mParams;\n    public static Api api = new Api();\n\n    public Api() {\n\n    }\n    public static Api config(String url, HashMap<String, Object> params) {\n        client = new OkHttpClient.Builder()\n                .build();\n        requestUrl = ApiConfig.BASE_URl + url;\n        mParams = params;\n        return api;\n    }\n    public void postRequest(Context context, final TtitCallback callback) {\n        SharedPreferences sp = context.getSharedPreferences(\"sp_ttit\", MODE_PRIVATE);\n        String token = sp.getString(\"token\", \"\");\n        JSONObject jsonObject = new JSONObject(mParams);\n        String jsonStr = jsonObject.toString();\n        RequestBody requestBodyJson =\n                RequestBody.create(MediaType.parse(\"application/json;charset=utf-8\")\n                        , jsonStr);\n        //第三步创建Rquest\n        Request request = new Request.Builder()\n                .url(requestUrl)\n                .addHeader(\"contentType\", \"application/json;charset=UTF-8\")\n                .addHeader(\"token\", token)\n                .post(requestBodyJson)\n                .build();\n        //第四步创建call回调对象\n        final Call call = client.newCall(request);\n        //第五步发起请求\n        call.enqueue(new Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                Log.e(\"onFailure\", e.getMessage());\n                callback.onFailure(e);\n            }\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                final String result = response.body().string();\n                callback.onSuccess(result);\n            }\n        });\n    }\n\n    public void getRequest(Context context, final TtitCallback callback) {\n        SharedPreferences sp = context.getSharedPreferences(\"sp_ttit\", MODE_PRIVATE);\n        String token = sp.getString(\"token\", \"\");\n        String url = getAppendUrl(requestUrl, mParams);\n        Request request = new Request.Builder()\n                .url(url)\n                .addHeader(\"token\", token)\n                .get()\n                .build();\n        Call call = client.newCall(request);\n        call.enqueue(new Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                Log.e(\"onFailure\", e.getMessage());\n                callback.onFailure(e);\n            }\n\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                final String result = response.body().string();\n                try {\n                    JSONObject jsonObject = new JSONObject(result);\n                    String code = jsonObject.getString(\"code\");\n                    if (code.equals(\"401\")) {\n                        Intent in = new Intent(context, LoginActivity.class);\n                        context.startActivity(in);\n                    }\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n                callback.onSuccess(result);\n            }\n        });\n    }\n\n    private String getAppendUrl(String url, Map<String, Object> map) {\n        if (map != null && !map.isEmpty()) {\n            StringBuffer buffer = new StringBuffer();\n            Iterator<Entry<String, Object>> iterator = map.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Entry<String, Object> entry = iterator.next();\n                if (StringUtils.isEmpty(buffer.toString())) {\n                    buffer.append(\"?\");\n                } else {\n                    buffer.append(\"&\");\n                }\n                buffer.append(entry.getKey()).append(\"=\").append(entry.getValue());\n            }\n            url += buffer.toString();\n        }\n        return url;\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/rifeng/p2p/api/Api.java	(revision a28551c00ca0f986bad3d72197623ec3e662eeaf)
-+++ app/src/main/java/com/rifeng/p2p/api/Api.java	(date 1626221777000)
-@@ -1,5 +1,8 @@
- package com.rifeng.p2p.api;
- 
-+import android.app.Activity;
-+import android.app.ActivityManager;
-+import android.content.ComponentName;
- import android.content.Context;
- import android.content.Intent;
- import android.content.SharedPreferences;
-@@ -98,8 +101,10 @@
-                     JSONObject jsonObject = new JSONObject(result);
-                     String code = jsonObject.getString("code");
-                     if (code.equals("401")) {
-+
-                         Intent in = new Intent(context, LoginActivity.class);
-                         context.startActivity(in);
-+                        ((Activity)context).finish();
-                     }
-                 } catch (JSONException e) {
-                     e.printStackTrace();
-Index: app/src/main/java/com/rifeng/p2p/widget/RFDropdownListView.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/rifeng/p2p/widget/RFDropdownListView.java	(date 1626238051000)
-+++ app/src/main/java/com/rifeng/p2p/widget/RFDropdownListView.java	(date 1626238051000)
-@@ -0,0 +1,191 @@
-+package com.rifeng.p2p.widget;
-+
-+import android.annotation.SuppressLint;
-+import android.content.Context;
-+import android.graphics.Color;
-+
-+import android.util.AttributeSet;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.Button;
-+import android.widget.ImageView;
-+import android.widget.RelativeLayout;
-+import android.widget.TextView;
-+
-+
-+import androidx.annotation.NonNull;
-+import androidx.recyclerview.widget.LinearLayoutManager;
-+import androidx.recyclerview.widget.RecyclerView;
-+
-+import com.rifeng.p2p.R;
-+import com.rifeng.p2p.entity.AddressItem;
-+import com.rifeng.p2p.entity.LookupCode;
-+import com.rifeng.p2p.http.RXHelper;
-+import com.rifeng.p2p.http.RetrofitFactory;
-+
-+import java.util.ArrayList;
-+import java.util.List;
-+
-+import io.reactivex.functions.Action;
-+import io.reactivex.functions.Consumer;
-+
-+public class RFDropdownListView extends RelativeLayout {
-+
-+    private Context mC;
-+
-+    private View rootView;
-+    private RecyclerView recyclerView;
-+    private TextView titleView;
-+
-+    private ImageView closeImageView;
-+    public List<LookupCode> lookupCodeList;
-+
-+    public interface RFDropdownListViewListener {
-+        void onClickItem(LookupCode code);
-+        void onClickClose();
-+    }
-+    private RFDropdownListView.RFDropdownListViewListener dropdownListViewListener;
-+
-+
-+    public RFDropdownListView(Context context) {
-+        super(context);
-+        init(context);
-+    }
-+
-+    public RFDropdownListView(Context context, AttributeSet attrs) {
-+        super(context, attrs);
-+        init(context);
-+    }
-+
-+    public RFDropdownListView(Context context, AttributeSet attrs, int defStyleAttr) {
-+        super(context, attrs, defStyleAttr);
-+        init(context);
-+    }
-+
-+
-+
-+    private void init(Context context) {
-+        mC = context;
-+
-+        lookupCodeList = new ArrayList<LookupCode>();
-+        rootView = View.inflate(context, R.layout.popup_list_layout, this);
-+
-+        recyclerView = rootView.findViewById(R.id.dropdown_recyleView);
-+        closeImageView = rootView.findViewById(R.id.popup_close_imageview);
-+        titleView = rootView.findViewById(R.id.popup_titleview);
-+
-+        initList();
-+        initView();
-+        // loadData();
-+    }
-+
-+
-+    private void initList() {
-+        closeImageView.setOnClickListener(new OnClickListener() {
-+            @Override
-+            public void onClick(View v) {
-+               if (dropdownListViewListener != null){
-+                   dropdownListViewListener.onClickClose();
-+               }
-+            }
-+        });
-+
-+    }
-+    private DropdownListViewAdapter dropDownAdapter;
-+    private void initView() {
-+        //  addRadioButton("选择省");
-+        recyclerView.setLayoutManager(new LinearLayoutManager(mC));
-+        dropDownAdapter = new DropdownListViewAdapter(mC, lookupCodeList);
-+        recyclerView.setAdapter(dropDownAdapter);
-+//        if (addressBean != null) {
-+//            addressAdapter.setDatas(addressBean.getProvince());
-+//        }
-+    }
-+
-+    /**
-+     * 初始化数据
-+     * 拿assets下的json文件
-+     */
-+    @SuppressLint("CheckResult")
-+    private void loadData() {
-+
-+
-+
-+    }
-+
-+
-+
-+
-+    private class DropdownListViewAdapter extends RecyclerView.Adapter<DropdownListViewAdapter.DropdownListViewHolder> {
-+        private Context context;
-+        private List<LookupCode> datas;
-+
-+        public DropdownListViewAdapter(Context context, List<LookupCode> datas) {
-+            this.context = context;
-+            if (datas == null) {
-+                this.datas = new ArrayList<>();
-+            } else {
-+                this.datas = datas;
-+            }
-+        }
-+        public void setDatas(List<LookupCode> datas) {
-+            if (datas == null) {
-+                this.datas = new ArrayList<>();
-+            } else {
-+                this.datas = datas;
-+            }
-+            notifyDataSetChanged();
-+        }
-+        @NonNull
-+        @Override
-+        public DropdownListViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-+            return new DropdownListViewHolder(LayoutInflater.from(context).inflate(R.layout.item_popup_list, parent, false));
-+        }
-+        @SuppressLint("RecyclerView")
-+        @Override
-+        public void onBindViewHolder(@NonNull DropdownListViewHolder holder, final int position) {
-+            holder.tv.setText(datas.get(position).getItem_name());
-+            holder.tv.setOnClickListener(new OnClickListener() {
-+                @SuppressLint("ResourceAsColor")
-+                @Override
-+                public void onClick(View view) {
-+                    //selectPostion(datas.get(position), true);
-+                    if (dropdownListViewListener!= null){
-+                        dropdownListViewListener.onClickItem(datas.get(position));
-+                    }
-+                    holder.tv.setTextColor(R.color.Color_Main);
-+                }
-+            });
-+            holder.itemView.setOnClickListener(new OnClickListener() {
-+                @Override
-+                public void onClick(View v) {
-+
-+                }
-+            });
-+        }
-+        @Override
-+        public int getItemCount() {
-+            return datas.size();
-+        }
-+        class DropdownListViewHolder extends RecyclerView.ViewHolder {
-+
-+            public TextView tv;
-+
-+            public DropdownListViewHolder(@NonNull View itemView) {
-+                super(itemView);
-+                tv = itemView.findViewById(R.id.tv);
-+            }
-+        }
-+    }
-+
-+    public void setDropdownListViewListener(RFDropdownListViewListener dropdownListViewListener) {
-+        this.dropdownListViewListener = dropdownListViewListener;
-+    }
-+
-+    public void setLookupCodeList(List<LookupCode> lookupCodeList) {
-+        this.lookupCodeList.clear();
-+        this.lookupCodeList.addAll(lookupCodeList);
-+        dropDownAdapter.notifyDataSetChanged();
-+    }
-+}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_7_14_21_1_55_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_7_14_21_1_55_PM__Default_Changelist_.xml	(revision 771bcd4371bc13faa9050bfa2203e656e47b5184)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_7_14_21_1_55_PM__Default_Changelist_.xml	(revision 771bcd4371bc13faa9050bfa2203e656e47b5184)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_7_14_21_1_55_PM_[Default_Changelist]" date="1626242119027" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_7_14_21_1_55_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 7/14/21 1:55 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 771bcd4371bc13faa9050bfa2203e656e47b5184)
+++ .idea/runConfigurations.xml	(date 1626836468453)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: app/src/main/java/com/rifeng/p2p/adapter/RecyclerViewListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rifeng.p2p.adapter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.rifeng.p2p.R;\r\nimport com.rifeng.p2p.entity.PressureRecord;\r\nimport com.rifeng.p2p.entity.Report;\r\nimport com.scwang.smartrefresh.layout.api.RefreshLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * Created by caizhiming on 2016/8/13.\r\n */\r\n\r\npublic class RecyclerViewListAdapter extends RecyclerView.Adapter<RecyclerViewListAdapter.ItemViewHolder>{\r\n\r\n    private final Context mContext;\r\n    private final ArrayList<PressureRecord> mData = new ArrayList<>();\r\n    private RefreshLayout mRefreshLayout;\r\n\r\n    public RecyclerViewListAdapter(Context context){\r\n        mContext =context;\r\n    }\r\n    public void setData(List<PressureRecord> data){\r\n        mData.clear();\r\n        mData.addAll(data);\r\n        notifyDataSetChanged();\r\n    }\r\n    @Override\r\n    public ItemViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        LayoutInflater inflater = LayoutInflater.from(mContext);\r\n        View view = inflater.inflate(R.layout.item_report_layout,parent,false);\r\n        return new ItemViewHolder(view);\r\n    }\r\n    @SuppressLint(\"ResourceAsColor\")\r\n    @Override\r\n    public void onBindViewHolder(ItemViewHolder holder, int position) {\r\n\r\n        LayoutInflater inflater = LayoutInflater.from(mContext);\r\n        View view = inflater.inflate(R.layout.item_report_layout,null,false);\r\n        System.out.println(\"数据长度1\" + mData.size());\r\n        if(holder instanceof ItemViewHolder){\r\n            holder.bindData(mData.get(position),position);\r\n        }\r\n        PressureRecord report = mData.get(position);\r\n\r\n        if ( \"fail\".equalsIgnoreCase(report.getTestResult())){ //当状态等于啥时，设置相应的颜色\r\n            holder.llTestStatus.setBackgroundResource(R.drawable.item_fail);\r\n            holder.Imfinish.setImageResource(R.mipmap.not_pass);\r\n            holder.tvTestStatus.setTextColor(view.getResources().getColor(R.color.Color_Fail_Text));\r\n        }\r\n        if (\"pass\".equalsIgnoreCase(report.getTestResult())){\r\n            holder.llTestStatus.setBackgroundResource(R.drawable.item_pass);\r\n            holder.Imfinish.setImageResource(R.mipmap.pass_2x);\r\n            holder.tvTestStatus.setTextColor(view.getResources().getColor(R.color.Color_Pass_Text));\r\n        }\r\n    }\r\n    protected void closeLoadMore() {\r\n        mRefreshLayout.finishLoadMore(false);\r\n    }\r\n    @Override\r\n    public int getItemCount() {\r\n        return mData.size();\r\n    }\r\n    public class ItemViewHolder extends RecyclerView.ViewHolder{\r\n        private final TextView testData;\r\n        private final TextView companyName;\r\n        private final TextView testResult;\r\n        private final TextView email;\r\n        private final TextView mobilePhone;\r\n        private final TextView testingMethod;\r\n        private final TextView projectName;\r\n        private final LinearLayout llTestStatus;\r\n        private final TextView tvTestStatus;\r\n        private Button btnEmail;\r\n        private final Button btnReport;\r\n        private final ImageView Imfinish;\r\n\r\n        public ItemViewHolder(View root){\r\n            super(root);\r\n            testData = itemView.findViewById(R.id.tv_test_time);\r\n            testResult = itemView.findViewById(R.id.tv_test_status);\r\n            companyName = itemView.findViewById(R.id.tv_company);\r\n            email = itemView.findViewById(R.id.tv_email);\r\n            mobilePhone = itemView.findViewById(R.id.tv_mobile_phone);\r\n            testingMethod = itemView.findViewById(R.id.tv_testing_method);\r\n            btnEmail = itemView.findViewById(R.id.btn_email);\r\n            btnReport = itemView.findViewById(R.id.btn_report);\r\n            llTestStatus = itemView.findViewById(R.id.ll_test_status);\r\n            Imfinish = itemView.findViewById(R.id.im_finish);\r\n            tvTestStatus = itemView.findViewById(R.id.tv_test_status);\r\n            projectName = itemView.findViewById(R.id.tv_project_name);\r\n\r\n            btnEmail = itemView.findViewById(R.id.btn_email);\r\n        }\r\n        public void bindData(final PressureRecord data, final int pos) {\r\n            testData.setText(data.getTestDate());\r\n            companyName.setText(data.getCompanyName());\r\n            testResult.setText(data.getTestResult());\r\n            email.setText(data.getEmail());\r\n            mobilePhone.setText(data.getMobileNumber());\r\n            testingMethod.setText(data.getTestMethod());\r\n            projectName.setText(data.getProjectName());\r\n\r\n\r\n            btnEmail.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    if (buttonInterface != null){\r\n                        buttonInterface.onClickEmail(v , mData.get(getLayoutPosition()));\r\n                    }\r\n                }\r\n            });\r\n            btnReport.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    if (buttonInterface != null){\r\n                        buttonInterface.onClickReport(v , mData.get(getLayoutPosition()));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public void clear() {\r\n        this.mData.clear();\r\n    }\r\n\r\n    /**\r\n     * 当点击RecyclerView某条的监听\r\n     */\r\n    public interface OnItemClickListener{\r\n        /**\r\n         * 当RecyclerView某个被点击的时候回调\r\n         * @param view 点击item的视图\r\n         * @param data 点击得到的数据\r\n         */\r\n        void onItemClick(View view, PressureRecord data);\r\n    }\r\n    private OnItemClickListener onItemClickListener;\r\n    /**\r\n     * 设置RecyclerView某个监听\r\n     */\r\n    public  void setOnItemClickListener(RecyclerViewListAdapter.OnItemClickListener onItemClickListener){\r\n        this.onItemClickListener = onItemClickListener;\r\n    }\r\n\r\n    private ButtonInterface buttonInterface;\r\n\r\n    /**\r\n     *按钮点击事件需要的方法\r\n     */\r\n    public void buttonSetOnclick(ButtonInterface buttonInterface){\r\n        this.buttonInterface=buttonInterface;\r\n    }\r\n\r\n    /**\r\n     * 按钮点击事件对应的接口\r\n     */\r\n    public interface ButtonInterface{\r\n        void onClickEmail(View view, PressureRecord pressureRecord);\r\n        void onClickReport(View view, PressureRecord pressureRecord);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rifeng/p2p/adapter/RecyclerViewListAdapter.java	(revision 771bcd4371bc13faa9050bfa2203e656e47b5184)
+++ app/src/main/java/com/rifeng/p2p/adapter/RecyclerViewListAdapter.java	(date 1626836468437)
@@ -112,6 +112,7 @@
             email.setText(data.getEmail());
             mobilePhone.setText(data.getMobileNumber());
             testingMethod.setText(data.getTestMethod());
+
             projectName.setText(data.getProjectName());
 
 
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/PressureResultBeanDao.java app/src/main/java/com/rifeng/p2p/db/greendao/PressureResultBeanDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/LastDeviceTestIdDao.java app/src/main/java/com/rifeng/p2p/db/greendao/LastDeviceTestIdDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/PipeDiagramModelDao.java app/src/main/java/com/rifeng/p2p/db/greendao/PipeDiagramModelDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/PressureTestModelDao.java app/src/main/java/com/rifeng/p2p/db/greendao/PressureTestModelDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/LookupCodeDao.java app/src/main/java/com/rifeng/p2p/db/greendao/LookupCodeDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/DaoSession.java app/src/main/java/com/rifeng/p2p/db/greendao/DaoSession.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/UserAgencyPressureInfoDao.java app/src/main/java/com/rifeng/p2p/db/greendao/UserAgencyPressureInfoDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/DaoMaster.java app/src/main/java/com/rifeng/p2p/db/greendao/DaoMaster.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/BleDataBeanDao.java app/src/main/java/com/rifeng/p2p/db/greendao/BleDataBeanDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/AutoSubmitResultDao.java app/src/main/java/com/rifeng/p2p/db/greendao/AutoSubmitResultDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/PointDao.java app/src/main/java/com/rifeng/p2p/db/greendao/PointDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/PipeCodeModelDao.java app/src/main/java/com/rifeng/p2p/db/greendao/PipeCodeModelDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/BleRecordsDao.java app/src/main/java/com/rifeng/p2p/db/greendao/BleRecordsDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/HistoryRecordBeanDao.java app/src/main/java/com/rifeng/p2p/db/greendao/HistoryRecordBeanDao.java
diff --git app/src/main/java/com/rifeng/p2p/db/greendao/UserForeManBeanDao.java app/src/main/java/com/rifeng/p2p/db/greendao/UserForeManBeanDao.java
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_6_2_21_9_52_AM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_6_2_21_9_52_AM__Default_Changelist_.xml
